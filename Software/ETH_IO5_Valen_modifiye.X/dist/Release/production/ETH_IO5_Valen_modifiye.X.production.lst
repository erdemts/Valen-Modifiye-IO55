

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jun 07 18:31:07 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,delta=2
    20                           	psect	text717,local,class=CODE,delta=2
    21                           	psect	text718,local,class=CODE,delta=2
    22                           	psect	text725,local,class=CODE,delta=2
    23                           	psect	text726,local,class=CODE,delta=2
    24                           	psect	text744,local,class=CODE,delta=2
    25                           	psect	text745,local,class=CODE,delta=2
    26                           	psect	text746,local,class=CODE,delta=2
    27                           	psect	text747,local,class=CODE,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text753,local,class=CODE,delta=2
    30                           	psect	pa_nodes,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32  000A                     	;#
    33                           
    34                           	psect	config
    35  2007  E02C               	dw	57388	;#
    36                           
    37                           	psect	eeprom_data
    38  0000  0031 0030 0000     	db	49,48,0,0,0,43,48,48	;#
      +       0000 0000 002B     
      +       0030 0030          
    39                           
    40                           	psect	strings
    41  0800                     __pstrings:	
    42  0800                     stringtab:	
    43                           ;	global	stringdir,stringtab,__stringbase
    44                           
    45  0800                     stringcode:	
    46                           ;	String table - string pointers are 1 byte each
    47                           
    48  0800                     stringdir:	
    49  0800  3008               	movlw	high stringdir
    50  0801  008A               	movwf	10
    51  0802  0804               	movf	4,w
    52  0803  0A84               	incf	4,f
    53  0804  0782               	addwf	2,f
    54  0805                     __stringbase:	
    55  0805  3400               	retlw	0
    56  0806                     _T1:	
    57  0806  34CE               	retlw	206
    58  0807  34FF               	retlw	255
    59  0808  34D8               	retlw	216
    60  0809  34FF               	retlw	255
    61  080A  34EC               	retlw	236
    62  080B  34FF               	retlw	255
    63  080C  3400               	retlw	0
    64  080D  3400               	retlw	0
    65  080E  3414               	retlw	20
    66  080F  3400               	retlw	0
    67  0810  3428               	retlw	40
    68  0811  3400               	retlw	0
    69  0812  343C               	retlw	60
    70  0813  3400               	retlw	0
    71  0814  3450               	retlw	80
    72  0815  3400               	retlw	0
    73  0816  3464               	retlw	100
    74  0817  3400               	retlw	0
    75  0818  3478               	retlw	120
    76  0819  3400               	retlw	0
    77  081A  348C               	retlw	140
    78  081B  3400               	retlw	0
    79  081C                     _T2:	
    80  081C  34D7               	retlw	215
    81  081D  34FF               	retlw	255
    82  081E  34EB               	retlw	235
    83  081F  34FF               	retlw	255
    84  0820  34FF               	retlw	255
    85  0821  34FF               	retlw	255
    86  0822  3413               	retlw	19
    87  0823  3400               	retlw	0
    88  0824  3427               	retlw	39
    89  0825  3400               	retlw	0
    90  0826  343B               	retlw	59
    91  0827  3400               	retlw	0
    92  0828  344F               	retlw	79
    93  0829  3400               	retlw	0
    94  082A  3463               	retlw	99
    95  082B  3400               	retlw	0
    96  082C  3477               	retlw	119
    97  082D  3400               	retlw	0
    98  082E  348B               	retlw	139
    99  082F  3400               	retlw	0
   100  0830  3496               	retlw	150
   101  0831  3400               	retlw	0
   102  0832                     _V1:	
   103  0832  3413               	retlw	19
   104  0833  3405               	retlw	5
   105  0834  34DF               	retlw	223
   106  0835  3404               	retlw	4
   107  0836  3475               	retlw	117
   108  0837  3404               	retlw	4
   109  0838  340A               	retlw	10
   110  0839  3404               	retlw	4
   111  083A  349D               	retlw	157
   112  083B  3403               	retlw	3
   113  083C  3430               	retlw	48
   114  083D  3403               	retlw	3
   115  083E  34C0               	retlw	192
   116  083F  3402               	retlw	2
   117  0840  344F               	retlw	79
   118  0841  3402               	retlw	2
   119  0842  34DC               	retlw	220
   120  0843  3401               	retlw	1
   121  0844  3469               	retlw	105
   122  0845  3401               	retlw	1
   123  0846  34F3               	retlw	243
   124  0847  3400               	retlw	0
   125  0848                     _V2:	
   126  0848  34E4               	retlw	228
   127  0849  3404               	retlw	4
   128  084A  347A               	retlw	122
   129  084B  3404               	retlw	4
   130  084C  340F               	retlw	15
   131  084D  3404               	retlw	4
   132  084E  34A3               	retlw	163
   133  084F  3403               	retlw	3
   134  0850  3435               	retlw	53
   135  0851  3403               	retlw	3
   136  0852  34C6               	retlw	198
   137  0853  3402               	retlw	2
   138  0854  3454               	retlw	84
   139  0855  3402               	retlw	2
   140  0856  34E2               	retlw	226
   141  0857  3401               	retlw	1
   142  0858  346F               	retlw	111
   143  0859  3401               	retlw	1
   144  085A  34F9               	retlw	249
   145  085B  3400               	retlw	0
   146  085C  34B7               	retlw	183
   147  085D  3400               	retlw	0
   148  085E                     _ROLE:	
   149  085E  3452               	retlw	82
   150  085F  344F               	retlw	79
   151  0860  344C               	retlw	76
   152  0861  3445               	retlw	69
   153  0862  3400               	retlw	0
   154  0863                     _ISI:	
   155  0863  3449               	retlw	73
   156  0864  3453               	retlw	83
   157  0865  3449               	retlw	73
   158  0866  3400               	retlw	0
   159  0867                     _TMO:	
   160  0867  3454               	retlw	84
   161  0868  344D               	retlw	77
   162  0869  344F               	retlw	79
   163  086A  3400               	retlw	0
   164  001F                     _ADCON0bits	set	31
   165  001E                     _ADRESH	set	30
   166  000B                     _INTCON	set	11
   167  0005                     _PORTA	set	5
   168  0006                     _PORTB	set	6
   169  0006                     _PORTBbits	set	6
   170  0007                     _PORTC	set	7
   171  0007                     _PORTCbits	set	7
   172  0008                     _PORTD	set	8
   173  0008                     _PORTDbits	set	8
   174  0009                     _PORTE	set	9
   175  001A                     _RCREG	set	26
   176  0001                     _TMR0	set	1
   177  0019                     _TXREG	set	25
   178  00C3                     _ADDEN	set	195
   179  0018                     _CARRY	set	24
   180  00C4                     _CREN	set	196
   181  00C2                     _FERR	set	194
   182  005F                     _GIE	set	95
   183  00C1                     _OERR	set	193
   184  005E                     _PEIE	set	94
   185  0065                     _RCIF	set	101
   186  00C6                     _RX9	set	198
   187  00C7                     _SPEN	set	199
   188  005D                     _T0IE	set	93
   189  005A                     _T0IF	set	90
   190  0064                     _TXIF	set	100
   191  009F                     _ADCON1bits	set	159
   192  009E                     _ADRESL	set	158
   193  0081                     _OPTION_REG	set	129
   194  008F                     _OSCCON	set	143
   195  008C                     _PIE1	set	140
   196  008D                     _PIE2	set	141
   197  0099                     _SPBRG	set	153
   198  0085                     _TRISA	set	133
   199  0086                     _TRISB	set	134
   200  0086                     _TRISBbits	set	134
   201  0087                     _TRISC	set	135
   202  0087                     _TRISCbits	set	135
   203  0088                     _TRISD	set	136
   204  0089                     _TRISE	set	137
   205  0095                     _WPUB	set	149
   206  04C2                     _BRGH	set	1218
   207  0465                     _RCIE	set	1125
   208  04C4                     _SYNC	set	1220
   209  04C6                     _TX9	set	1222
   210  04C5                     _TXEN	set	1221
   211  0464                     _TXIE	set	1124
   212  0107                     _CM1CON0	set	263
   213  0108                     _CM2CON0	set	264
   214  010D                     _EEADR	set	269
   215  0105                     _WDTCON	set	261
   216  083F                     _C1ON	set	2111
   217  0847                     _C2ON	set	2119
   218  0188                     _ANSEL	set	392
   219  0189                     _ANSELH	set	393
   220  0189                     _ANSELHbits	set	393
   221  018C                     _EECON1	set	396
   222  018D                     _EECON2	set	397
   223  0C3B                     _BRG16	set	3131
   224  0C60                     _RD	set	3168
   225  0C61                     _WR	set	3169
   226  0C62                     _WREN	set	3170
   227                           
   228                           	psect	nvBANK1
   229  00CC                     __pnvBANK1:	
   230  00CC                     _tim10Hz:	
   231  00CC                     	ds	1
   232  00CD                     _tim1sec:	
   233  00CD                     	ds	1
   234  00CE                     _tim2Hz:	
   235  00CE                     	ds	1
   236  010C                     _EEDATA	set	268
   237                           
   238                           	psect	cinit
   239  0B36                     start_initialization:	
   240  0B36  30A0               	movlw	low __pbssBANK1
   241                           
   242                           ; Clear objects allocated to BITCOMMON
   243  0B37  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   244                           
   245                           ; Clear objects allocated to COMMON
   246  0B38  01F9               	clrf	__pbssCOMMON& (0+127)
   247  0B39  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   248  0B3A  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   249  0B3B  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   250                           
   251                           ; Clear objects allocated to BANK0
   252  0B3C  01EF               	clrf	__pbssBANK0& (0+127)
   253                           
   254                           ; Clear objects allocated to BANK1
   255  0B3D  1383               	bcf	3,7	;select IRP bank0
   256  0B3E  0084               	movwf	4
   257  0B3F  30C6               	movlw	low (__pbssBANK1+38)
   258  0B40  120A  158A  2318   	fcall	clear_ram
      +       120A  158A         
   259  0B45  3090               	movlw	low __pbssBANK3
   260                           
   261                           ; Clear objects allocated to BANK3
   262  0B46  1783               	bsf	3,7	;select IRP bank2
   263  0B47  0084               	movwf	4
   264  0B48  30CC               	movlw	low (__pbssBANK3+60)
   265  0B49  120A  158A  2318   	fcall	clear_ram
      +       120A  158A         
   266                           
   267                           ; Clear objects allocated to BANK2
   268  0B4E  3010               	movlw	low __pbssBANK2
   269  0B4F  0084               	movwf	4
   270  0B50  304C               	movlw	low (__pbssBANK2+60)
   271  0B51  120A  158A  2318   	fcall	clear_ram
   272  0B54                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  0B54  0183               	clrf	3
   276  0B55  120A  158A  2DB5   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bitbssCOMMON
   279  03C0                     __pbitbssCOMMON:	
   280  03C0                     _RELAY_1_Timer_En:	
   281  03C0                     	ds	1
   282  03C1                     _RELAY_2_Timer_En:	
   283  03C1                     	ds	1
   284  03C2                     _RELAY_3_Timer_En:	
   285  03C2                     	ds	1
   286  03C3                     _RELAY_4_Timer_En:	
   287  03C3                     	ds	1
   288  03C4                     _RELAY_5_Timer_En:	
   289  03C4                     	ds	1
   290  03C5                     _communicationControlTimer_En:	
   291  03C5                     	ds	1
   292  03C6                     _timeoutFlag:	
   293  03C6                     	ds	1
   294                           
   295                           	psect	bssCOMMON
   296  0079                     __pbssCOMMON:	
   297  0079                     _RELAY_1_Timer:	
   298  0079                     	ds	1
   299  007A                     _RELAY_2_Timer:	
   300  007A                     	ds	1
   301  007B                     _uartTransmitBufferR:	
   302  007B                     	ds	1
   303  007C                     _uartTransmitBufferW:	
   304  007C                     	ds	1
   305                           
   306                           	psect	bssBANK0
   307  006F                     __pbssBANK0:	
   308  006F                     _RELAY_3_Timer:	
   309  006F                     	ds	1
   310                           
   311                           	psect	bssBANK1
   312  00A0                     __pbssBANK1:	
   313  00A0                     _printBuffer:	
   314  00A0                     	ds	6
   315  00A6                     _commandBuffer:	
   316  00A6                     	ds	4
   317  00AA                     _communicationControlTimer:	
   318  00AA                     	ds	2
   319  00AC                     _currentTemperature:	
   320  00AC                     	ds	2
   321  00AE                     _temperature_mV:	
   322  00AE                     	ds	2
   323  00B0                     _RELAY_4_Timer:	
   324  00B0                     	ds	1
   325  00B1                     _RELAY_5_Timer:	
   326  00B1                     	ds	1
   327  00B2                     _commandCharCounter:	
   328  00B2                     	ds	1
   329  00B3                     _dataCounter:	
   330  00B3                     	ds	1
   331  00B4                     _inputPort:	
   332  00B4                     	ds	1
   333  00B5                     _state:	
   334  00B5                     	ds	1
   335  00B6                     _tim1min:	
   336  00B6                     	ds	1
   337  00B7                     _timer:	
   338  00B7                     	ds	1
   339  00B8                     _uartReceiveBufferR:	
   340  00B8                     	ds	1
   341  00B9                     _uartReceiveBufferW:	
   342  00B9                     	ds	1
   343  00BA                     _currentTemperatureBuffer:	
   344  00BA                     	ds	6
   345  00C0                     _dataBuffer:	
   346  00C0                     	ds	6
   347                           
   348                           	psect	bssBANK3
   349  0190                     __pbssBANK3:	
   350  0190                     _uartReceiveBuffer:	
   351  0190                     	ds	60
   352                           
   353                           	psect	bssBANK2
   354  0110                     __pbssBANK2:	
   355  0110                     _uartTransmitBuffer:	
   356  0110                     	ds	60
   357                           
   358                           	psect	clrtext
   359  0B18                     clear_ram:	
   360                           ;	Called with FSR containing the base address, and
   361                           ;	W with the last address+1
   362                           
   363  0B18  0064               	clrwdt	;clear the watchdog before getting into this loop
   364  0B19                     clrloop:	
   365  0B19  0180               	clrf	0	;clear RAM location pointed to by FSR
   366  0B1A  0A84               	incf	4,f	;increment pointer
   367  0B1B  0604               	xorwf	4,w	;XOR with final address
   368  0B1C  1903               	btfsc	3,2	;have we reached the end yet?
   369  0B1D  3400               	retlw	0	;all done for this memory range, return
   370  0B1E  0604               	xorwf	4,w	;XOR again to restore value
   371  0B1F  2B19               	goto	clrloop	;do the next byte
   372                           
   373                           	psect	cstackBANK1
   374  00C6                     __pcstackBANK1:	
   375  00C6                     ??_StringSerialProtocolService:	
   376                           
   377                           ; 0 bytes @ 0x0
   378  00C6                     	ds	2
   379  00C8                     StringSerialProtocolService@lastReceivedChar:	
   380                           
   381                           ; 1 bytes @ 0x2
   382  00C8                     	ds	1
   383  00C9                     StringSerialProtocolService@i:	
   384                           
   385                           ; 1 bytes @ 0x3
   386  00C9                     	ds	1
   387  00CA                     ??_main:	
   388                           
   389                           ; 0 bytes @ 0x4
   390  00CA                     	ds	2
   391                           
   392                           	psect	cstackCOMMON
   393  0070                     __pcstackCOMMON:	
   394  0070                     ?_vInitializeBoard:	
   395  0070                     ?_vInitializeUart:	
   396                           ; 0 bytes @ 0x0
   397                           
   398  0070                     ?_vInitializeADC:	
   399                           ; 0 bytes @ 0x0
   400                           
   401  0070                     ?_vAddToUartTransmitBuffer:	
   402                           ; 0 bytes @ 0x0
   403                           
   404  0070                     ?_vSendDataToUart:	
   405                           ; 0 bytes @ 0x0
   406                           
   407  0070                     ?_StringSerialProtocolService:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0070                     ?_restartUSR_K2:	
   411                           ; 0 bytes @ 0x0
   412                           
   413  0070                     ?_vCheckError:	
   414                           ; 0 bytes @ 0x0
   415                           
   416  0070                     ??_vCheckError:	
   417                           ; 0 bytes @ 0x0
   418                           
   419  0070                     ?_vAddToUartReceiveBuffer:	
   420                           ; 0 bytes @ 0x0
   421                           
   422  0070                     ??_vAddToUartReceiveBuffer:	
   423                           ; 0 bytes @ 0x0
   424                           
   425  0070                     ??_cGetFromTxBuffer:	
   426                           ; 0 bytes @ 0x0
   427                           
   428  0070                     ?_erdem:	
   429                           ; 0 bytes @ 0x0
   430                           
   431  0070                     ?_vResetPrintBuffer:	
   432                           ; 0 bytes @ 0x0
   433                           
   434  0070                     ?i1_setCommunicationTimeOut:	
   435                           ; 0 bytes @ 0x0
   436                           
   437  0070                     ?_cGetFromTxBuffer:	
   438                           ; 0 bytes @ 0x0
   439                           
   440  0070                     ?_cGetFromReceiveBuffer:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_CheckCommand:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     vAddToUartReceiveBuffer@data:	
   450                           ; 2 bytes @ 0x0
   451                           
   452  0070                     cGetFromTxBuffer@value:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     i1setCommunicationTimeOut@value:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 2 bytes @ 0x0
   460  0070                     	ds	2
   461  0072                     ??_restartUSR_K2:	
   462  0072                     ??i1_setCommunicationTimeOut:	
   463                           ; 0 bytes @ 0x2
   464                           
   465                           
   466                           ; 0 bytes @ 0x2
   467  0072                     	ds	2
   468  0074                     ??_erdem:	
   469                           
   470                           ; 0 bytes @ 0x4
   471  0074                     	ds	3
   472  0077                     erdem@temp:	
   473                           
   474                           ; 1 bytes @ 0x7
   475  0077                     	ds	1
   476                           
   477                           	psect	cstackBANK0
   478  0020                     __pcstackBANK0:	
   479  0020                     ??_vInitializeBoard:	
   480  0020                     ??_vInitializeUart:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0020                     ??_vInitializeADC:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0020                     ?_setCommunicationTimeOut:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0020                     ??_vAddToUartTransmitBuffer:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0020                     ??_vSendDataToUart:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0020                     ??_cGetFromReceiveBuffer:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0020                     ??_CheckCommand:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0020                     ?_vSetRelay:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0020                     ??_vResetPrintBuffer:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0020                     ?___bmul:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0020                     ?_read_ADC:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0020                     ?___wmul:	
   514                           ; 2 bytes @ 0x0
   515                           
   516  0020                     ?___lwdiv:	
   517                           ; 2 bytes @ 0x0
   518                           
   519  0020                     ?___lwmod:	
   520                           ; 2 bytes @ 0x0
   521                           
   522  0020                     ?___ftpack:	
   523                           ; 2 bytes @ 0x0
   524                           
   525  0020                     vSetRelay@value:	
   526                           ; 3 bytes @ 0x0
   527                           
   528  0020                     vResetPrintBuffer@i:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0020                     vAddToUartTransmitBuffer@data:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0020                     cGetFromReceiveBuffer@value:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0020                     ___bmul@multiplicand:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0020                     setCommunicationTimeOut@value:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0020                     ___wmul@multiplier:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0020                     ___lwdiv@divisor:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0020                     ___lwmod@divisor:	
   550                           ; 2 bytes @ 0x0
   551                           
   552  0020                     ___ftpack@arg:	
   553                           ; 2 bytes @ 0x0
   554                           
   555                           
   556                           ; 3 bytes @ 0x0
   557  0020                     	ds	1
   558  0021                     ??_vSetRelay:	
   559  0021                     ??___bmul:	
   560                           ; 0 bytes @ 0x1
   561                           
   562  0021                     vSetRelay@relay:	
   563                           ; 0 bytes @ 0x1
   564                           
   565  0021                     CheckCommand@command:	
   566                           ; 1 bytes @ 0x1
   567                           
   568  0021                     ___bmul@product:	
   569                           ; 1 bytes @ 0x1
   570                           
   571                           
   572                           ; 1 bytes @ 0x1
   573  0021                     	ds	1
   574  0022                     ??_setCommunicationTimeOut:	
   575  0022                     ??_read_ADC:	
   576                           ; 0 bytes @ 0x2
   577                           
   578  0022                     CheckCommand@result:	
   579                           ; 0 bytes @ 0x2
   580                           
   581  0022                     ___bmul@multiplier:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0022                     ___wmul@multiplicand:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0022                     ___lwdiv@dividend:	
   588                           ; 2 bytes @ 0x2
   589                           
   590  0022                     ___lwmod@dividend:	
   591                           ; 2 bytes @ 0x2
   592                           
   593                           
   594                           ; 2 bytes @ 0x2
   595  0022                     	ds	1
   596  0023                     ?_vPulseRelay:	
   597  0023                     vPulseRelay@timerValue:	
   598                           ; 0 bytes @ 0x3
   599                           
   600  0023                     read_ADC@analogChannel:	
   601                           ; 1 bytes @ 0x3
   602                           
   603  0023                     CheckCommand@size:	
   604                           ; 1 bytes @ 0x3
   605                           
   606  0023                     ___ftpack@exp:	
   607                           ; 1 bytes @ 0x3
   608                           
   609                           
   610                           ; 1 bytes @ 0x3
   611  0023                     	ds	1
   612  0024                     ??_vPulseRelay:	
   613  0024                     ??___wmul:	
   614                           ; 0 bytes @ 0x4
   615                           
   616  0024                     ??___lwdiv:	
   617                           ; 0 bytes @ 0x4
   618                           
   619  0024                     ??___lwmod:	
   620                           ; 0 bytes @ 0x4
   621                           
   622  0024                     vPulseRelay@relay:	
   623                           ; 0 bytes @ 0x4
   624                           
   625  0024                     CheckCommand@i:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0024                     ___lwmod@counter:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0024                     ___ftpack@sign:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0024                     read_ADC@adcResult:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0024                     ___wmul@product:	
   638                           ; 2 bytes @ 0x4
   639                           
   640  0024                     ___lwdiv@quotient:	
   641                           ; 2 bytes @ 0x4
   642                           
   643                           
   644                           ; 2 bytes @ 0x4
   645  0024                     	ds	1
   646  0025                     ??___ftpack:	
   647                           
   648                           ; 0 bytes @ 0x5
   649  0025                     	ds	1
   650  0026                     ?_temperatureOffset:	
   651  0026                     ___lwdiv@counter:	
   652                           ; 2 bytes @ 0x6
   653                           
   654                           
   655                           ; 1 bytes @ 0x6
   656  0026                     	ds	1
   657  0027                     ?_utoa:	
   658  0027                     utoa@val:	
   659                           ; 1 bytes @ 0x7
   660                           
   661                           
   662                           ; 2 bytes @ 0x7
   663  0027                     	ds	1
   664  0028                     ??_temperatureOffset:	
   665  0028                     ?___lwtoft:	
   666                           ; 0 bytes @ 0x8
   667                           
   668  0028                     ?___fttol:	
   669                           ; 3 bytes @ 0x8
   670                           
   671  0028                     ___lwtoft@c:	
   672                           ; 4 bytes @ 0x8
   673                           
   674  0028                     ___fttol@f1:	
   675                           ; 2 bytes @ 0x8
   676                           
   677                           
   678                           ; 3 bytes @ 0x8
   679  0028                     	ds	1
   680  0029                     utoa@base:	
   681                           
   682                           ; 2 bytes @ 0x9
   683  0029                     	ds	1
   684  002A                     temperatureOffset@offset:	
   685                           
   686                           ; 2 bytes @ 0xA
   687  002A                     	ds	1
   688  002B                     ??_utoa:	
   689  002B                     ??___lwtoft:	
   690                           ; 0 bytes @ 0xB
   691                           
   692  002B                     utoa@v:	
   693                           ; 0 bytes @ 0xB
   694                           
   695                           
   696                           ; 2 bytes @ 0xB
   697  002B                     	ds	1
   698  002C                     ??___fttol:	
   699                           
   700                           ; 0 bytes @ 0xC
   701  002C                     	ds	1
   702  002D                     utoa@c:	
   703                           
   704                           ; 1 bytes @ 0xD
   705  002D                     	ds	1
   706  002E                     utoa@buf:	
   707                           
   708                           ; 1 bytes @ 0xE
   709  002E                     	ds	1
   710  002F                     ?_itoa:	
   711  002F                     ___fttol@sign1:	
   712                           ; 1 bytes @ 0xF
   713                           
   714  002F                     itoa@val:	
   715                           ; 1 bytes @ 0xF
   716                           
   717                           
   718                           ; 2 bytes @ 0xF
   719  002F                     	ds	1
   720  0030                     ___fttol@lval:	
   721                           
   722                           ; 4 bytes @ 0x10
   723  0030                     	ds	1
   724  0031                     itoa@base:	
   725                           
   726                           ; 2 bytes @ 0x11
   727  0031                     	ds	2
   728  0033                     ??_itoa:	
   729                           
   730                           ; 0 bytes @ 0x13
   731  0033                     	ds	1
   732  0034                     itoa@buf:	
   733  0034                     ___fttol@exp1:	
   734                           ; 1 bytes @ 0x14
   735                           
   736                           
   737                           ; 1 bytes @ 0x14
   738  0034                     	ds	1
   739  0035                     ?_vSendTemperatureToBuffer:	
   740  0035                     ?___awtoft:	
   741                           ; 0 bytes @ 0x15
   742                           
   743  0035                     vSendTemperatureToBuffer@convData:	
   744                           ; 3 bytes @ 0x15
   745                           
   746  0035                     ___awtoft@c:	
   747                           ; 2 bytes @ 0x15
   748                           
   749                           
   750                           ; 2 bytes @ 0x15
   751  0035                     	ds	2
   752  0037                     ??_vSendTemperatureToBuffer:	
   753                           
   754                           ; 0 bytes @ 0x17
   755  0037                     	ds	1
   756  0038                     ??___awtoft:	
   757  0038                     ___awtoft@sign:	
   758                           ; 0 bytes @ 0x18
   759                           
   760                           
   761                           ; 1 bytes @ 0x18
   762  0038                     	ds	1
   763  0039                     ?___ftdiv:	
   764  0039                     ___ftdiv@f2:	
   765                           ; 3 bytes @ 0x19
   766                           
   767                           
   768                           ; 3 bytes @ 0x19
   769  0039                     	ds	3
   770  003C                     ___ftdiv@f1:	
   771                           
   772                           ; 3 bytes @ 0x1C
   773  003C                     	ds	3
   774  003F                     ??___ftdiv:	
   775                           
   776                           ; 0 bytes @ 0x1F
   777  003F                     	ds	3
   778  0042                     ___ftdiv@cntr:	
   779                           
   780                           ; 1 bytes @ 0x22
   781  0042                     	ds	1
   782  0043                     ___ftdiv@f3:	
   783                           
   784                           ; 3 bytes @ 0x23
   785  0043                     	ds	3
   786  0046                     ___ftdiv@exp:	
   787                           
   788                           ; 1 bytes @ 0x26
   789  0046                     	ds	1
   790  0047                     ___ftdiv@sign:	
   791                           
   792                           ; 1 bytes @ 0x27
   793  0047                     	ds	1
   794  0048                     ?___ftmul:	
   795  0048                     ___ftmul@f1:	
   796                           ; 3 bytes @ 0x28
   797                           
   798                           
   799                           ; 3 bytes @ 0x28
   800  0048                     	ds	3
   801  004B                     ___ftmul@f2:	
   802                           
   803                           ; 3 bytes @ 0x2B
   804  004B                     	ds	3
   805  004E                     ??___ftmul:	
   806                           
   807                           ; 0 bytes @ 0x2E
   808  004E                     	ds	3
   809  0051                     ___ftmul@exp:	
   810                           
   811                           ; 1 bytes @ 0x31
   812  0051                     	ds	1
   813  0052                     ___ftmul@f3_as_product:	
   814                           
   815                           ; 3 bytes @ 0x32
   816  0052                     	ds	3
   817  0055                     ___ftmul@cntr:	
   818                           
   819                           ; 1 bytes @ 0x35
   820  0055                     	ds	1
   821  0056                     ___ftmul@sign:	
   822                           
   823                           ; 1 bytes @ 0x36
   824  0056                     	ds	1
   825  0057                     ?_getTemperature:	
   826  0057                     ?___ftadd:	
   827                           ; 2 bytes @ 0x37
   828                           
   829  0057                     ___ftadd@f1:	
   830                           ; 3 bytes @ 0x37
   831                           
   832                           
   833                           ; 3 bytes @ 0x37
   834  0057                     	ds	2
   835  0059                     ??_getTemperature:	
   836  0059                     getTemperature@milliVolt:	
   837                           ; 0 bytes @ 0x39
   838                           
   839                           
   840                           ; 3 bytes @ 0x39
   841  0059                     	ds	1
   842  005A                     ___ftadd@f2:	
   843                           
   844                           ; 3 bytes @ 0x3A
   845  005A                     	ds	2
   846  005C                     getTemperature@iTempP:	
   847                           
   848                           ; 2 bytes @ 0x3C
   849  005C                     	ds	1
   850  005D                     ??___ftadd:	
   851                           
   852                           ; 0 bytes @ 0x3D
   853  005D                     	ds	1
   854  005E                     getTemperature@m:	
   855                           
   856                           ; 2 bytes @ 0x3E
   857  005E                     	ds	2
   858  0060                     ___ftadd@sign:	
   859                           
   860                           ; 1 bytes @ 0x40
   861  0060                     	ds	1
   862  0061                     ___ftadd@exp2:	
   863                           
   864                           ; 1 bytes @ 0x41
   865  0061                     	ds	1
   866  0062                     ___ftadd@exp1:	
   867                           
   868                           ; 1 bytes @ 0x42
   869  0062                     	ds	1
   870  0063                     ?_calgulateTemp:	
   871  0063                     calgulateTemp@milliVolt:	
   872                           ; 2 bytes @ 0x43
   873                           
   874                           
   875                           ; 2 bytes @ 0x43
   876  0063                     	ds	2
   877  0065                     ??_calgulateTemp:	
   878  0065                     calgulateTemp@temperature:	
   879                           ; 0 bytes @ 0x45
   880                           
   881                           
   882                           ; 2 bytes @ 0x45
   883  0065                     	ds	2
   884  0067                     calgulateTemp@V2_:	
   885                           
   886                           ; 2 bytes @ 0x47
   887  0067                     	ds	2
   888  0069                     calgulateTemp@T2_:	
   889                           
   890                           ; 2 bytes @ 0x49
   891  0069                     	ds	2
   892  006B                     calgulateTemp@V1_:	
   893                           
   894                           ; 2 bytes @ 0x4B
   895  006B                     	ds	2
   896  006D                     calgulateTemp@T1_:	
   897                           
   898                           ; 2 bytes @ 0x4D
   899  006D                     	ds	2
   900                           
   901                           	psect	maintext
   902  0DB5                     __pmaintext:	
   903 ;;Data sizes: Strings 0, constant 101, data 0, bss 163, persistent 3 stack 0
   904 ;;Auto spaces:   Size  Autos    Used
   905 ;; COMMON          14      8      13
   906 ;; BANK0           80     79      80
   907 ;; BANK1           80      6      47
   908 ;; BANK3           96      0      60
   909 ;; BANK2           96      0      60
   910 ;;
   911 ;; Pointer list with targets:
   912 ;; ?___ftpack	float  size(1) Largest target is 0
   913 ;;
   914 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   915 ;;
   916 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   917 ;;
   918 ;; ?_utoa	PTR unsigned char  size(1) Largest target is 6
   919 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   920 ;;
   921 ;; ?_read_ADC	unsigned int  size(1) Largest target is 0
   922 ;;
   923 ;; ?_temperatureOffset	int  size(1) Largest target is 1
   924 ;;		 -> EEDATA(BITSFR2[1]), 
   925 ;;
   926 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   927 ;;
   928 ;; ?___ftdiv	float  size(1) Largest target is 0
   929 ;;
   930 ;; ?___ftadd	float  size(1) Largest target is 0
   931 ;;
   932 ;; ?___awtoft	float  size(1) Largest target is 0
   933 ;;
   934 ;; ?_itoa	PTR unsigned char  size(1) Largest target is 6
   935 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   936 ;;
   937 ;; ?_getTemperature	unsigned int  size(1) Largest target is 0
   938 ;;
   939 ;; ?___fttol	long  size(1) Largest target is 0
   940 ;;
   941 ;; ?___ftmul	float  size(1) Largest target is 0
   942 ;;
   943 ;; ?___lwtoft	float  size(1) Largest target is 0
   944 ;;
   945 ;; ?_calgulateTemp	int  size(1) Largest target is 0
   946 ;;
   947 ;; utoa@buf	PTR unsigned char  size(1) Largest target is 6
   948 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   949 ;;
   950 ;; sp__utoa	PTR unsigned char  size(1) Largest target is 6
   951 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   952 ;;
   953 ;; itoa@buf	PTR unsigned char  size(1) Largest target is 6
   954 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   955 ;;
   956 ;; itoa@cp	PTR unsigned char  size(1) Largest target is 6
   957 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   958 ;;
   959 ;; sp__itoa	PTR unsigned char  size(1) Largest target is 6
   960 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   961 ;;
   962 ;;
   963 ;; Critical Paths under _main in COMMON
   964 ;;
   965 ;;   None.
   966 ;;
   967 ;; Critical Paths under _erdem in COMMON
   968 ;;
   969 ;;   _erdem->_restartUSR_K2
   970 ;;   _restartUSR_K2->i1_setCommunicationTimeOut
   971 ;;
   972 ;; Critical Paths under _main in BANK0
   973 ;;
   974 ;;   _main->_calgulateTemp
   975 ;;   _StringSerialProtocolService->_calgulateTemp
   976 ;;   _vSendTemperatureToBuffer->_itoa
   977 ;;   _itoa->_utoa
   978 ;;   _calgulateTemp->___ftadd
   979 ;;   _getTemperature->___ftmul
   980 ;;   ___lwtoft->___ftpack
   981 ;;   ___awtoft->___fttol
   982 ;;   ___ftmul->___ftdiv
   983 ;;   ___ftdiv->___awtoft
   984 ;;   ___ftadd->___ftmul
   985 ;;   _utoa->___lwdiv
   986 ;;   _temperatureOffset->___wmul
   987 ;;   ___fttol->___ftpack
   988 ;;   _vPulseRelay->___bmul
   989 ;;
   990 ;; Critical Paths under _erdem in BANK0
   991 ;;
   992 ;;   None.
   993 ;;
   994 ;; Critical Paths under _main in BANK1
   995 ;;
   996 ;;   _main->_StringSerialProtocolService
   997 ;;
   998 ;; Critical Paths under _erdem in BANK1
   999 ;;
  1000 ;;   None.
  1001 ;;
  1002 ;; Critical Paths under _main in BANK3
  1003 ;;
  1004 ;;   None.
  1005 ;;
  1006 ;; Critical Paths under _erdem in BANK3
  1007 ;;
  1008 ;;   None.
  1009 ;;
  1010 ;; Critical Paths under _main in BANK2
  1011 ;;
  1012 ;;   None.
  1013 ;;
  1014 ;; Critical Paths under _erdem in BANK2
  1015 ;;
  1016 ;;   None.
  1017 ;;
  1018 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1019 ;;
  1020 ;;
  1021 ;;Call Graph Tables:
  1022 ;;
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (0) _main                                                 2     2      0   11199
  1027 ;;                                              4 BANK1      2     2      0
  1028 ;;                   _vInitializeBoard
  1029 ;;                    _vInitializeUart
  1030 ;;                     _vInitializeADC
  1031 ;;            _setCommunicationTimeOut
  1032 ;;                     _getTemperature
  1033 ;;                      _calgulateTemp
  1034 ;;                  _temperatureOffset
  1035 ;;           _vAddToUartTransmitBuffer
  1036 ;;                    _vSendDataToUart
  1037 ;;        _StringSerialProtocolService
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (1) _StringSerialProtocolService                          4     4      0    6610
  1040 ;;                                              0 BANK1      4     4      0
  1041 ;;              _cGetFromReceiveBuffer
  1042 ;;                       _CheckCommand
  1043 ;;                          _vSetRelay
  1044 ;;                        _vPulseRelay
  1045 ;;                             ___bmul
  1046 ;;           _vAddToUartTransmitBuffer
  1047 ;;                    _vSendDataToUart
  1048 ;;            _setCommunicationTimeOut
  1049 ;;                     _getTemperature
  1050 ;;                      _calgulateTemp
  1051 ;;                  _temperatureOffset
  1052 ;;                  _vResetPrintBuffer
  1053 ;;           _vSendTemperatureToBuffer
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (2) _vSendTemperatureToBuffer                             2     0      2     961
  1056 ;;                                             21 BANK0      2     0      2
  1057 ;;                               _itoa
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (3) _itoa                                                 6     2      4     785
  1060 ;;                                             15 BANK0      6     2      4
  1061 ;;                               _utoa
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (2) _calgulateTemp                                       12    10      2    3133
  1064 ;;                                             67 BANK0     12    10      2
  1065 ;;                           ___awtoft
  1066 ;;                            ___ftdiv
  1067 ;;                            ___ftmul
  1068 ;;                            ___ftadd
  1069 ;;                            ___fttol
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (2) _getTemperature                                       9     7      2    1183
  1072 ;;                                             55 BANK0      9     7      2
  1073 ;;                           _read_ADC
  1074 ;;                           ___lwtoft
  1075 ;;                            ___ftmul
  1076 ;;                            ___fttol
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (3) ___lwtoft                                             3     0      3     231
  1079 ;;                                              8 BANK0      3     0      3
  1080 ;;                           ___ftpack
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (3) ___awtoft                                             4     1      3     300
  1083 ;;                                             21 BANK0      4     1      3
  1084 ;;                           ___ftpack
  1085 ;;                            ___fttol (ARG)
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (3) ___ftmul                                             15     9      6     535
  1088 ;;                                             40 BANK0     15     9      6
  1089 ;;                           ___ftpack
  1090 ;;                           ___awtoft (ARG)
  1091 ;;                            ___ftdiv (ARG)
  1092 ;;                            ___fttol (ARG)
  1093 ;;                           ___lwtoft (ARG)
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (3) ___ftdiv                                             15     9      6     489
  1096 ;;                                             25 BANK0     15     9      6
  1097 ;;                           ___ftpack
  1098 ;;                           ___awtoft (ARG)
  1099 ;;                            ___fttol (ARG)
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (3) ___ftadd                                             12     6      6    1049
  1102 ;;                                             55 BANK0     12     6      6
  1103 ;;                           ___ftpack
  1104 ;;                            ___ftmul (ARG)
  1105 ;;                           ___awtoft (ARG)
  1106 ;;                            ___ftdiv (ARG)
  1107 ;;                            ___fttol (ARG)
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (4) _utoa                                                 8     4      4     622
  1110 ;;                                              7 BANK0      8     4      4
  1111 ;;                            ___lwdiv
  1112 ;;                            ___lwmod
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) _temperatureOffset                                    6     4      2     140
  1115 ;;                                              6 BANK0      6     4      2
  1116 ;;                             ___wmul
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (3) ___fttol                                             13     9      4     252
  1119 ;;                                              8 BANK0     13     9      4
  1120 ;;                           ___ftpack (ARG)
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (4) ___ftpack                                             8     3      5     209
  1123 ;;                                              0 BANK0      8     3      5
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (5) ___lwmod                                              5     1      4     159
  1126 ;;                                              0 BANK0      5     1      4
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (5) ___lwdiv                                              7     3      4     162
  1129 ;;                                              0 BANK0      7     3      4
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (3) ___wmul                                               6     2      4      92
  1132 ;;                                              0 BANK0      6     2      4
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; (2) ___bmul                                               3     2      1      92
  1135 ;;                                              0 BANK0      3     2      1
  1136 ;; ---------------------------------------------------------------------------------
  1137 ;; (2) _CheckCommand                                         5     5      0     324
  1138 ;;                                              0 BANK0      5     5      0
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; (2) _cGetFromReceiveBuffer                                1     1      0      23
  1141 ;;                                              0 BANK0      1     1      0
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _vResetPrintBuffer                                    1     1      0      68
  1144 ;;                                              0 BANK0      1     1      0
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) _read_ADC                                             6     4      2      48
  1147 ;;                                              0 BANK0      6     4      2
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (2) _vSetRelay                                            2     1      1     132
  1150 ;;                                              0 BANK0      2     1      1
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (2) _vPulseRelay                                          2     1      1     132
  1153 ;;                                              3 BANK0      2     1      1
  1154 ;;                             ___bmul (ARG)
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (2) _vSendDataToUart                                      0     0      0       0
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (2) _vAddToUartTransmitBuffer                             1     1      0      22
  1159 ;;                                              0 BANK0      1     1      0
  1160 ;; ---------------------------------------------------------------------------------
  1161 ;; (2) _setCommunicationTimeOut                              2     0      2      22
  1162 ;;                                              0 BANK0      2     0      2
  1163 ;; ---------------------------------------------------------------------------------
  1164 ;; (1) _vInitializeADC                                       0     0      0       0
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; (1) _vInitializeUart                                      1     1      0      89
  1167 ;;                                              0 BANK0      1     1      0
  1168 ;; ---------------------------------------------------------------------------------
  1169 ;; (1) _vInitializeBoard                                     0     0      0       0
  1170 ;; ---------------------------------------------------------------------------------
  1171 ;; Estimated maximum stack depth 5
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (6) _erdem                                                4     4      0     165
  1176 ;;                                              4 COMMON     4     4      0
  1177 ;;                      _restartUSR_K2
  1178 ;;                        _vCheckError
  1179 ;;            _vAddToUartReceiveBuffer
  1180 ;;                   _cGetFromTxBuffer
  1181 ;; ---------------------------------------------------------------------------------
  1182 ;; (7) _restartUSR_K2                                        2     2      0      73
  1183 ;;                                              2 COMMON     2     2      0
  1184 ;;          i1_setCommunicationTimeOut
  1185 ;; ---------------------------------------------------------------------------------
  1186 ;; (8) i1_setCommunicationTimeOut                            2     0      2      73
  1187 ;;                                              0 COMMON     2     0      2
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (7) _cGetFromTxBuffer                                     1     1      0      23
  1190 ;;                                              0 COMMON     1     1      0
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (7) _vAddToUartReceiveBuffer                              1     1      0      22
  1193 ;;                                              0 COMMON     1     1      0
  1194 ;; ---------------------------------------------------------------------------------
  1195 ;; (7) _vCheckError                                          1     1      0       0
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; Estimated maximum stack depth 8
  1198 ;; ---------------------------------------------------------------------------------
  1199 ;; Call Graph Graphs:
  1200 ;; _main (ROOT)
  1201 ;;   _vInitializeBoard
  1202 ;;   _vInitializeUart
  1203 ;;   _vInitializeADC
  1204 ;;   _setCommunicationTimeOut
  1205 ;;   _getTemperature
  1206 ;;     _read_ADC
  1207 ;;     ___lwtoft
  1208 ;;       ___ftpack
  1209 ;;     ___ftmul
  1210 ;;       ___ftpack
  1211 ;;       ___awtoft (ARG)
  1212 ;;         ___ftpack
  1213 ;;         ___fttol (ARG)
  1214 ;;           ___ftpack (ARG)
  1215 ;;       ___ftdiv (ARG)
  1216 ;;         ___ftpack
  1217 ;;         ___awtoft (ARG)
  1218 ;;           ___ftpack
  1219 ;;           ___fttol (ARG)
  1220 ;;             ___ftpack (ARG)
  1221 ;;         ___fttol (ARG)
  1222 ;;           ___ftpack (ARG)
  1223 ;;       ___fttol (ARG)
  1224 ;;         ___ftpack (ARG)
  1225 ;;       ___lwtoft (ARG)
  1226 ;;         ___ftpack
  1227 ;;     ___fttol
  1228 ;;       ___ftpack (ARG)
  1229 ;;   _calgulateTemp
  1230 ;;     ___awtoft
  1231 ;;       ___ftpack
  1232 ;;       ___fttol (ARG)
  1233 ;;         ___ftpack (ARG)
  1234 ;;     ___ftdiv
  1235 ;;       ___ftpack
  1236 ;;       ___awtoft (ARG)
  1237 ;;         ___ftpack
  1238 ;;         ___fttol (ARG)
  1239 ;;           ___ftpack (ARG)
  1240 ;;       ___fttol (ARG)
  1241 ;;         ___ftpack (ARG)
  1242 ;;     ___ftmul
  1243 ;;       ___ftpack
  1244 ;;       ___awtoft (ARG)
  1245 ;;         ___ftpack
  1246 ;;         ___fttol (ARG)
  1247 ;;           ___ftpack (ARG)
  1248 ;;       ___ftdiv (ARG)
  1249 ;;         ___ftpack
  1250 ;;         ___awtoft (ARG)
  1251 ;;           ___ftpack
  1252 ;;           ___fttol (ARG)
  1253 ;;             ___ftpack (ARG)
  1254 ;;         ___fttol (ARG)
  1255 ;;           ___ftpack (ARG)
  1256 ;;       ___fttol (ARG)
  1257 ;;         ___ftpack (ARG)
  1258 ;;       ___lwtoft (ARG)
  1259 ;;         ___ftpack
  1260 ;;     ___ftadd
  1261 ;;       ___ftpack
  1262 ;;       ___ftmul (ARG)
  1263 ;;         ___ftpack
  1264 ;;         ___awtoft (ARG)
  1265 ;;           ___ftpack
  1266 ;;           ___fttol (ARG)
  1267 ;;             ___ftpack (ARG)
  1268 ;;         ___ftdiv (ARG)
  1269 ;;           ___ftpack
  1270 ;;           ___awtoft (ARG)
  1271 ;;             ___ftpack
  1272 ;;             ___fttol (ARG)
  1273 ;;               ___ftpack (ARG)
  1274 ;;           ___fttol (ARG)
  1275 ;;             ___ftpack (ARG)
  1276 ;;         ___fttol (ARG)
  1277 ;;           ___ftpack (ARG)
  1278 ;;         ___lwtoft (ARG)
  1279 ;;           ___ftpack
  1280 ;;       ___awtoft (ARG)
  1281 ;;         ___ftpack
  1282 ;;         ___fttol (ARG)
  1283 ;;           ___ftpack (ARG)
  1284 ;;       ___ftdiv (ARG)
  1285 ;;         ___ftpack
  1286 ;;         ___awtoft (ARG)
  1287 ;;           ___ftpack
  1288 ;;           ___fttol (ARG)
  1289 ;;             ___ftpack (ARG)
  1290 ;;         ___fttol (ARG)
  1291 ;;           ___ftpack (ARG)
  1292 ;;       ___fttol (ARG)
  1293 ;;         ___ftpack (ARG)
  1294 ;;     ___fttol
  1295 ;;       ___ftpack (ARG)
  1296 ;;   _temperatureOffset
  1297 ;;     ___wmul
  1298 ;;   _vAddToUartTransmitBuffer
  1299 ;;   _vSendDataToUart
  1300 ;;   _StringSerialProtocolService
  1301 ;;     _cGetFromReceiveBuffer
  1302 ;;     _CheckCommand
  1303 ;;     _vSetRelay
  1304 ;;     _vPulseRelay
  1305 ;;       ___bmul (ARG)
  1306 ;;     ___bmul
  1307 ;;     _vAddToUartTransmitBuffer
  1308 ;;     _vSendDataToUart
  1309 ;;     _setCommunicationTimeOut
  1310 ;;     _getTemperature
  1311 ;;       _read_ADC
  1312 ;;       ___lwtoft
  1313 ;;         ___ftpack
  1314 ;;       ___ftmul
  1315 ;;         ___ftpack
  1316 ;;         ___awtoft (ARG)
  1317 ;;           ___ftpack
  1318 ;;           ___fttol (ARG)
  1319 ;;             ___ftpack (ARG)
  1320 ;;         ___ftdiv (ARG)
  1321 ;;           ___ftpack
  1322 ;;           ___awtoft (ARG)
  1323 ;;             ___ftpack
  1324 ;;             ___fttol (ARG)
  1325 ;;               ___ftpack (ARG)
  1326 ;;           ___fttol (ARG)
  1327 ;;             ___ftpack (ARG)
  1328 ;;         ___fttol (ARG)
  1329 ;;           ___ftpack (ARG)
  1330 ;;         ___lwtoft (ARG)
  1331 ;;           ___ftpack
  1332 ;;       ___fttol
  1333 ;;         ___ftpack (ARG)
  1334 ;;     _calgulateTemp
  1335 ;;       ___awtoft
  1336 ;;         ___ftpack
  1337 ;;         ___fttol (ARG)
  1338 ;;           ___ftpack (ARG)
  1339 ;;       ___ftdiv
  1340 ;;         ___ftpack
  1341 ;;         ___awtoft (ARG)
  1342 ;;           ___ftpack
  1343 ;;           ___fttol (ARG)
  1344 ;;             ___ftpack (ARG)
  1345 ;;         ___fttol (ARG)
  1346 ;;           ___ftpack (ARG)
  1347 ;;       ___ftmul
  1348 ;;         ___ftpack
  1349 ;;         ___awtoft (ARG)
  1350 ;;           ___ftpack
  1351 ;;           ___fttol (ARG)
  1352 ;;             ___ftpack (ARG)
  1353 ;;         ___ftdiv (ARG)
  1354 ;;           ___ftpack
  1355 ;;           ___awtoft (ARG)
  1356 ;;             ___ftpack
  1357 ;;             ___fttol (ARG)
  1358 ;;               ___ftpack (ARG)
  1359 ;;           ___fttol (ARG)
  1360 ;;             ___ftpack (ARG)
  1361 ;;         ___fttol (ARG)
  1362 ;;           ___ftpack (ARG)
  1363 ;;         ___lwtoft (ARG)
  1364 ;;           ___ftpack
  1365 ;;       ___ftadd
  1366 ;;         ___ftpack
  1367 ;;         ___ftmul (ARG)
  1368 ;;           ___ftpack
  1369 ;;           ___awtoft (ARG)
  1370 ;;             ___ftpack
  1371 ;;             ___fttol (ARG)
  1372 ;;               ___ftpack (ARG)
  1373 ;;           ___ftdiv (ARG)
  1374 ;;             ___ftpack
  1375 ;;             ___awtoft (ARG)
  1376 ;;               ___ftpack
  1377 ;;               ___fttol (ARG)
  1378 ;;                 ___ftpack (ARG)
  1379 ;;             ___fttol (ARG)
  1380 ;;               ___ftpack (ARG)
  1381 ;;           ___fttol (ARG)
  1382 ;;             ___ftpack (ARG)
  1383 ;;           ___lwtoft (ARG)
  1384 ;;             ___ftpack
  1385 ;;         ___awtoft (ARG)
  1386 ;;           ___ftpack
  1387 ;;           ___fttol (ARG)
  1388 ;;             ___ftpack (ARG)
  1389 ;;         ___ftdiv (ARG)
  1390 ;;           ___ftpack
  1391 ;;           ___awtoft (ARG)
  1392 ;;             ___ftpack
  1393 ;;             ___fttol (ARG)
  1394 ;;               ___ftpack (ARG)
  1395 ;;           ___fttol (ARG)
  1396 ;;             ___ftpack (ARG)
  1397 ;;         ___fttol (ARG)
  1398 ;;           ___ftpack (ARG)
  1399 ;;       ___fttol
  1400 ;;         ___ftpack (ARG)
  1401 ;;     _temperatureOffset
  1402 ;;       ___wmul
  1403 ;;     _vResetPrintBuffer
  1404 ;;     _vSendTemperatureToBuffer
  1405 ;;       _itoa
  1406 ;;         _utoa
  1407 ;;           ___lwdiv
  1408 ;;           ___lwmod
  1409 ;;
  1410 ;; _erdem (ROOT)
  1411 ;;   _restartUSR_K2
  1412 ;;     i1_setCommunicationTimeOut
  1413 ;;   _vCheckError
  1414 ;;   _vAddToUartReceiveBuffer
  1415 ;;   _cGetFromTxBuffer
  1416 ;;
  1417 ;; Address spaces:
  1418 ;;Name               Size   Autos  Total    Cost      Usage
  1419 ;;BITCOMMON            E      0       1       0        7.1%
  1420 ;;EEDATA             100      0       0       0        0.0%
  1421 ;;NULL                 0      0       0       0        0.0%
  1422 ;;CODE                 0      0       0       0        0.0%
  1423 ;;COMMON               E      8       D       1       92.9%
  1424 ;;BITSFR0              0      0       0       1        0.0%
  1425 ;;SFR0                 0      0       0       1        0.0%
  1426 ;;BITSFR1              0      0       0       2        0.0%
  1427 ;;SFR1                 0      0       0       2        0.0%
  1428 ;;STACK                0      0       B       2        0.0%
  1429 ;;ABS                  0      0     104       3        0.0%
  1430 ;;BITBANK0            50      0       0       4        0.0%
  1431 ;;BITSFR3              0      0       0       4        0.0%
  1432 ;;SFR3                 0      0       0       4        0.0%
  1433 ;;BANK0               50     4F      50       5      100.0%
  1434 ;;BITSFR2              0      0       0       5        0.0%
  1435 ;;SFR2                 0      0       0       5        0.0%
  1436 ;;BITBANK1            50      0       0       6        0.0%
  1437 ;;BANK1               50      6      2F       7       58.8%
  1438 ;;BITBANK3            60      0       0       8        0.0%
  1439 ;;BANK3               60      0      3C       9       62.5%
  1440 ;;BITBANK2            60      0       0      10        0.0%
  1441 ;;BANK2               60      0      3C      11       62.5%
  1442 ;;DATA                 0      0     10F      12        0.0%
  1443                           
  1444                           
  1445 ;; *************** function _main *****************
  1446 ;; Defined at:
  1447 ;;		line 115 in file "../src/main.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  2  1118[COMMON] int 
  1454 ;; Registers used:
  1455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 17F/0
  1458 ;;		On exit  : 60/20
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          0       0       2       0       0
  1464 ;;      Totals:         0       0       2       0       0
  1465 ;;Total ram usage:        2 bytes
  1466 ;; Hardware stack levels required when called:    8
  1467 ;; This function calls:
  1468 ;;		_vInitializeBoard
  1469 ;;		_vInitializeUart
  1470 ;;		_vInitializeADC
  1471 ;;		_setCommunicationTimeOut
  1472 ;;		_getTemperature
  1473 ;;		_calgulateTemp
  1474 ;;		_temperatureOffset
  1475 ;;		_vAddToUartTransmitBuffer
  1476 ;;		_vSendDataToUart
  1477 ;;		_StringSerialProtocolService
  1478 ;; This function is called by:
  1479 ;;		Startup code after reset
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482  0DB5                     _main:	
  1483                           
  1484                           ;main.c: 116: vInitializeBoard();
  1485                           
  1486                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1487  0DB5  120A  158A  2358   	fcall	_vInitializeBoard
      +       120A  158A         
  1488                           
  1489                           ;main.c: 117: vInitializeUart();
  1490  0DBA  120A  158A  2320   	fcall	_vInitializeUart
      +       120A  158A         
  1491                           
  1492                           ;main.c: 118: vInitializeADC();
  1493  0DBF  120A  118A  27F0   	fcall	_vInitializeADC
      +       120A  158A         
  1494                           
  1495                           ;main.c: 119: temperature_mV = 0;
  1496  0DC4  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0DC5  01AE               	clrf	_temperature_mV^(0+128)	;volatile
  1498  0DC6  01AF               	clrf	(_temperature_mV+1)^(0+128)	;volatile
  1499                           
  1500                           ;main.c: 120: PEIE = 1;
  1501  0DC7  170B               	bsf	11,6
  1502                           
  1503                           ;main.c: 121: GIE = 1;
  1504  0DC8  178B               	bsf	11,7
  1505                           
  1506                           ;main.c: 122: (GIE = 1);
  1507  0DC9  178B               	bsf	11,7
  1508                           
  1509                           ;main.c: 124: inputPort = (PORTB & 0b00110111);
  1510  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0DCB  0806               	movf	6,w
  1512  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0DCD  00B4               	movwf	_inputPort^(0+128)
  1514  0DCE  3037               	movlw	55
  1515  0DCF  05B4               	andwf	_inputPort^(0+128),f
  1516                           
  1517                           ;main.c: 125: setCommunicationTimeOut(3000);
  1518  0DD0  30B8               	movlw	184
  1519  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0DD2  00A0               	movwf	?_setCommunicationTimeOut
  1521  0DD3  300B               	movlw	11
  1522  0DD4  00A1               	movwf	?_setCommunicationTimeOut+1
  1523  0DD5  120A  118A  2793   	fcall	_setCommunicationTimeOut
      +       120A  158A         
  1524  0DDA                     l8446:	
  1525  0DDA  0064               	clrwdt	;#
  1526                           
  1527                           ;main.c: 130: if (timeoutFlag) {
  1528  0DDB  1F78               	btfss	_timeoutFlag/(0+8),_timeoutFlag& (0+7)
  1529  0DDC  2E0B               	goto	l8458
  1530                           
  1531                           ;main.c: 131: timeoutFlag = 0;
  1532  0DDD  1378               	bcf	_timeoutFlag/(0+8),_timeoutFlag& (0+7)
  1533                           
  1534                           ;main.c: 132: temperature_mV = getTemperature();
  1535  0DDE  120A  118A  2315   	fcall	_getTemperature
      +       120A  158A         
  1536  0DE3  0858               	movf	?_getTemperature+1,w
  1537  0DE4  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0DE5  00AF               	movwf	(_temperature_mV+1)^(0+128)
  1539  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0DE7  0857               	movf	?_getTemperature,w
  1541  0DE8  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0DE9  00AE               	movwf	_temperature_mV^(0+128)
  1543                           
  1544                           ;main.c: 133: currentTemperature = calgulateTemp(temperature_mV);
  1545  0DEA  082F               	movf	(_temperature_mV+1)^(0+128),w	;volatile
  1546  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0DEC  00E4               	movwf	?_calgulateTemp+1
  1548  0DED  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0DEE  082E               	movf	_temperature_mV^(0+128),w	;volatile
  1550  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0DF0  00E3               	movwf	?_calgulateTemp
  1552  0DF1  120A  118A  2363   	fcall	_calgulateTemp
      +       120A  158A         
  1553  0DF6  0864               	movf	?_calgulateTemp+1,w
  1554  0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0DF8  00AD               	movwf	(_currentTemperature+1)^(0+128)	;volatile
  1556  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0DFA  0863               	movf	?_calgulateTemp,w
  1558  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0DFC  00AC               	movwf	_currentTemperature^(0+128)	;volatile
  1560                           
  1561                           ;main.c: 134: currentTemperature += temperatureOffset();
  1562  0DFD  120A  118A  22B8   	fcall	_temperatureOffset
      +       120A  158A         
  1563  0E02  0826               	movf	?_temperatureOffset,w
  1564  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0E04  07AC               	addwf	_currentTemperature^(0+128),f	;volatile
  1566  0E05  1803               	skipnc
  1567  0E06  0AAD               	incf	(_currentTemperature+1)^(0+128),f	;volatile
  1568  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0E08  0827               	movf	?_temperatureOffset+1,w
  1570  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0E0A  07AD               	addwf	(_currentTemperature+1)^(0+128),f	;volatile
  1572  0E0B                     l8458:	
  1573                           
  1574                           ;main.c: 136: }
  1575                           ;main.c: 137: if (currentTemperature >= 35) {
  1576  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0E0D  082D               	movf	(_currentTemperature+1)^(0+128),w	;volatile
  1579  0E0E  3A80               	xorlw	128
  1580  0E0F  00FF               	movwf	127
  1581  0E10  3080               	movlw	128
  1582  0E11  027F               	subwf	127,w
  1583  0E12  1D03               	skipz
  1584  0E13  2E16               	goto	u3115
  1585  0E14  3023               	movlw	35
  1586  0E15  022C               	subwf	_currentTemperature^(0+128),w	;volatile
  1587  0E16                     u3115:	
  1588  0E16  1C03               	skipc
  1589  0E17  2E1C               	goto	l8462
  1590                           
  1591                           ;main.c: 138: (PORTDbits.RD1) = 1;
  1592  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0E1A  1488               	bsf	8,1	;volatile
  1595                           
  1596                           ;main.c: 139: } else if (currentTemperature <= 30) {
  1597  0E1B  2E2C               	goto	l8466
  1598  0E1C                     l8462:	
  1599  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0E1E  082D               	movf	(_currentTemperature+1)^(0+128),w	;volatile
  1602  0E1F  3A80               	xorlw	128
  1603  0E20  00FF               	movwf	127
  1604  0E21  3080               	movlw	128
  1605  0E22  027F               	subwf	127,w
  1606  0E23  1D03               	skipz
  1607  0E24  2E27               	goto	u3125
  1608  0E25  301F               	movlw	31
  1609  0E26  022C               	subwf	_currentTemperature^(0+128),w	;volatile
  1610  0E27                     u3125:	
  1611  0E27  1803               	skipnc
  1612  0E28  2E2C               	goto	l8466
  1613                           
  1614                           ;main.c: 140: (PORTDbits.RD1) = 0;
  1615  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0E2B  1088               	bcf	8,1	;volatile
  1618  0E2C                     l8466:	
  1619                           
  1620                           ;main.c: 141: }
  1621                           ;main.c: 143: if (inputPort != (PORTB & 0b00010111)) {
  1622  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0E2E  0806               	movf	6,w
  1625  0E2F  3917               	andlw	23
  1626  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  1627  0E31  0634               	xorwf	_inputPort^(0+128),w
  1628  0E32  1903               	skipnz
  1629  0E33  2EAF               	goto	l8506
  1630                           
  1631                           ;main.c: 144: _delay((unsigned long)((40)*(8000000/4000.0)));
  1632  0E34  3068               	movlw	104
  1633  0E35  00CB               	movwf	(??_main^(0+128)+1)
  1634  0E36  30E4               	movlw	228
  1635  0E37  00CA               	movwf	??_main^(0+128)
  1636  0E38                     u3157:	
  1637  0E38  0BCA               	decfsz	??_main^(0+128),f
  1638  0E39  2E38               	goto	u3157
  1639  0E3A  0BCB               	decfsz	(??_main^(0+128)+1),f
  1640  0E3B  2E38               	goto	u3157
  1641  0E3C  0064               	clrwdt
  1642                           
  1643                           ;main.c: 145: if (inputPort != (PORTB & 0b00010111)) {
  1644  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0E3F  0806               	movf	6,w
  1647  0E40  3917               	andlw	23
  1648  0E41  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0E42  0634               	xorwf	_inputPort^(0+128),w
  1650  0E43  1903               	skipnz
  1651  0E44  2EAF               	goto	l8506
  1652                           
  1653                           ;main.c: 146: inputPort = (PORTB & 0b00010111);
  1654  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0E46  0806               	movf	6,w
  1656  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0E48  00B4               	movwf	_inputPort^(0+128)
  1658  0E49  3017               	movlw	23
  1659  0E4A  05B4               	andwf	_inputPort^(0+128),f
  1660                           
  1661                           ;main.c: 148: vAddToUartTransmitBuffer('<');
  1662  0E4B  303C               	movlw	60
  1663  0E4C  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1664                           
  1665                           ;main.c: 149: vAddToUartTransmitBuffer('D');
  1666  0E51  3044               	movlw	68
  1667  0E52  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1668                           
  1669                           ;main.c: 150: vAddToUartTransmitBuffer('U');
  1670  0E57  3055               	movlw	85
  1671  0E58  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1672                           
  1673                           ;main.c: 151: vAddToUartTransmitBuffer('R');
  1674  0E5D  3052               	movlw	82
  1675  0E5E  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1676                           
  1677                           ;main.c: 152: vAddToUartTransmitBuffer('U');
  1678  0E63  3055               	movlw	85
  1679  0E64  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1680                           
  1681                           ;main.c: 153: vAddToUartTransmitBuffer('M');
  1682  0E69  304D               	movlw	77
  1683  0E6A  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1684                           
  1685                           ;main.c: 154: vAddToUartTransmitBuffer(':');
  1686  0E6F  303A               	movlw	58
  1687  0E70  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1688                           
  1689                           ;main.c: 155: vAddToUartTransmitBuffer((PORTBbits.RB0) + 48);
  1690  0E75  0806               	movf	6,w	;volatile
  1691  0E76  3901               	andlw	1
  1692  0E77  3E30               	addlw	48
  1693  0E78  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1694                           
  1695                           ;main.c: 156: vAddToUartTransmitBuffer((PORTBbits.RB1) + 48);
  1696  0E7D  0C06               	rrf	6,w	;volatile
  1697  0E7E  3901               	andlw	1
  1698  0E7F  3E30               	addlw	48
  1699  0E80  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1700                           
  1701                           ;main.c: 157: vAddToUartTransmitBuffer((PORTBbits.RB2) + 48);
  1702  0E85  0C06               	rrf	6,w	;volatile
  1703  0E86  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0E87  00CA               	movwf	??_main^(0+128)
  1705  0E88  0C4A               	rrf	??_main^(0+128),w
  1706  0E89  3901               	andlw	1
  1707  0E8A  3E30               	addlw	48
  1708  0E8B  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1709                           
  1710                           ;main.c: 158: vAddToUartTransmitBuffer((PORTBbits.RB4) + 48);
  1711  0E90  0E06               	swapf	6,w	;volatile
  1712  0E91  3901               	andlw	1
  1713  0E92  3E30               	addlw	48
  1714  0E93  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1715                           
  1716                           ;main.c: 159: vAddToUartTransmitBuffer('0');
  1717  0E98  3030               	movlw	48
  1718  0E99  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1719                           
  1720                           ;main.c: 160: vAddToUartTransmitBuffer('0');
  1721  0E9E  3030               	movlw	48
  1722  0E9F  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1723                           
  1724                           ;main.c: 161: vAddToUartTransmitBuffer('>');
  1725  0EA4  303E               	movlw	62
  1726  0EA5  120A  118A  21BF   	fcall	_vAddToUartTransmitBuffer
      +       120A  158A         
  1727                           
  1728                           ;main.c: 162: vSendDataToUart();
  1729  0EAA  120A  118A  2257   	fcall	_vSendDataToUart
      +       120A  158A         
  1730  0EAF                     l8506:	
  1731                           
  1732                           ;main.c: 163: }
  1733                           ;main.c: 164: }
  1734                           ;main.c: 166: StringSerialProtocolService();
  1735  0EAF  120A  118A  2011   	fcall	_StringSerialProtocolService
      +       120A  158A         
  1736  0EB4  2DDA               	goto	l8446
  1737  0EB5                     __end_of_main:	
  1738                           
  1739                           	psect	text717
  1740  0011                     __ptext717:	
  1741 ;; =============== function _main ends ============
  1742                           
  1743                           
  1744 ;; *************** function _StringSerialProtocolService *****************
  1745 ;; Defined at:
  1746 ;;		line 141 in file "../src/StringSerialProtocol.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  i               1    3[BANK1 ] unsigned char 
  1751 ;;  lastReceived    1    2[BANK1 ] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;		None               void
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 60/20
  1758 ;;		On exit  : 60/20
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       0       0       0       0
  1762 ;;      Locals:         0       0       2       0       0
  1763 ;;      Temps:          0       0       2       0       0
  1764 ;;      Totals:         0       0       4       0       0
  1765 ;;Total ram usage:        4 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    7
  1768 ;; This function calls:
  1769 ;;		_cGetFromReceiveBuffer
  1770 ;;		_CheckCommand
  1771 ;;		_vSetRelay
  1772 ;;		_vPulseRelay
  1773 ;;		___bmul
  1774 ;;		_vAddToUartTransmitBuffer
  1775 ;;		_vSendDataToUart
  1776 ;;		_setCommunicationTimeOut
  1777 ;;		_getTemperature
  1778 ;;		_calgulateTemp
  1779 ;;		_temperatureOffset
  1780 ;;		_vResetPrintBuffer
  1781 ;;		_vSendTemperatureToBuffer
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786  0011                     _StringSerialProtocolService:	
  1787                           
  1788                           ;StringSerialProtocol.c: 144: if (uartReceiveBufferW != uartReceiveBufferR) {
  1789                           
  1790                           ; Regs used in _StringSerialProtocolService: [wreg-fsr0h+status,2+status,0+btemp+1+pclat
      +                          h+cstack]
  1791  0011  0839               	movf	_uartReceiveBufferW^(0+128),w	;volatile
  1792  0012  0638               	xorwf	_uartReceiveBufferR^(0+128),w	;volatile
  1793  0013  1903               	skipnz
  1794  0014  0008               	return
  1795                           
  1796                           ;StringSerialProtocol.c: 145: lastReceivedChar = cGetFromReceiveBuffer();
  1797  0015  2299  120A  118A   	fcall	_cGetFromReceiveBuffer
  1798  0018  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0019  00C8               	movwf	StringSerialProtocolService@lastReceivedChar^(0+128)
  1800                           
  1801                           ;StringSerialProtocol.c: 147: if (lastReceivedChar == '<') {
  1802  001A  3A3C               	xorlw	60
  1803  001B  1D03               	skipz
  1804  001C  2822               	goto	l8262
  1805                           
  1806                           ;StringSerialProtocol.c: 148: state = WAIT_COMMAND;
  1807  001D  01B5               	clrf	_state^(0+128)
  1808  001E  0AB5               	incf	_state^(0+128),f
  1809                           
  1810                           ;StringSerialProtocol.c: 149: commandCharCounter = 0;
  1811  001F  01B2               	clrf	_commandCharCounter^(0+128)
  1812                           
  1813                           ;StringSerialProtocol.c: 150: dataCounter = 0;
  1814  0020  01B3               	clrf	_dataCounter^(0+128)
  1815                           
  1816                           ;StringSerialProtocol.c: 151: } else if (state == WAIT_COMMAND) {
  1817  0021  284E               	goto	l8290
  1818  0022                     l8262:	
  1819  0022  0B35               	decfsz	_state^(0+128),w
  1820  0023  2838               	goto	l8276
  1821                           
  1822                           ;StringSerialProtocol.c: 152: if (lastReceivedChar == ':') {
  1823  0024  0848               	movf	StringSerialProtocolService@lastReceivedChar^(0+128),w
  1824  0025  3A3A               	xorlw	58
  1825  0026  1D03               	skipz
  1826  0027  282A               	goto	l8268
  1827                           
  1828                           ;StringSerialProtocol.c: 153: state = WAIT_DATA;
  1829  0028  3002               	movlw	2
  1830  0029  2841               	goto	L1
  1831  002A                     l8268:	
  1832                           ;StringSerialProtocol.c: 154: } else if (commandCharCounter < 4) {
  1833                           
  1834  002A  3004               	movlw	4
  1835  002B  0232               	subwf	_commandCharCounter^(0+128),w
  1836  002C  1803               	skipnc
  1837  002D  2836               	goto	l8274
  1838                           
  1839                           ;StringSerialProtocol.c: 155: commandBuffer[commandCharCounter] = lastReceivedChar;
  1840  002E  0832               	movf	_commandCharCounter^(0+128),w
  1841  002F  3EA6               	addlw	_commandBuffer& (0+255)
  1842  0030  0084               	movwf	4
  1843  0031  0848               	movf	StringSerialProtocolService@lastReceivedChar^(0+128),w
  1844  0032  1383               	bcf	3,7	;select IRP bank1
  1845  0033  0080               	movwf	0
  1846                           
  1847                           ;StringSerialProtocol.c: 156: ++commandCharCounter;
  1848  0034  0AB2               	incf	_commandCharCounter^(0+128),f
  1849                           
  1850                           ;StringSerialProtocol.c: 157: } else {
  1851  0035  284E               	goto	l8290
  1852  0036                     l8274:	
  1853                           
  1854                           ;StringSerialProtocol.c: 158: state = IDLE;
  1855  0036  01B5               	clrf	_state^(0+128)
  1856  0037  284E               	goto	l8290
  1857  0038                     l8276:	
  1858  0038  0835               	movf	_state^(0+128),w
  1859  0039  3A02               	xorlw	2
  1860  003A  1D03               	skipz
  1861  003B  284E               	goto	l8290
  1862                           
  1863                           ;StringSerialProtocol.c: 161: if (lastReceivedChar == '>') {
  1864  003C  0848               	movf	StringSerialProtocolService@lastReceivedChar^(0+128),w
  1865  003D  3A3E               	xorlw	62
  1866  003E  1D03               	skipz
  1867  003F  2843               	goto	l8282
  1868                           
  1869                           ;StringSerialProtocol.c: 162: state = RUN_COMMAND;
  1870  0040  3003               	movlw	3
  1871  0041                     L1:	
  1872  0041  00B5               	movwf	_state^(0+128)
  1873                           
  1874                           ;StringSerialProtocol.c: 163: } else if (dataCounter < 6) {
  1875  0042  284E               	goto	l8290
  1876  0043                     l8282:	
  1877  0043  3006               	movlw	6
  1878  0044  0233               	subwf	_dataCounter^(0+128),w
  1879  0045  1803               	skipnc
  1880  0046  2836               	goto	l8274
  1881                           
  1882                           ;StringSerialProtocol.c: 164: dataBuffer[dataCounter] = lastReceivedChar;
  1883  0047  0833               	movf	_dataCounter^(0+128),w
  1884  0048  3EC0               	addlw	_dataBuffer& (0+255)
  1885  0049  0084               	movwf	4
  1886  004A  0848               	movf	StringSerialProtocolService@lastReceivedChar^(0+128),w
  1887  004B  1383               	bcf	3,7	;select IRP bank1
  1888  004C  0080               	movwf	0
  1889                           
  1890                           ;StringSerialProtocol.c: 165: ++dataCounter;
  1891  004D  0AB3               	incf	_dataCounter^(0+128),f
  1892  004E                     l8290:	
  1893                           ;StringSerialProtocol.c: 166: } else {
  1894                           
  1895                           
  1896                           ;StringSerialProtocol.c: 168: }
  1897                           ;StringSerialProtocol.c: 169: }
  1898                           ;StringSerialProtocol.c: 171: if (state == RUN_COMMAND) {
  1899  004E  0835               	movf	_state^(0+128),w
  1900  004F  3A03               	xorlw	3
  1901  0050  1D03               	skipz
  1902  0051  0008               	return
  1903                           
  1904                           ;StringSerialProtocol.c: 172: if (CheckCommand(1)) {
  1905  0052  3001               	movlw	1
  1906  0053  21CD  120A  118A   	fcall	_CheckCommand
  1907  0056  3A00               	xorlw	0
  1908  0057  1903               	skipnz
  1909  0058  28CE               	goto	l8328
  1910                           
  1911                           ;StringSerialProtocol.c: 173: for (i = 0; i < 6; ++i) {
  1912  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1913  005A  01C9               	clrf	StringSerialProtocolService@i^(0+128)
  1914  005B                     l8300:	
  1915                           
  1916                           ;StringSerialProtocol.c: 174: if (dataBuffer[i] == 'A')
  1917  005B  0849               	movf	StringSerialProtocolService@i^(0+128),w
  1918  005C  3EC0               	addlw	_dataBuffer& (0+255)
  1919  005D  0084               	movwf	4
  1920  005E  1383               	bcf	3,7	;select IRP bank1
  1921  005F  0800               	movf	0,w
  1922  0060  3A41               	xorlw	65
  1923  0061  1D03               	skipz
  1924  0062  286C               	goto	l8304
  1925                           
  1926                           ;StringSerialProtocol.c: 175: vSetRelay(i + 1, 1);
  1927  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0064  01A0               	clrf	?_vSetRelay
  1929  0065  0AA0               	incf	?_vSetRelay,f
  1930  0066  1683               	bsf	3,5	;RP0=1, select bank1
  1931  0067  0A49               	incf	StringSerialProtocolService@i^(0+128),w
  1932  0068  2224  120A  118A   	fcall	_vSetRelay
  1933  006B  28C6               	goto	l8318
  1934  006C                     l8304:	
  1935                           
  1936                           ;StringSerialProtocol.c: 176: else if (dataBuffer[i] == 'K')
  1937  006C  0849               	movf	StringSerialProtocolService@i^(0+128),w
  1938  006D  3EC0               	addlw	_dataBuffer& (0+255)
  1939  006E  0084               	movwf	4
  1940  006F  0800               	movf	0,w
  1941  0070  3A4B               	xorlw	75
  1942  0071  1D03               	skipz
  1943  0072  287B               	goto	l8308
  1944                           
  1945                           ;StringSerialProtocol.c: 177: vSetRelay(i + 1, 0);
  1946  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0074  01A0               	clrf	?_vSetRelay
  1948  0075  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0076  0A49               	incf	StringSerialProtocolService@i^(0+128),w
  1950  0077  2224  120A  118A   	fcall	_vSetRelay
  1951  007A  28C6               	goto	l8318
  1952  007B                     l8308:	
  1953                           
  1954                           ;StringSerialProtocol.c: 178: else if (dataBuffer[i] == '0') {
  1955  007B  0849               	movf	StringSerialProtocolService@i^(0+128),w
  1956  007C  3EC0               	addlw	_dataBuffer& (0+255)
  1957  007D  0084               	movwf	4
  1958  007E  0800               	movf	0,w
  1959  007F  3A30               	xorlw	48
  1960  0080  1D03               	skipz
  1961  0081  2885               	goto	l8312
  1962                           
  1963                           ;StringSerialProtocol.c: 179: vPulseRelay(i + 1, 50);
  1964  0082  3032               	movlw	50
  1965  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0084  28C0               	goto	L2
  1967  0085                     l8312:	
  1968                           ;StringSerialProtocol.c: 180: } else if (((dataBuffer[i] - 48) > 0) && ((dataBuffer[i] -
      +                           48) <= 9)) {
  1969                           
  1970  0085  0849               	movf	StringSerialProtocolService@i^(0+128),w
  1971  0086  3EC0               	addlw	_dataBuffer& (0+255)
  1972  0087  0084               	movwf	4
  1973  0088  0800               	movf	0,w
  1974  0089  3ED0               	addlw	208
  1975  008A  00C6               	movwf	??_StringSerialProtocolService^(0+128)
  1976  008B  30FF               	movlw	255
  1977  008C  1803               	skipnc
  1978  008D  3000               	movlw	0
  1979  008E  00C7               	movwf	(??_StringSerialProtocolService^(0+128)+1)
  1980  008F  0847               	movf	(??_StringSerialProtocolService+1)^(0+128),w
  1981  0090  3A80               	xorlw	128
  1982  0091  00FF               	movwf	127
  1983  0092  3080               	movlw	128
  1984  0093  027F               	subwf	127,w
  1985  0094  1D03               	skipz
  1986  0095  2898               	goto	u2965
  1987  0096  3001               	movlw	1
  1988  0097  0246               	subwf	??_StringSerialProtocolService^(0+128),w
  1989  0098                     u2965:	
  1990  0098  1C03               	skipc
  1991  0099  28C6               	goto	l8318
  1992  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1993  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1994  009C  0849               	movf	StringSerialProtocolService@i^(0+128),w
  1995  009D  3EC0               	addlw	_dataBuffer& (0+255)
  1996  009E  0084               	movwf	4
  1997  009F  1383               	bcf	3,7	;select IRP bank1
  1998  00A0  0800               	movf	0,w
  1999  00A1  3ED0               	addlw	208
  2000  00A2  00C6               	movwf	??_StringSerialProtocolService^(0+128)
  2001  00A3  30FF               	movlw	255
  2002  00A4  1803               	skipnc
  2003  00A5  3000               	movlw	0
  2004  00A6  00C7               	movwf	(??_StringSerialProtocolService^(0+128)+1)
  2005  00A7  0847               	movf	(??_StringSerialProtocolService+1)^(0+128),w
  2006  00A8  3A80               	xorlw	128
  2007  00A9  00FF               	movwf	127
  2008  00AA  3080               	movlw	128
  2009  00AB  027F               	subwf	127,w
  2010  00AC  1D03               	skipz
  2011  00AD  28B0               	goto	u2975
  2012  00AE  300A               	movlw	10
  2013  00AF  0246               	subwf	??_StringSerialProtocolService^(0+128),w
  2014  00B0                     u2975:	
  2015  00B0  1803               	skipnc
  2016  00B1  28C6               	goto	l8318
  2017                           
  2018                           ;StringSerialProtocol.c: 181: vPulseRelay(i + 1, (dataBuffer[i] - 48)*5);
  2019  00B2  3005               	movlw	5
  2020  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  2021  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  2022  00B5  00A0               	movwf	?___bmul
  2023  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  2024  00B7  0849               	movf	StringSerialProtocolService@i^(0+128),w
  2025  00B8  3EC0               	addlw	_dataBuffer& (0+255)
  2026  00B9  0084               	movwf	4
  2027  00BA  1383               	bcf	3,7	;select IRP bank1
  2028  00BB  0800               	movf	0,w
  2029  00BC  3ED0               	addlw	208
  2030  00BD  22A9  120A  118A   	fcall	___bmul
  2031  00C0                     L2:	
  2032  00C0  00A3               	movwf	?_vPulseRelay
  2033  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2034  00C2  0A49               	incf	StringSerialProtocolService@i^(0+128),w
  2035  00C3  225C  120A  118A   	fcall	_vPulseRelay
  2036  00C6                     l8318:	
  2037  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  2038  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  2039  00C8  3006               	movlw	6
  2040  00C9  0AC9               	incf	StringSerialProtocolService@i^(0+128),f
  2041  00CA  0249               	subwf	StringSerialProtocolService@i^(0+128),w
  2042  00CB  1C03               	skipc
  2043  00CC  285B               	goto	l8300
  2044  00CD  29A3               	goto	L3
  2045  00CE                     l8328:	
  2046                           ;StringSerialProtocol.c: 191: } else if (CheckCommand(2)) {
  2047                           
  2048                           ;StringSerialProtocol.c: 189: setCommunicationTimeOut(3000);
  2049                           
  2050                           ;StringSerialProtocol.c: 188: vSendDataToUart();
  2051                           
  2052                           ;StringSerialProtocol.c: 187: vAddToUartTransmitBuffer('>');
  2053                           
  2054                           ;StringSerialProtocol.c: 186: vAddToUartTransmitBuffer('K');
  2055                           
  2056                           ;StringSerialProtocol.c: 185: vAddToUartTransmitBuffer('O');
  2057                           
  2058                           ;StringSerialProtocol.c: 182: }
  2059                           ;StringSerialProtocol.c: 183: }
  2060                           ;StringSerialProtocol.c: 184: vAddToUartTransmitBuffer('<');
  2061                           
  2062  00CE  3002               	movlw	2
  2063  00CF  21CD  120A  118A   	fcall	_CheckCommand
  2064  00D2  3A00               	xorlw	0
  2065  00D3  1903               	skipnz
  2066  00D4  2925               	goto	l8344
  2067                           
  2068                           ;StringSerialProtocol.c: 192: temperature_mV = getTemperature();
  2069  00D5  2315  120A  118A   	fcall	_getTemperature
  2070  00D8  0858               	movf	?_getTemperature+1,w
  2071  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  2072  00DA  00AF               	movwf	(_temperature_mV+1)^(0+128)
  2073  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2074  00DC  0857               	movf	?_getTemperature,w
  2075  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  2076  00DE  00AE               	movwf	_temperature_mV^(0+128)
  2077                           
  2078                           ;StringSerialProtocol.c: 193: currentTemperature = calgulateTemp(temperature_mV);
  2079  00DF  082F               	movf	(_temperature_mV+1)^(0+128),w	;volatile
  2080  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2081  00E1  00E4               	movwf	?_calgulateTemp+1
  2082  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  2083  00E3  082E               	movf	_temperature_mV^(0+128),w	;volatile
  2084  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2085  00E5  00E3               	movwf	?_calgulateTemp
  2086  00E6  2363  120A  118A   	fcall	_calgulateTemp
  2087  00E9  0864               	movf	?_calgulateTemp+1,w
  2088  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  2089  00EB  00AD               	movwf	(_currentTemperature+1)^(0+128)	;volatile
  2090  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2091  00ED  0863               	movf	?_calgulateTemp,w
  2092  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2093  00EF  00AC               	movwf	_currentTemperature^(0+128)	;volatile
  2094                           
  2095                           ;StringSerialProtocol.c: 194: currentTemperature += temperatureOffset();
  2096  00F0  22B8  120A  118A   	fcall	_temperatureOffset
  2097  00F3  0826               	movf	?_temperatureOffset,w
  2098  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  2099  00F5  07AC               	addwf	_currentTemperature^(0+128),f	;volatile
  2100  00F6  1803               	skipnc
  2101  00F7  0AAD               	incf	(_currentTemperature+1)^(0+128),f	;volatile
  2102  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2103  00F9  0827               	movf	?_temperatureOffset+1,w
  2104  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  2105  00FB  07AD               	addwf	(_currentTemperature+1)^(0+128),f	;volatile
  2106                           
  2107                           ;StringSerialProtocol.c: 195: vResetPrintBuffer();
  2108  00FC  228C               	fcall	_vResetPrintBuffer
  2109                           
  2110                           ;StringSerialProtocol.c: 196: vSendTemperatureToBuffer(currentTemperature);
  2111  00FD  1683               	bsf	3,5	;RP0=1, select bank1
  2112  00FE  082D               	movf	(_currentTemperature+1)^(0+128),w	;volatile
  2113  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0100  00B6               	movwf	?_vSendTemperatureToBuffer+1
  2115  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0102  082C               	movf	_currentTemperature^(0+128),w	;volatile
  2117  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0104  00B5               	movwf	?_vSendTemperatureToBuffer
  2119  0105  120A  158A  26B5   	fcall	_vSendTemperatureToBuffer
      +       120A  118A         
  2120                           
  2121                           ;StringSerialProtocol.c: 197: vAddToUartTransmitBuffer('<');
  2122  010A  303C               	movlw	60
  2123  010B  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2124                           
  2125                           ;StringSerialProtocol.c: 198: vAddToUartTransmitBuffer(printBuffer[0]);
  2126  010E  1683               	bsf	3,5	;RP0=1, select bank1
  2127  010F  0820               	movf	_printBuffer^(0+128),w
  2128  0110  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2129                           
  2130                           ;StringSerialProtocol.c: 199: vAddToUartTransmitBuffer(printBuffer[1]);
  2131  0113  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0114  0821               	movf	(_printBuffer^(0+128)+1),w
  2133  0115  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2134                           
  2135                           ;StringSerialProtocol.c: 200: vAddToUartTransmitBuffer(printBuffer[2]);
  2136  0118  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0119  0822               	movf	(_printBuffer^(0+128)+2),w
  2138  011A  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2139                           
  2140                           ;StringSerialProtocol.c: 201: vAddToUartTransmitBuffer(printBuffer[3]);
  2141  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2142  011E  0823               	movf	(_printBuffer^(0+128)+3),w
  2143  011F  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2144                           
  2145                           ;StringSerialProtocol.c: 202: vAddToUartTransmitBuffer(printBuffer[4]);
  2146  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2147  0123  0824               	movf	(_printBuffer^(0+128)+4),w
  2148  0124  29AC               	goto	L4
  2149  0125                     l8344:	
  2150                           ;StringSerialProtocol.c: 203: vAddToUartTransmitBuffer('>');
  2151                           
  2152  0125  3003               	movlw	3
  2153  0126  21CD  120A  118A   	fcall	_CheckCommand
  2154  0129  3A00               	xorlw	0
  2155  012A  1903               	skipnz
  2156  012B  29BC               	goto	l8426
  2157                           
  2158                           ;StringSerialProtocol.c: 207: (GIE = 0);
  2159  012C  138B               	bcf	11,7
  2160  012D                     l4432:	
  2161  012D  1683               	bsf	3,5	;RP0=1, select bank3
  2162  012E  1703               	bsf	3,6	;RP1=1, select bank3
  2163  012F  188C               	btfsc	12,1
  2164  0130  292D               	goto	l4432
  2165  0131  3005               	movlw	5
  2166  0132  1283               	bcf	3,5	;RP0=0, select bank2
  2167  0133  008D               	movwf	13	;volatile
  2168  0134  1683               	bsf	3,5	;RP0=1, select bank1
  2169  0135  1303               	bcf	3,6	;RP1=0, select bank1
  2170  0136  0840               	movf	_dataBuffer^(0+128),w
  2171  0137  1283               	bcf	3,5	;RP0=0, select bank2
  2172  0138  1703               	bsf	3,6	;RP1=1, select bank2
  2173  0139  008C               	movwf	12	;volatile
  2174  013A  303F               	movlw	63
  2175  013B  1683               	bsf	3,5	;RP0=1, select bank3
  2176  013C  058C               	andwf	12,f	;volatile
  2177  013D  1003               	bcf	3,0
  2178  013E  1B8B               	btfsc	11,7
  2179  013F  1403               	bsf	3,0
  2180  0140  3055               	movlw	85
  2181  0141  138B               	bcf	11,7
  2182  0142  150C               	bsf	12,2
  2183  0143  008D               	movwf	13	;volatile
  2184  0144  30AA               	movlw	170
  2185  0145  008D               	movwf	13	;volatile
  2186  0146  148C               	bsf	12,1
  2187  0147  110C               	bcf	12,2
  2188  0148  1803               	btfsc	3,0
  2189  0149  178B               	bsf	11,7
  2190                           
  2191                           ;StringSerialProtocol.c: 209: _delay((unsigned long)((5)*(8000000/4000.0)));
  2192  014A  300D               	movlw	13
  2193  014B  1303               	bcf	3,6	;RP1=0, select bank1
  2194  014C  00C7               	movwf	(??_StringSerialProtocolService^(0+128)+1)
  2195  014D  30FB               	movlw	251
  2196  014E  00C6               	movwf	??_StringSerialProtocolService^(0+128)
  2197  014F                     u3167:	
  2198  014F  0BC6               	decfsz	??_StringSerialProtocolService^(0+128),f
  2199  0150  294F               	goto	u3167
  2200  0151  0BC7               	decfsz	(??_StringSerialProtocolService^(0+128)+1),f
  2201  0152  294F               	goto	u3167
  2202  0153  2954               	nop2
  2203  0154                     l4439:	
  2204  0154  1683               	bsf	3,5	;RP0=1, select bank3
  2205  0155  1703               	bsf	3,6	;RP1=1, select bank3
  2206  0156  188C               	btfsc	12,1
  2207  0157  2954               	goto	l4439
  2208  0158  3006               	movlw	6
  2209  0159  1283               	bcf	3,5	;RP0=0, select bank2
  2210  015A  008D               	movwf	13	;volatile
  2211  015B  1683               	bsf	3,5	;RP0=1, select bank1
  2212  015C  1303               	bcf	3,6	;RP1=0, select bank1
  2213  015D  0841               	movf	(_dataBuffer^(0+128)+1),w
  2214  015E  1283               	bcf	3,5	;RP0=0, select bank2
  2215  015F  1703               	bsf	3,6	;RP1=1, select bank2
  2216  0160  008C               	movwf	12	;volatile
  2217  0161  303F               	movlw	63
  2218  0162  1683               	bsf	3,5	;RP0=1, select bank3
  2219  0163  058C               	andwf	12,f	;volatile
  2220  0164  1003               	bcf	3,0
  2221  0165  1B8B               	btfsc	11,7
  2222  0166  1403               	bsf	3,0
  2223  0167  3055               	movlw	85
  2224  0168  138B               	bcf	11,7
  2225  0169  150C               	bsf	12,2
  2226  016A  008D               	movwf	13	;volatile
  2227  016B  30AA               	movlw	170
  2228  016C  008D               	movwf	13	;volatile
  2229  016D  148C               	bsf	12,1
  2230  016E  110C               	bcf	12,2
  2231  016F  1803               	btfsc	3,0
  2232  0170  178B               	bsf	11,7
  2233                           
  2234                           ;StringSerialProtocol.c: 211: _delay((unsigned long)((5)*(8000000/4000.0)));
  2235  0171  300D               	movlw	13
  2236  0172  1303               	bcf	3,6	;RP1=0, select bank1
  2237  0173  00C7               	movwf	(??_StringSerialProtocolService^(0+128)+1)
  2238  0174  30FB               	movlw	251
  2239  0175  00C6               	movwf	??_StringSerialProtocolService^(0+128)
  2240  0176                     u3177:	
  2241  0176  0BC6               	decfsz	??_StringSerialProtocolService^(0+128),f
  2242  0177  2976               	goto	u3177
  2243  0178  0BC7               	decfsz	(??_StringSerialProtocolService^(0+128)+1),f
  2244  0179  2976               	goto	u3177
  2245  017A  297B               	nop2
  2246  017B                     l4446:	
  2247  017B  1683               	bsf	3,5	;RP0=1, select bank3
  2248  017C  1703               	bsf	3,6	;RP1=1, select bank3
  2249  017D  188C               	btfsc	12,1
  2250  017E  297B               	goto	l4446
  2251  017F  3007               	movlw	7
  2252  0180  1283               	bcf	3,5	;RP0=0, select bank2
  2253  0181  008D               	movwf	13	;volatile
  2254  0182  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0183  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0184  0842               	movf	(_dataBuffer^(0+128)+2),w
  2257  0185  1283               	bcf	3,5	;RP0=0, select bank2
  2258  0186  1703               	bsf	3,6	;RP1=1, select bank2
  2259  0187  008C               	movwf	12	;volatile
  2260  0188  303F               	movlw	63
  2261  0189  1683               	bsf	3,5	;RP0=1, select bank3
  2262  018A  058C               	andwf	12,f	;volatile
  2263  018B  1003               	bcf	3,0
  2264  018C  1B8B               	btfsc	11,7
  2265  018D  1403               	bsf	3,0
  2266  018E  3055               	movlw	85
  2267  018F  138B               	bcf	11,7
  2268  0190  150C               	bsf	12,2
  2269  0191  008D               	movwf	13	;volatile
  2270  0192  30AA               	movlw	170
  2271  0193  008D               	movwf	13	;volatile
  2272  0194  148C               	bsf	12,1
  2273  0195  110C               	bcf	12,2
  2274  0196  1803               	btfsc	3,0
  2275  0197  178B               	bsf	11,7
  2276                           
  2277                           ;StringSerialProtocol.c: 213: _delay((unsigned long)((5)*(8000000/4000.0)));
  2278  0198  300D               	movlw	13
  2279  0199  1303               	bcf	3,6	;RP1=0, select bank1
  2280  019A  00C7               	movwf	(??_StringSerialProtocolService^(0+128)+1)
  2281  019B  30FB               	movlw	251
  2282  019C  00C6               	movwf	??_StringSerialProtocolService^(0+128)
  2283  019D                     u3187:	
  2284  019D  0BC6               	decfsz	??_StringSerialProtocolService^(0+128),f
  2285  019E  299D               	goto	u3187
  2286  019F  0BC7               	decfsz	(??_StringSerialProtocolService^(0+128)+1),f
  2287  01A0  299D               	goto	u3187
  2288  01A1  29A2               	nop2
  2289                           
  2290                           ;StringSerialProtocol.c: 214: (GIE = 1);
  2291  01A2  178B               	bsf	11,7
  2292  01A3                     L3:	
  2293                           
  2294                           ;StringSerialProtocol.c: 215: vAddToUartTransmitBuffer('<');
  2295  01A3  303C               	movlw	60
  2296  01A4  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2297                           
  2298                           ;StringSerialProtocol.c: 216: vAddToUartTransmitBuffer('O');
  2299  01A7  304F               	movlw	79
  2300  01A8  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2301                           
  2302                           ;StringSerialProtocol.c: 217: vAddToUartTransmitBuffer('K');
  2303  01AB  304B               	movlw	75
  2304  01AC                     L4:	
  2305  01AC  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2306                           
  2307                           ;StringSerialProtocol.c: 218: vAddToUartTransmitBuffer('>');
  2308  01AF  303E               	movlw	62
  2309  01B0  21BF  120A  118A   	fcall	_vAddToUartTransmitBuffer
  2310                           
  2311                           ;StringSerialProtocol.c: 219: vSendDataToUart();
  2312  01B3  2257  120A  118A   	fcall	_vSendDataToUart
  2313                           
  2314                           ;StringSerialProtocol.c: 220: setCommunicationTimeOut(3000);
  2315  01B6  30B8               	movlw	184
  2316  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2317  01B8  00A0               	movwf	?_setCommunicationTimeOut
  2318  01B9  300B               	movlw	11
  2319  01BA  00A1               	movwf	?_setCommunicationTimeOut+1
  2320  01BB  2793               	fcall	_setCommunicationTimeOut
  2321  01BC                     l8426:	
  2322                           
  2323                           ;StringSerialProtocol.c: 221: }
  2324                           ;StringSerialProtocol.c: 222: state = IDLE;
  2325  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2326  01BD  01B5               	clrf	_state^(0+128)
  2327  01BE  0008               	return
  2328  01BF                     __end_of_StringSerialProtocolService:	
  2329  01BF                     __ptext742:	
  2330 ;; =============== function _vSendDataToUart ends ============
  2331                           
  2332                           
  2333 ;; *************** function _vAddToUartTransmitBuffer *****************
  2334 ;; Defined at:
  2335 ;;		line 111 in file "../src/StringSerialProtocol.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  data            1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  data            1    0[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;		None               void
  2342 ;; Registers used:
  2343 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/20
  2346 ;;		On exit  : 160/100
  2347 ;;		Unchanged: FFE9F/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         0       0       0       0       0
  2350 ;;      Locals:         0       1       0       0       0
  2351 ;;      Temps:          0       0       0       0       0
  2352 ;;      Totals:         0       1       0       0       0
  2353 ;;Total ram usage:        1 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    3
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_main
  2360 ;;		_StringSerialProtocolService
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363  01BF                     _vAddToUartTransmitBuffer:	
  2364  01BF  27ED               	call	PL12	;select bank 0
  2365                           
  2366                           ; Regs used in _vAddToUartTransmitBuffer: [wreg-fsr0h+status,2+status,0]
  2367                           ;vAddToUartTransmitBuffer@data stored from wreg
  2368  01C0  00A0               	movwf	vAddToUartTransmitBuffer@data
  2369                           
  2370                           ;StringSerialProtocol.c: 112: uartTransmitBuffer[uartTransmitBufferW] = data;
  2371  01C1  087C               	movf	_uartTransmitBufferW,w
  2372  01C2  3E10               	addlw	_uartTransmitBuffer& (0+255)
  2373  01C3  0084               	movwf	4
  2374  01C4  0820               	movf	vAddToUartTransmitBuffer@data,w
  2375  01C5  1783               	bsf	3,7	;select IRP bank2
  2376  01C6  0080               	movwf	0
  2377                           
  2378                           ;StringSerialProtocol.c: 113: uartTransmitBufferW++;
  2379  01C7  0AFC               	incf	_uartTransmitBufferW,f	;volatile
  2380                           
  2381                           ;StringSerialProtocol.c: 114: if (uartTransmitBufferW == 60) {
  2382  01C8  087C               	movf	_uartTransmitBufferW,w	;volatile
  2383  01C9  3A3C               	xorlw	60
  2384  01CA  1903               	btfsc	3,2
  2385                           
  2386                           ;StringSerialProtocol.c: 115: uartTransmitBufferW = 0;
  2387  01CB  01FC               	clrf	_uartTransmitBufferW	;volatile
  2388  01CC  0008               	return
  2389  01CD                     __end_of_vAddToUartTransmitBuffer:	
  2390  01CD                     __ptext735:	
  2391 ;; =============== function ___bmul ends ============
  2392                           
  2393                           
  2394 ;; *************** function _CheckCommand *****************
  2395 ;; Defined at:
  2396 ;;		line 254 in file "../src/StringSerialProtocol.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  command         1    wreg     unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  command         1    1[BANK0 ] unsigned char 
  2401 ;;  i               1    4[BANK0 ] unsigned char 
  2402 ;;  size            1    3[BANK0 ] unsigned char 
  2403 ;;  result          1    2[BANK0 ] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      unsigned char 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2408 ;; Tracked objects:
  2409 ;;		On entry : 40/120
  2410 ;;		On exit  : 60/0
  2411 ;;		Unchanged: FFE9F/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         0       4       0       0       0
  2415 ;;      Temps:          0       1       0       0       0
  2416 ;;      Totals:         0       5       0       0       0
  2417 ;;Total ram usage:        5 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    3
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_StringSerialProtocolService
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426  01CD                     _CheckCommand:	
  2427                           
  2428                           ; Regs used in _CheckCommand: [wreg-fsr0h+status,2+status,0+pclath]
  2429                           ;CheckCommand@command stored from wreg
  2430  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2431  01CE  00A1               	movwf	CheckCommand@command
  2432                           
  2433                           ;StringSerialProtocol.c: 256: unsigned char i;
  2434                           ;StringSerialProtocol.c: 257: unsigned char size = 0;
  2435  01CF  01A3               	clrf	CheckCommand@size
  2436                           
  2437                           ;StringSerialProtocol.c: 259: result = 1;
  2438  01D0  01A2               	clrf	CheckCommand@result
  2439  01D1  0AA2               	incf	CheckCommand@result,f
  2440                           
  2441                           ;StringSerialProtocol.c: 260: switch (command) {
  2442  01D2  2A17               	goto	l7708
  2443  01D3                     l7668:	
  2444                           
  2445                           ;StringSerialProtocol.c: 262: size = sizeof (ROLE) - 1;
  2446  01D3  3004               	movlw	4
  2447  01D4  00A3               	movwf	CheckCommand@size
  2448                           
  2449                           ;StringSerialProtocol.c: 264: for (i = 0; i < size; ++i) {
  2450  01D5  01A4               	clrf	CheckCommand@i
  2451  01D6                     l7678:	
  2452  01D6  0823               	movf	CheckCommand@size,w
  2453  01D7  0224               	subwf	CheckCommand@i,w
  2454  01D8  1803               	btfsc	3,0
  2455  01D9  2A22               	goto	l7710
  2456                           
  2457                           ;StringSerialProtocol.c: 265: if (commandBuffer[i] != ROLE[i]) {
  2458  01DA  0824               	movf	CheckCommand@i,w
  2459  01DB  3E59               	addlw	low (_ROLE-__stringbase)
  2460  01DC  0084               	movwf	4
  2461  01DD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2462  01E2  27A4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2463  01E5  1903               	skipnz
  2464  01E6  29E9               	goto	l7676
  2465  01E7                     l7674:	
  2466                           
  2467                           ;StringSerialProtocol.c: 266: result = 0;
  2468  01E7  01A2               	clrf	CheckCommand@result
  2469                           
  2470                           ;StringSerialProtocol.c: 267: break;
  2471  01E8  2A22               	goto	l7710
  2472  01E9                     l7676:	
  2473  01E9  0AA4               	incf	CheckCommand@i,f
  2474  01EA  29D6               	goto	l7678
  2475  01EB                     l7680:	
  2476                           
  2477                           ;StringSerialProtocol.c: 272: size = sizeof (ISI) - 1;
  2478  01EB  3003               	movlw	3
  2479  01EC  00A3               	movwf	CheckCommand@size
  2480                           
  2481                           ;StringSerialProtocol.c: 274: for (i = 0; i < size; ++i) {
  2482  01ED  01A4               	clrf	CheckCommand@i
  2483  01EE                     l7690:	
  2484  01EE  0823               	movf	CheckCommand@size,w
  2485  01EF  0224               	subwf	CheckCommand@i,w
  2486  01F0  1803               	btfsc	3,0
  2487  01F1  2A22               	goto	l7710
  2488                           
  2489                           ;StringSerialProtocol.c: 275: if (commandBuffer[i] != ISI[i]) {
  2490  01F2  0824               	movf	CheckCommand@i,w
  2491  01F3  3E5E               	addlw	low (_ISI-__stringbase)
  2492  01F4  0084               	movwf	4
  2493  01F5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2494  01FA  27A4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2495  01FD  1D03               	btfss	3,2
  2496  01FE  29E7               	goto	l7674
  2497  01FF  0AA4               	incf	CheckCommand@i,f
  2498  0200  29EE               	goto	l7690
  2499  0201                     l7692:	
  2500                           
  2501                           ;StringSerialProtocol.c: 282: size = sizeof (TMO) - 1;
  2502  0201  3003               	movlw	3
  2503  0202  00A3               	movwf	CheckCommand@size
  2504                           
  2505                           ;StringSerialProtocol.c: 284: for (i = 0; i < size; ++i) {
  2506  0203  01A4               	clrf	CheckCommand@i
  2507  0204                     l7702:	
  2508  0204  0823               	movf	CheckCommand@size,w
  2509  0205  0224               	subwf	CheckCommand@i,w
  2510  0206  1803               	btfsc	3,0
  2511  0207  2A22               	goto	l7710
  2512                           
  2513                           ;StringSerialProtocol.c: 285: if (commandBuffer[i] != TMO[i]) {
  2514  0208  0824               	movf	CheckCommand@i,w
  2515  0209  3E62               	addlw	low (_TMO-__stringbase)
  2516  020A  0084               	movwf	4
  2517  020B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2518  0210  27A4  120A  118A   	fcall	PL3	;call to abstracted procedure
  2519  0213  1D03               	btfss	3,2
  2520  0214  29E7               	goto	l7674
  2521  0215  0AA4               	incf	CheckCommand@i,f
  2522  0216  2A04               	goto	l7702
  2523  0217                     l7708:	
  2524  0217  0821               	movf	CheckCommand@command,w
  2525                           
  2526                           ; Switch size 1, requested type "space"
  2527                           ; Number of cases is 3, Range of values is 1 to 3
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte           10     6 (average)
  2531                           ; direct_byte           20    11 (fixed)
  2532                           ; jumptable            263     9 (fixed)
  2533                           ;	Chosen strategy is simple_byte
  2534  0218  3A01               	xorlw	1	; case 1
  2535  0219  1903               	skipnz
  2536  021A  29D3               	goto	l7668
  2537  021B  3A03               	xorlw	3	; case 2
  2538  021C  1903               	skipnz
  2539  021D  29EB               	goto	l7680
  2540  021E  3A01               	xorlw	1	; case 3
  2541  021F  1903               	skipnz
  2542  0220  2A01               	goto	l7692
  2543  0221  29E7               	goto	l7674
  2544  0222                     l7710:	
  2545                           
  2546                           ;StringSerialProtocol.c: 295: return result;
  2547  0222  0822               	movf	CheckCommand@result,w
  2548  0223  0008               	return
  2549  0224                     __end_of_CheckCommand:	
  2550  0224                     __ptext739:	
  2551 ;; =============== function _read_ADC ends ============
  2552                           
  2553                           
  2554 ;; *************** function _vSetRelay *****************
  2555 ;; Defined at:
  2556 ;;		line 309 in file "../src/main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  relay           1    wreg     unsigned char 
  2559 ;;  value           1    0[BANK0 ] unsigned char 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  relay           1    1[BANK0 ] unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;		None               void
  2564 ;; Registers used:
  2565 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2566 ;; Tracked objects:
  2567 ;;		On entry : 160/20
  2568 ;;		On exit  : 160/0
  2569 ;;		Unchanged: FFE9F/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         0       1       0       0       0
  2572 ;;      Locals:         0       1       0       0       0
  2573 ;;      Temps:          0       0       0       0       0
  2574 ;;      Totals:         0       2       0       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_StringSerialProtocolService
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584  0224                     _vSetRelay:	
  2585                           
  2586                           ; Regs used in _vSetRelay: [wreg-fsr0h+status,2+status,0]
  2587                           ;vSetRelay@relay stored from wreg
  2588  0224  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0225  00A1               	movwf	vSetRelay@relay
  2590                           
  2591                           ;main.c: 310: switch (relay) {
  2592  0226  2A45               	goto	l7628
  2593  0227                     l7616:	
  2594                           
  2595                           ;main.c: 312: (PORTDbits.RD1) = value;
  2596  0227  0820               	movf	vSetRelay@value,w
  2597  0228  1D03               	skipz
  2598  0229  1488               	bsf	8,1	;volatile
  2599  022A  1903               	skipnz
  2600  022B  1088               	bcf	8,1	;volatile
  2601                           
  2602                           ;main.c: 313: break;
  2603  022C  0008               	return
  2604  022D                     l7618:	
  2605                           
  2606                           ;main.c: 315: (PORTDbits.RD2) = value;
  2607  022D  0820               	movf	vSetRelay@value,w
  2608  022E  1D03               	skipz
  2609  022F  1508               	bsf	8,2	;volatile
  2610  0230  1903               	skipnz
  2611  0231  1108               	bcf	8,2	;volatile
  2612                           
  2613                           ;main.c: 316: break;
  2614  0232  0008               	return
  2615  0233                     l7620:	
  2616                           
  2617                           ;main.c: 318: (PORTDbits.RD3) = value;
  2618  0233  0820               	movf	vSetRelay@value,w
  2619  0234  1D03               	skipz
  2620  0235  1588               	bsf	8,3	;volatile
  2621  0236  1903               	skipnz
  2622  0237  1188               	bcf	8,3	;volatile
  2623                           
  2624                           ;main.c: 319: break;
  2625  0238  0008               	return
  2626  0239                     l7622:	
  2627                           
  2628                           ;main.c: 321: (PORTCbits.RC4) = value;
  2629  0239  0820               	movf	vSetRelay@value,w
  2630  023A  1D03               	skipz
  2631  023B  1607               	bsf	7,4	;volatile
  2632  023C  1903               	skipnz
  2633  023D  1207               	bcf	7,4	;volatile
  2634                           
  2635                           ;main.c: 322: break;
  2636  023E  0008               	return
  2637  023F                     l7624:	
  2638                           
  2639                           ;main.c: 324: (PORTCbits.RC5) = value;
  2640  023F  0820               	movf	vSetRelay@value,w
  2641  0240  1D03               	skipz
  2642  0241  1687               	bsf	7,5	;volatile
  2643  0242  1903               	skipnz
  2644  0243  1287               	bcf	7,5	;volatile
  2645                           
  2646                           ;main.c: 325: break;
  2647  0244  0008               	return
  2648  0245                     l7628:	
  2649  0245  0821               	movf	vSetRelay@relay,w
  2650                           
  2651                           ; Switch size 1, requested type "space"
  2652                           ; Number of cases is 5, Range of values is 1 to 5
  2653                           ; switch strategies available:
  2654                           ; Name         Instructions Cycles
  2655                           ; simple_byte           16     9 (average)
  2656                           ; direct_byte           26    11 (fixed)
  2657                           ; jumptable            263     9 (fixed)
  2658                           ;	Chosen strategy is simple_byte
  2659  0246  3A01               	xorlw	1	; case 1
  2660  0247  1903               	skipnz
  2661  0248  2A27               	goto	l7616
  2662  0249  3A03               	xorlw	3	; case 2
  2663  024A  1903               	skipnz
  2664  024B  2A2D               	goto	l7618
  2665  024C  3A01               	xorlw	1	; case 3
  2666  024D  1903               	skipnz
  2667  024E  2A33               	goto	l7620
  2668  024F  3A07               	xorlw	7	; case 4
  2669  0250  1903               	skipnz
  2670  0251  2A39               	goto	l7622
  2671  0252  3A01               	xorlw	1	; case 5
  2672  0253  1903               	skipnz
  2673  0254  2A3F               	goto	l7624
  2674  0255  2A56               	goto	l1172
  2675  0256                     l1172:	
  2676  0256  0008               	return
  2677  0257                     __end_of_vSetRelay:	
  2678  0257                     __ptext741:	
  2679 ;; =============== function _vPulseRelay ends ============
  2680                           
  2681                           
  2682 ;; *************** function _vSendDataToUart *****************
  2683 ;; Defined at:
  2684 ;;		line 147 in file "../src/uart.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;		None               void
  2691 ;; Registers used:
  2692 ;;		None
  2693 ;; Tracked objects:
  2694 ;;		On entry : 40/100
  2695 ;;		On exit  : 60/120
  2696 ;;		Unchanged: FFF9F/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    3
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;;		_StringSerialProtocolService
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712  0257                     _vSendDataToUart:	
  2713                           
  2714                           ;uart.c: 148: TXIF = 0;
  2715                           
  2716                           ; Regs used in _vSendDataToUart: []
  2717  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0258  120C               	bcf	12,4
  2719                           
  2720                           ;uart.c: 149: TXIE = 1;
  2721  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2722  025A  160C               	bsf	12,4
  2723  025B  0008               	return
  2724  025C                     __end_of_vSendDataToUart:	
  2725  025C                     __ptext740:	
  2726 ;; =============== function _vSetRelay ends ============
  2727                           
  2728                           
  2729 ;; *************** function _vPulseRelay *****************
  2730 ;; Defined at:
  2731 ;;		line 265 in file "../src/main.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  relay           1    wreg     unsigned char 
  2734 ;;  timerValue      1    3[BANK0 ] unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  relay           1    4[BANK0 ] unsigned char 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;		None               void
  2739 ;; Registers used:
  2740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2741 ;; Tracked objects:
  2742 ;;		On entry : 160/20
  2743 ;;		On exit  : 140/0
  2744 ;;		Unchanged: FFE9F/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       1       0       0       0
  2747 ;;      Locals:         0       1       0       0       0
  2748 ;;      Temps:          0       0       0       0       0
  2749 ;;      Totals:         0       2       0       0       0
  2750 ;;Total ram usage:        2 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    3
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_StringSerialProtocolService
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759  025C                     _vPulseRelay:	
  2760                           
  2761                           ; Regs used in _vPulseRelay: [wreg-fsr0h+status,2+status,0]
  2762                           ;vPulseRelay@relay stored from wreg
  2763  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2764  025D  00A4               	movwf	vPulseRelay@relay
  2765                           
  2766                           ;main.c: 266: switch (relay) {
  2767  025E  2A7A               	goto	l7612
  2768  025F                     l1154:	
  2769                           ;main.c: 267: case 1:
  2770                           
  2771                           
  2772                           ;main.c: 268: (PORTDbits.RD1) = 1;
  2773  025F  1488               	bsf	8,1	;volatile
  2774                           
  2775                           ;main.c: 269: RELAY_1_Timer = timerValue;
  2776  0260  0823               	movf	vPulseRelay@timerValue,w
  2777  0261  00F9               	movwf	_RELAY_1_Timer	;volatile
  2778                           
  2779                           ;main.c: 270: RELAY_1_Timer_En = 1;
  2780  0262  1478               	bsf	_RELAY_1_Timer_En/(0+8),_RELAY_1_Timer_En& (0+7)
  2781                           
  2782                           ;main.c: 271: break;
  2783  0263  0008               	return
  2784  0264                     l1156:	
  2785                           ;main.c: 272: case 2:
  2786                           
  2787                           
  2788                           ;main.c: 273: (PORTDbits.RD2) = 1;
  2789  0264  1508               	bsf	8,2	;volatile
  2790                           
  2791                           ;main.c: 274: RELAY_2_Timer = timerValue;
  2792  0265  0823               	movf	vPulseRelay@timerValue,w
  2793  0266  00FA               	movwf	_RELAY_2_Timer	;volatile
  2794                           
  2795                           ;main.c: 275: RELAY_2_Timer_En = 1;
  2796  0267  14F8               	bsf	_RELAY_2_Timer_En/(0+8),_RELAY_2_Timer_En& (0+7)
  2797                           
  2798                           ;main.c: 276: break;
  2799  0268  0008               	return
  2800  0269                     l1157:	
  2801                           ;main.c: 277: case 3:
  2802                           
  2803                           
  2804                           ;main.c: 278: (PORTDbits.RD3) = 1;
  2805  0269  1588               	bsf	8,3	;volatile
  2806                           
  2807                           ;main.c: 279: RELAY_3_Timer = timerValue;
  2808  026A  0823               	movf	vPulseRelay@timerValue,w
  2809  026B  00EF               	movwf	_RELAY_3_Timer	;volatile
  2810                           
  2811                           ;main.c: 280: RELAY_3_Timer_En = 1;
  2812  026C  1578               	bsf	_RELAY_3_Timer_En/(0+8),_RELAY_3_Timer_En& (0+7)
  2813                           
  2814                           ;main.c: 281: break;
  2815  026D  0008               	return
  2816  026E                     l1158:	
  2817                           ;main.c: 282: case 4:
  2818                           
  2819                           
  2820                           ;main.c: 283: (PORTCbits.RC4) = 1;
  2821  026E  1607               	bsf	7,4	;volatile
  2822                           
  2823                           ;main.c: 284: RELAY_4_Timer = timerValue;
  2824  026F  0823               	movf	vPulseRelay@timerValue,w
  2825  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2826  0271  00B0               	movwf	_RELAY_4_Timer^(0+128)	;volatile
  2827                           
  2828                           ;main.c: 285: RELAY_4_Timer_En = 1;
  2829  0272  15F8               	bsf	_RELAY_4_Timer_En/(0+8),_RELAY_4_Timer_En& (0+7)
  2830                           
  2831                           ;main.c: 286: break;
  2832  0273  0008               	return
  2833  0274                     l1159:	
  2834                           ;main.c: 287: case 5:
  2835                           
  2836                           
  2837                           ;main.c: 288: (PORTCbits.RC5) = 1;
  2838  0274  1687               	bsf	7,5	;volatile
  2839                           
  2840                           ;main.c: 289: RELAY_5_Timer = timerValue;
  2841  0275  0823               	movf	vPulseRelay@timerValue,w
  2842  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0277  00B1               	movwf	_RELAY_5_Timer^(0+128)	;volatile
  2844                           
  2845                           ;main.c: 290: RELAY_5_Timer_En = 1;
  2846  0278  1678               	bsf	_RELAY_5_Timer_En/(0+8),_RELAY_5_Timer_En& (0+7)
  2847                           
  2848                           ;main.c: 291: break;
  2849  0279  0008               	return
  2850  027A                     l7612:	
  2851  027A  0824               	movf	vPulseRelay@relay,w
  2852                           
  2853                           ; Switch size 1, requested type "space"
  2854                           ; Number of cases is 5, Range of values is 1 to 5
  2855                           ; switch strategies available:
  2856                           ; Name         Instructions Cycles
  2857                           ; simple_byte           16     9 (average)
  2858                           ; direct_byte           26    11 (fixed)
  2859                           ; jumptable            263     9 (fixed)
  2860                           ;	Chosen strategy is simple_byte
  2861  027B  3A01               	xorlw	1	; case 1
  2862  027C  1903               	skipnz
  2863  027D  2A5F               	goto	l1154
  2864  027E  3A03               	xorlw	3	; case 2
  2865  027F  1903               	skipnz
  2866  0280  2A64               	goto	l1156
  2867  0281  3A01               	xorlw	1	; case 3
  2868  0282  1903               	skipnz
  2869  0283  2A69               	goto	l1157
  2870  0284  3A07               	xorlw	7	; case 4
  2871  0285  1903               	skipnz
  2872  0286  2A6E               	goto	l1158
  2873  0287  3A01               	xorlw	1	; case 5
  2874  0288  1903               	skipnz
  2875  0289  2A74               	goto	l1159
  2876  028A  2A8B               	goto	l1161
  2877  028B                     l1161:	
  2878  028B  0008               	return
  2879  028C                     __end_of_vPulseRelay:	
  2880  028C                     __ptext737:	
  2881 ;; =============== function _cGetFromReceiveBuffer ends ============
  2882                           
  2883                           
  2884 ;; *************** function _vResetPrintBuffer *****************
  2885 ;; Defined at:
  2886 ;;		line 452 in file "../src/main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  i               1    0[BANK0 ] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;		None               void
  2893 ;; Registers used:
  2894 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2895 ;; Tracked objects:
  2896 ;;		On entry : 60/120
  2897 ;;		On exit  : 160/0
  2898 ;;		Unchanged: FFE9F/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       0       0       0       0
  2901 ;;      Locals:         0       1       0       0       0
  2902 ;;      Temps:          0       0       0       0       0
  2903 ;;      Totals:         0       1       0       0       0
  2904 ;;Total ram usage:        1 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    3
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_StringSerialProtocolService
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913  028C                     _vResetPrintBuffer:	
  2914                           
  2915                           ;main.c: 453: unsigned char i;
  2916                           ;main.c: 455: for (i = 0; i<sizeof (printBuffer); i++) {
  2917                           
  2918                           ; Regs used in _vResetPrintBuffer: [wreg-fsr0h+status,2+status,0]
  2919  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2920  028D  01A0               	clrf	vResetPrintBuffer@i
  2921  028E                     l7646:	
  2922                           
  2923                           ;main.c: 456: printBuffer[i] = 0;
  2924  028E  0820               	movf	vResetPrintBuffer@i,w
  2925  028F  3EA0               	addlw	_printBuffer& (0+255)
  2926  0290  0084               	movwf	4
  2927  0291  3006               	movlw	6
  2928  0292  1383               	bcf	3,7	;select IRP bank1
  2929  0293  0180               	clrf	0
  2930  0294  0AA0               	incf	vResetPrintBuffer@i,f
  2931  0295  0220               	subwf	vResetPrintBuffer@i,w
  2932  0296  1803               	btfsc	3,0
  2933  0297  0008               	return
  2934  0298  2A8E               	goto	l7646
  2935  0299                     __end_of_vResetPrintBuffer:	
  2936  0299                     __ptext736:	
  2937 ;; =============== function _CheckCommand ends ============
  2938                           
  2939                           
  2940 ;; *************** function _cGetFromReceiveBuffer *****************
  2941 ;; Defined at:
  2942 ;;		line 243 in file "../src/StringSerialProtocol.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  value           1    0[BANK0 ] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 60/20
  2953 ;;		On exit  : 160/100
  2954 ;;		Unchanged: FFE9F/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         0       1       0       0       0
  2958 ;;      Temps:          0       0       0       0       0
  2959 ;;      Totals:         0       1       0       0       0
  2960 ;;Total ram usage:        1 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    3
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_StringSerialProtocolService
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969  0299                     _cGetFromReceiveBuffer:	
  2970                           
  2971                           ;StringSerialProtocol.c: 244: unsigned char value;
  2972                           ;StringSerialProtocol.c: 246: value = uartReceiveBuffer[uartReceiveBufferR];
  2973                           
  2974                           ; Regs used in _cGetFromReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  2975  0299  0838               	movf	_uartReceiveBufferR^(0+128),w
  2976  029A  3E90               	addlw	_uartReceiveBuffer& (0+255)
  2977  029B  0084               	movwf	4
  2978  029C  1783               	bsf	3,7	;select IRP bank3
  2979  029D  0800               	movf	0,w
  2980  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2981  029F  00A0               	movwf	cGetFromReceiveBuffer@value
  2982                           
  2983                           ;StringSerialProtocol.c: 247: uartReceiveBufferR++;
  2984  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2985  02A1  0AB8               	incf	_uartReceiveBufferR^(0+128),f	;volatile
  2986                           
  2987                           ;StringSerialProtocol.c: 248: if (uartReceiveBufferR == 60) {
  2988  02A2  0838               	movf	_uartReceiveBufferR^(0+128),w	;volatile
  2989  02A3  3A3C               	xorlw	60
  2990  02A4  1903               	btfsc	3,2
  2991                           
  2992                           ;StringSerialProtocol.c: 249: uartReceiveBufferR = 0;
  2993  02A5  01B8               	clrf	_uartReceiveBufferR^(0+128)	;volatile
  2994                           
  2995                           ;StringSerialProtocol.c: 250: }
  2996                           ;StringSerialProtocol.c: 251: return value;
  2997  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2998  02A7  0820               	movf	cGetFromReceiveBuffer@value,w
  2999  02A8  0008               	return
  3000  02A9                     __end_of_cGetFromReceiveBuffer:	
  3001  02A9                     __ptext734:	
  3002 ;; =============== function ___wmul ends ============
  3003                           
  3004                           
  3005 ;; *************** function ___bmul *****************
  3006 ;; Defined at:
  3007 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  multiplier      1    wreg     unsigned char 
  3010 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  multiplier      1    2[BANK0 ] unsigned char 
  3013 ;;  product         1    1[BANK0 ] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      unsigned char 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0
  3018 ;; Tracked objects:
  3019 ;;		On entry : 160/20
  3020 ;;		On exit  : 160/0
  3021 ;;		Unchanged: FFE9F/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       1       0       0       0
  3024 ;;      Locals:         0       2       0       0       0
  3025 ;;      Temps:          0       0       0       0       0
  3026 ;;      Totals:         0       3       0       0       0
  3027 ;;Total ram usage:        3 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    3
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_StringSerialProtocolService
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036  02A9                     ___bmul:	
  3037                           
  3038                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3039                           ;___bmul@multiplier stored from wreg
  3040  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3041  02AA  00A2               	movwf	___bmul@multiplier
  3042  02AB  01A1               	clrf	___bmul@product
  3043  02AC                     l7716:	
  3044  02AC  0820               	movf	___bmul@multiplicand,w
  3045  02AD  1822               	btfsc	___bmul@multiplier,0
  3046  02AE  07A1               	addwf	___bmul@product,f
  3047  02AF  1003               	clrc
  3048  02B0  0DA0               	rlf	___bmul@multiplicand,f
  3049  02B1  1003               	clrc
  3050  02B2  0CA2               	rrf	___bmul@multiplier,f
  3051  02B3  08A2               	movf	___bmul@multiplier,f
  3052  02B4  1D03               	skipz
  3053  02B5  2AAC               	goto	l7716
  3054  02B6  0821               	movf	___bmul@product,w
  3055  02B7  0008               	return
  3056  02B8                     __end_of___bmul:	
  3057  02B8                     __ptext728:	
  3058 ;; =============== function _utoa ends ============
  3059                           
  3060                           
  3061 ;; *************** function _temperatureOffset *****************
  3062 ;; Defined at:
  3063 ;;		line 580 in file "../src/main.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  offset          2   10[BANK0 ] int 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    6[BANK0 ] int 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 60/20
  3074 ;;		On exit  : 60/0
  3075 ;;		Unchanged: FFF9F/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       2       0       0       0
  3078 ;;      Locals:         0       2       0       0       0
  3079 ;;      Temps:          0       2       0       0       0
  3080 ;;      Totals:         0       6       0       0       0
  3081 ;;Total ram usage:        6 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    4
  3084 ;; This function calls:
  3085 ;;		___wmul
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;;		_StringSerialProtocolService
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091  02B8                     _temperatureOffset:	
  3092                           
  3093                           ;main.c: 583: offset = 10 * (((EEADR=(6)),(EECON1&=0x3F),(RD=1),EEDATA) - 48);
  3094                           
  3095                           ; Regs used in _temperatureOffset: [wreg+status,2+status,0+pclath+cstack]
  3096  02B8  3006               	movlw	6
  3097  02B9  1283               	bcf	3,5	;RP0=0, select bank2
  3098  02BA  279C  120A  118A   	fcall	PL2	;call to abstracted procedure
  3099  02BD  080C               	movf	12,w	;volatile
  3100  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  3101  02BF  00A0               	movwf	?___wmul
  3102  02C0  30D0               	movlw	-48
  3103  02C1  01A1               	clrf	?___wmul+1
  3104  02C2  07A0               	addwf	?___wmul,f
  3105  02C3  1C03               	skipc
  3106  02C4  03A1               	decf	?___wmul+1,f
  3107  02C5  300A               	movlw	10
  3108  02C6  00A2               	movwf	?___wmul+2
  3109  02C7  01A3               	clrf	?___wmul+3
  3110  02C8  22FC  120A  118A   	fcall	___wmul
  3111  02CB  0821               	movf	?___wmul+1,w
  3112  02CC  00AB               	movwf	temperatureOffset@offset+1
  3113  02CD  0820               	movf	?___wmul,w
  3114  02CE  00AA               	movwf	temperatureOffset@offset
  3115                           
  3116                           ;main.c: 584: offset += (((EEADR=(7)),(EECON1&=0x3F),(RD=1),EEDATA) - 48);
  3117  02CF  3007               	movlw	7
  3118  02D0  279C  120A  118A   	fcall	PL2	;call to abstracted procedure
  3119  02D3  080C               	movf	12,w	;volatile
  3120  02D4  3ED0               	addlw	208
  3121  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  3122  02D6  00A8               	movwf	??_temperatureOffset
  3123  02D7  30FF               	movlw	255
  3124  02D8  1803               	skipnc
  3125  02D9  3000               	movlw	0
  3126  02DA  00A9               	movwf	??_temperatureOffset+1
  3127  02DB  0828               	movf	??_temperatureOffset,w
  3128  02DC  07AA               	addwf	temperatureOffset@offset,f
  3129  02DD  1803               	skipnc
  3130  02DE  0AAB               	incf	temperatureOffset@offset+1,f
  3131  02DF  0829               	movf	??_temperatureOffset+1,w
  3132  02E0  07AB               	addwf	temperatureOffset@offset+1,f
  3133                           
  3134                           ;main.c: 586: if(((EEADR=(5)),(EECON1&=0x3F),(RD=1),EEDATA) == '-')
  3135  02E1  3005               	movlw	5
  3136  02E2  279C  120A  118A   	fcall	PL2	;call to abstracted procedure
  3137  02E5  080C               	movf	12,w
  3138  02E6  3A2D               	xorlw	45
  3139  02E7  1D03               	skipz
  3140  02E8  2AF6               	goto	l7890
  3141                           
  3142                           ;main.c: 587: {
  3143                           ;main.c: 588: offset = offset * (-1);
  3144  02E9  30FF               	movlw	255
  3145  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3146  02EB  00A0               	movwf	?___wmul
  3147  02EC  00A1               	movwf	?___wmul+1
  3148  02ED  082B               	movf	temperatureOffset@offset+1,w
  3149  02EE  00A3               	movwf	?___wmul+3
  3150  02EF  082A               	movf	temperatureOffset@offset,w
  3151  02F0  00A2               	movwf	?___wmul+2
  3152  02F1  22FC               	fcall	___wmul
  3153  02F2  0821               	movf	?___wmul+1,w
  3154  02F3  00AB               	movwf	temperatureOffset@offset+1
  3155  02F4  0820               	movf	?___wmul,w
  3156  02F5  00AA               	movwf	temperatureOffset@offset
  3157  02F6                     l7890:	
  3158                           
  3159                           ;main.c: 589: }
  3160                           ;main.c: 590: return offset;
  3161  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  3162  02F7  082B               	movf	temperatureOffset@offset+1,w
  3163  02F8  00A7               	movwf	?_temperatureOffset+1
  3164  02F9  082A               	movf	temperatureOffset@offset,w
  3165  02FA  00A6               	movwf	?_temperatureOffset
  3166  02FB  0008               	return
  3167  02FC                     __end_of_temperatureOffset:	
  3168  02FC                     __ptext733:	
  3169 ;; =============== function ___lwdiv ends ============
  3170                           
  3171                           
  3172 ;; *************** function ___wmul *****************
  3173 ;; Defined at:
  3174 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3177 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  product         2    4[BANK0 ] unsigned int 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  2    0[BANK0 ] unsigned int 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 60/0
  3186 ;;		On exit  : 60/0
  3187 ;;		Unchanged: FFF9F/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       4       0       0       0
  3190 ;;      Locals:         0       2       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         0       6       0       0       0
  3193 ;;Total ram usage:        6 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    3
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_temperatureOffset
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202  02FC                     ___wmul:	
  3203                           
  3204                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3205  02FC  01A4               	clrf	___wmul@product
  3206  02FD  01A5               	clrf	___wmul@product+1
  3207  02FE                     l7732:	
  3208  02FE  1C20               	btfss	___wmul@multiplier,0
  3209  02FF  2B06               	goto	l7736
  3210  0300  0822               	movf	___wmul@multiplicand,w
  3211  0301  07A4               	addwf	___wmul@product,f
  3212  0302  1803               	skipnc
  3213  0303  0AA5               	incf	___wmul@product+1,f
  3214  0304  0823               	movf	___wmul@multiplicand+1,w
  3215  0305  07A5               	addwf	___wmul@product+1,f
  3216  0306                     l7736:	
  3217  0306  1003               	clrc
  3218  0307  0DA2               	rlf	___wmul@multiplicand,f
  3219  0308  0DA3               	rlf	___wmul@multiplicand+1,f
  3220  0309  1003               	clrc
  3221  030A  0CA1               	rrf	___wmul@multiplier+1,f
  3222  030B  0CA0               	rrf	___wmul@multiplier,f
  3223  030C  0821               	movf	___wmul@multiplier+1,w
  3224  030D  0420               	iorwf	___wmul@multiplier,w
  3225  030E  1D03               	skipz
  3226  030F  2AFE               	goto	l7732
  3227  0310  0825               	movf	___wmul@product+1,w
  3228  0311  00A1               	movwf	?___wmul+1
  3229  0312  0824               	movf	___wmul@product,w
  3230  0313  00A0               	movwf	?___wmul
  3231  0314  0008               	return
  3232  0315                     __end_of___wmul:	
  3233  0315                     __ptext721:	
  3234 ;; =============== function _calgulateTemp ends ============
  3235                           
  3236                           
  3237 ;; *************** function _getTemperature *****************
  3238 ;; Defined at:
  3239 ;;		line 424 in file "../src/main.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  milliVolt       3   57[BANK0 ] float 
  3244 ;;  m               2   62[BANK0 ] unsigned int 
  3245 ;;  iTempP          2   60[BANK0 ] unsigned int 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  2   55[BANK0 ] unsigned int 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/20
  3252 ;;		On exit  : 60/0
  3253 ;;		Unchanged: FFF9F/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         0       2       0       0       0
  3256 ;;      Locals:         0       7       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         0       9       0       0       0
  3259 ;;Total ram usage:        9 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    5
  3262 ;; This function calls:
  3263 ;;		_read_ADC
  3264 ;;		___lwtoft
  3265 ;;		___ftmul
  3266 ;;		___fttol
  3267 ;; This function is called by:
  3268 ;;		_main
  3269 ;;		_StringSerialProtocolService
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272  0315                     _getTemperature:	
  3273  0315  27ED               	call	PL12	;select bank 0
  3274                           
  3275                           ;main.c: 425: unsigned int iTempP;
  3276                           ;main.c: 426: float milliVolt;
  3277                           ;main.c: 427: unsigned int m;
  3278                           ;main.c: 429: iTempP = 0;
  3279                           
  3280                           ; Regs used in _getTemperature: [wreg+status,2+status,0+pclath+cstack]
  3281  0316  01DC               	clrf	getTemperature@iTempP
  3282  0317  01DD               	clrf	getTemperature@iTempP+1
  3283                           
  3284                           ;main.c: 430: for (m = 0; m < 16; m++) {
  3285  0318  01DE               	clrf	getTemperature@m
  3286  0319  01DF               	clrf	getTemperature@m+1
  3287  031A                     l8120:	
  3288                           
  3289                           ;main.c: 431: iTempP += read_ADC((13));
  3290  031A  300D               	movlw	13
  3291  031B  2768  120A  118A   	fcall	_read_ADC
  3292  031E  0820               	movf	?_read_ADC,w
  3293  031F  07DC               	addwf	getTemperature@iTempP,f
  3294  0320  1803               	skipnc
  3295  0321  0ADD               	incf	getTemperature@iTempP+1,f
  3296  0322  0821               	movf	?_read_ADC+1,w
  3297  0323  07DD               	addwf	getTemperature@iTempP+1,f
  3298  0324  0ADE               	incf	getTemperature@m,f
  3299  0325  1903               	skipnz
  3300  0326  0ADF               	incf	getTemperature@m+1,f
  3301  0327  3000               	movlw	0
  3302  0328  025F               	subwf	getTemperature@m+1,w
  3303  0329  3010               	movlw	16
  3304  032A  1903               	skipnz
  3305  032B  025E               	subwf	getTemperature@m,w
  3306  032C  1C03               	skipc
  3307  032D  2B1A               	goto	l8120
  3308  032E  300F               	movlw	15
  3309                           
  3310                           ;main.c: 432: }
  3311                           ;main.c: 433: iTempP /= 16;
  3312  032F  0EDC               	swapf	getTemperature@iTempP,f
  3313  0330  0EDD               	swapf	getTemperature@iTempP+1,f
  3314  0331  05DC               	andwf	getTemperature@iTempP,f
  3315  0332  085D               	movf	getTemperature@iTempP+1,w
  3316  0333  39F0               	andlw	240
  3317  0334  04DC               	iorwf	getTemperature@iTempP,f
  3318  0335  300F               	movlw	15
  3319  0336  05DD               	andwf	getTemperature@iTempP+1,f
  3320                           
  3321                           ;main.c: 436: milliVolt = iTempP * a;
  3322  0337  3040               	movlw	64
  3323  0338  00C8               	movwf	?___ftmul
  3324  0339  304E               	movlw	78
  3325  033A  00C9               	movwf	?___ftmul+1
  3326  033B  3040               	movlw	64
  3327  033C  00CA               	movwf	?___ftmul+2
  3328  033D  085D               	movf	getTemperature@iTempP+1,w
  3329  033E  00A9               	movwf	?___lwtoft+1
  3330  033F  085C               	movf	getTemperature@iTempP,w
  3331  0340  00A8               	movwf	?___lwtoft
  3332  0341  2783  120A  118A   	fcall	___lwtoft
  3333  0344  0828               	movf	?___lwtoft,w
  3334  0345  00CB               	movwf	?___ftmul+3
  3335  0346  0829               	movf	?___lwtoft+1,w
  3336  0347  00CC               	movwf	?___ftmul+4
  3337  0348  082A               	movf	?___lwtoft+2,w
  3338  0349  00CD               	movwf	?___ftmul+5
  3339  034A  26F9  120A  118A   	fcall	___ftmul
  3340  034D  0848               	movf	?___ftmul,w
  3341  034E  00D9               	movwf	getTemperature@milliVolt
  3342  034F  0849               	movf	?___ftmul+1,w
  3343  0350  00DA               	movwf	getTemperature@milliVolt+1
  3344  0351  084A               	movf	?___ftmul+2,w
  3345  0352  00DB               	movwf	getTemperature@milliVolt+2
  3346                           
  3347                           ;main.c: 437: m = (int) milliVolt;
  3348  0353  0859               	movf	getTemperature@milliVolt,w
  3349  0354  00A8               	movwf	?___fttol
  3350  0355  085A               	movf	getTemperature@milliVolt+1,w
  3351  0356  00A9               	movwf	?___fttol+1
  3352  0357  085B               	movf	getTemperature@milliVolt+2,w
  3353  0358  00AA               	movwf	?___fttol+2
  3354  0359  2660               	fcall	___fttol
  3355  035A  0829               	movf	?___fttol+1,w
  3356  035B  00DF               	movwf	getTemperature@m+1
  3357  035C  0828               	movf	?___fttol,w
  3358  035D  00DE               	movwf	getTemperature@m
  3359                           
  3360                           ;main.c: 438: return m;
  3361  035E  085F               	movf	getTemperature@m+1,w
  3362  035F  00D8               	movwf	?_getTemperature+1
  3363  0360  085E               	movf	getTemperature@m,w
  3364  0361  00D7               	movwf	?_getTemperature
  3365  0362  0008               	return
  3366  0363                     __end_of_getTemperature:	
  3367  0363                     __ptext720:	
  3368 ;; =============== function _itoa ends ============
  3369                           
  3370                           
  3371 ;; *************** function _calgulateTemp *****************
  3372 ;; Defined at:
  3373 ;;		line 512 in file "../src/main.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  milliVolt       2   67[BANK0 ] int 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  T1_             2   77[BANK0 ] int 
  3378 ;;  V1_             2   75[BANK0 ] int 
  3379 ;;  T2_             2   73[BANK0 ] int 
  3380 ;;  V2_             2   71[BANK0 ] int 
  3381 ;;  temperature     2   69[BANK0 ] int 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   67[BANK0 ] int 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 60/0
  3388 ;;		On exit  : 60/0
  3389 ;;		Unchanged: FFE00/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         0       2       0       0       0
  3392 ;;      Locals:         0      10       0       0       0
  3393 ;;      Temps:          0       0       0       0       0
  3394 ;;      Totals:         0      12       0       0       0
  3395 ;;Total ram usage:       12 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    5
  3398 ;; This function calls:
  3399 ;;		___awtoft
  3400 ;;		___ftdiv
  3401 ;;		___ftmul
  3402 ;;		___ftadd
  3403 ;;		___fttol
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;;		_StringSerialProtocolService
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409  0363                     _calgulateTemp:	
  3410                           
  3411                           ;main.c: 513: signed int V1_, V2_, T1_, T2_;
  3412                           ;main.c: 514: signed int temperature;
  3413                           ;main.c: 515: if (milliVolt > 1247) {
  3414                           
  3415                           ; Regs used in _calgulateTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3416  0363  0864               	movf	calgulateTemp@milliVolt+1,w
  3417  0364  3A80               	xorlw	128
  3418  0365  00FF               	movwf	127
  3419  0366  3084               	movlw	132
  3420  0367  027F               	subwf	127,w
  3421  0368  1D03               	skipz
  3422  0369  2B6C               	goto	u2625
  3423  036A  30E0               	movlw	224
  3424  036B  0263               	subwf	calgulateTemp@milliVolt,w
  3425  036C                     u2625:	
  3426  036C  1C03               	skipc
  3427  036D  2B9B               	goto	l8138
  3428                           
  3429                           ;main.c: 516: V1_ = V1[0];
  3430  036E  302D               	movlw	_V1-__stringbase
  3431  036F  0084               	movwf	4
  3432  0370  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3433  0375  27ED               	call	PL12	;select bank 0
  3434  0376  00EB               	movwf	calgulateTemp@V1_
  3435  0377  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3436  037C  00EC               	movwf	calgulateTemp@V1_+1
  3437                           
  3438                           ;main.c: 517: V2_ = V2[0];
  3439  037D  3043               	movlw	_V2-__stringbase
  3440  037E  0084               	movwf	4
  3441  037F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3442  0384  00E7               	movwf	calgulateTemp@V2_
  3443  0385  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3444  038A  00E8               	movwf	calgulateTemp@V2_+1
  3445                           
  3446                           ;main.c: 518: T1_ = T1[0];
  3447  038B  3001               	movlw	_T1-__stringbase
  3448  038C  0084               	movwf	4
  3449  038D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3450  0392  00ED               	movwf	calgulateTemp@T1_
  3451  0393  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3452  0398  00EE               	movwf	calgulateTemp@T1_+1
  3453                           
  3454                           ;main.c: 519: T2_ = T2[0];
  3455  0399  3017               	movlw	_T2-__stringbase
  3456  039A  2DB6               	goto	L15
  3457  039B                     l8138:	
  3458                           ;main.c: 520: } else if (milliVolt > 1141) {
  3459                           
  3460  039B  27DE  120A  118A   	fcall	PL10	;call to abstracted procedure
  3461  039E  1D03               	skipz
  3462  039F  2BA2               	goto	u2635
  3463  03A0  3076               	movlw	118
  3464  03A1  0263               	subwf	calgulateTemp@milliVolt,w
  3465  03A2                     u2635:	
  3466  03A2  1C03               	skipc
  3467  03A3  2BD1               	goto	l8142
  3468                           
  3469                           ;main.c: 521: V1_ = V1[1];
  3470  03A4  302F               	movlw	(_V1-__stringbase+2)
  3471  03A5  0084               	movwf	4
  3472  03A6  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3473  03AB  27ED               	call	PL12	;select bank 0
  3474  03AC  00EB               	movwf	calgulateTemp@V1_
  3475  03AD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3476  03B2  00EC               	movwf	calgulateTemp@V1_+1
  3477                           
  3478                           ;main.c: 522: V2_ = V2[1];
  3479  03B3  3045               	movlw	(_V2-__stringbase+2)
  3480  03B4  0084               	movwf	4
  3481  03B5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3482  03BA  00E7               	movwf	calgulateTemp@V2_
  3483  03BB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3484  03C0  00E8               	movwf	calgulateTemp@V2_+1
  3485                           
  3486                           ;main.c: 523: T1_ = T1[1];
  3487  03C1  3003               	movlw	(_T1-__stringbase+2)
  3488  03C2  0084               	movwf	4
  3489  03C3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3490  03C8  00ED               	movwf	calgulateTemp@T1_
  3491  03C9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3492  03CE  00EE               	movwf	calgulateTemp@T1_+1
  3493                           
  3494                           ;main.c: 524: T2_ = T2[1];
  3495  03CF  3019               	movlw	(_T2-__stringbase+2)
  3496  03D0  2DB6               	goto	L15
  3497  03D1                     l8142:	
  3498                           ;main.c: 525: } else if (milliVolt > 1034) {
  3499                           
  3500  03D1  27DE  120A  118A   	fcall	PL10	;call to abstracted procedure
  3501  03D4  1D03               	skipz
  3502  03D5  2BD8               	goto	u2645
  3503  03D6  300B               	movlw	11
  3504  03D7  0263               	subwf	calgulateTemp@milliVolt,w
  3505  03D8                     u2645:	
  3506  03D8  1C03               	skipc
  3507  03D9  2C07               	goto	l8146
  3508                           
  3509                           ;main.c: 526: V1_ = V1[2];
  3510  03DA  3031               	movlw	(_V1-__stringbase+4)
  3511  03DB  0084               	movwf	4
  3512  03DC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3513  03E1  27ED               	call	PL12	;select bank 0
  3514  03E2  00EB               	movwf	calgulateTemp@V1_
  3515  03E3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3516  03E8  00EC               	movwf	calgulateTemp@V1_+1
  3517                           
  3518                           ;main.c: 527: V2_ = V2[2];
  3519  03E9  3047               	movlw	(_V2-__stringbase+4)
  3520  03EA  0084               	movwf	4
  3521  03EB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3522  03F0  00E7               	movwf	calgulateTemp@V2_
  3523  03F1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3524  03F6  00E8               	movwf	calgulateTemp@V2_+1
  3525                           
  3526                           ;main.c: 528: T1_ = T1[2];
  3527  03F7  3005               	movlw	(_T1-__stringbase+4)
  3528  03F8  0084               	movwf	4
  3529  03F9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3530  03FE  00ED               	movwf	calgulateTemp@T1_
  3531  03FF  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3532  0404  00EE               	movwf	calgulateTemp@T1_+1
  3533                           
  3534                           ;main.c: 529: T2_ = T2[2];
  3535  0405  301B               	movlw	(_T2-__stringbase+4)
  3536  0406  2DB6               	goto	L15
  3537  0407                     l8146:	
  3538                           ;main.c: 530: } else if (milliVolt > 925) {
  3539                           
  3540  0407  27CE  120A  118A   	fcall	PL8	;call to abstracted procedure
  3541  040A  1D03               	skipz
  3542  040B  2C0E               	goto	u2655
  3543  040C  309E               	movlw	158
  3544  040D  0263               	subwf	calgulateTemp@milliVolt,w
  3545  040E                     u2655:	
  3546  040E  1C03               	skipc
  3547  040F  2C3D               	goto	l8150
  3548                           
  3549                           ;main.c: 531: V1_ = V1[3];
  3550  0410  3033               	movlw	(_V1-__stringbase+6)
  3551  0411  0084               	movwf	4
  3552  0412  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3553  0417  27ED               	call	PL12	;select bank 0
  3554  0418  00EB               	movwf	calgulateTemp@V1_
  3555  0419  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3556  041E  00EC               	movwf	calgulateTemp@V1_+1
  3557                           
  3558                           ;main.c: 532: V2_ = V2[3];
  3559  041F  3049               	movlw	(_V2-__stringbase+6)
  3560  0420  0084               	movwf	4
  3561  0421  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3562  0426  00E7               	movwf	calgulateTemp@V2_
  3563  0427  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3564  042C  00E8               	movwf	calgulateTemp@V2_+1
  3565                           
  3566                           ;main.c: 533: T1_ = T1[3];
  3567  042D  3007               	movlw	(_T1-__stringbase+6)
  3568  042E  0084               	movwf	4
  3569  042F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3570  0434  00ED               	movwf	calgulateTemp@T1_
  3571  0435  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3572  043A  00EE               	movwf	calgulateTemp@T1_+1
  3573                           
  3574                           ;main.c: 534: T2_ = T2[3];
  3575  043B  301D               	movlw	(_T2-__stringbase+6)
  3576  043C  2DB6               	goto	L15
  3577  043D                     l8150:	
  3578                           ;main.c: 535: } else if (milliVolt > 816) {
  3579                           
  3580  043D  27CE  120A  118A   	fcall	PL8	;call to abstracted procedure
  3581  0440  1D03               	skipz
  3582  0441  2C44               	goto	u2665
  3583  0442  3031               	movlw	49
  3584  0443  0263               	subwf	calgulateTemp@milliVolt,w
  3585  0444                     u2665:	
  3586  0444  1C03               	skipc
  3587  0445  2C73               	goto	l8154
  3588                           
  3589                           ;main.c: 536: V1_ = V1[4];
  3590  0446  3035               	movlw	(_V1-__stringbase+8)
  3591  0447  0084               	movwf	4
  3592  0448  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3593  044D  27ED               	call	PL12	;select bank 0
  3594  044E  00EB               	movwf	calgulateTemp@V1_
  3595  044F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3596  0454  00EC               	movwf	calgulateTemp@V1_+1
  3597                           
  3598                           ;main.c: 537: V2_ = V2[4];
  3599  0455  304B               	movlw	(_V2-__stringbase+8)
  3600  0456  0084               	movwf	4
  3601  0457  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3602  045C  00E7               	movwf	calgulateTemp@V2_
  3603  045D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3604  0462  00E8               	movwf	calgulateTemp@V2_+1
  3605                           
  3606                           ;main.c: 538: T1_ = T1[4];
  3607  0463  3009               	movlw	(_T1-__stringbase+8)
  3608  0464  0084               	movwf	4
  3609  0465  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3610  046A  00ED               	movwf	calgulateTemp@T1_
  3611  046B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3612  0470  00EE               	movwf	calgulateTemp@T1_+1
  3613                           
  3614                           ;main.c: 539: T2_ = T2[4];
  3615  0471  301F               	movlw	(_T2-__stringbase+8)
  3616  0472  2DB6               	goto	L15
  3617  0473                     l8154:	
  3618                           ;main.c: 540: } else if (milliVolt > 704) {
  3619                           
  3620  0473  27D6  120A  118A   	fcall	PL9	;call to abstracted procedure
  3621  0476  1D03               	skipz
  3622  0477  2C7A               	goto	u2675
  3623  0478  30C1               	movlw	193
  3624  0479  0263               	subwf	calgulateTemp@milliVolt,w
  3625  047A                     u2675:	
  3626  047A  1C03               	skipc
  3627  047B  2CA9               	goto	l8158
  3628                           
  3629                           ;main.c: 541: V1_ = V1[5];
  3630  047C  3037               	movlw	(_V1-__stringbase+10)
  3631  047D  0084               	movwf	4
  3632  047E  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3633  0483  27ED               	call	PL12	;select bank 0
  3634  0484  00EB               	movwf	calgulateTemp@V1_
  3635  0485  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3636  048A  00EC               	movwf	calgulateTemp@V1_+1
  3637                           
  3638                           ;main.c: 542: V2_ = V2[5];
  3639  048B  304D               	movlw	(_V2-__stringbase+10)
  3640  048C  0084               	movwf	4
  3641  048D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3642  0492  00E7               	movwf	calgulateTemp@V2_
  3643  0493  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3644  0498  00E8               	movwf	calgulateTemp@V2_+1
  3645                           
  3646                           ;main.c: 543: T1_ = T1[5];
  3647  0499  300B               	movlw	(_T1-__stringbase+10)
  3648  049A  0084               	movwf	4
  3649  049B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3650  04A0  00ED               	movwf	calgulateTemp@T1_
  3651  04A1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3652  04A6  00EE               	movwf	calgulateTemp@T1_+1
  3653                           
  3654                           ;main.c: 544: T2_ = T2[5];
  3655  04A7  3021               	movlw	(_T2-__stringbase+10)
  3656  04A8  2DB6               	goto	L15
  3657  04A9                     l8158:	
  3658                           ;main.c: 545: } else if (milliVolt > 591) {
  3659                           
  3660  04A9  27D6  120A  118A   	fcall	PL9	;call to abstracted procedure
  3661  04AC  1D03               	skipz
  3662  04AD  2CB0               	goto	u2685
  3663  04AE  3050               	movlw	80
  3664  04AF  0263               	subwf	calgulateTemp@milliVolt,w
  3665  04B0                     u2685:	
  3666  04B0  1C03               	skipc
  3667  04B1  2CDF               	goto	l8162
  3668                           
  3669                           ;main.c: 546: V1_ = V1[6];
  3670  04B2  3039               	movlw	(_V1-__stringbase+12)
  3671  04B3  0084               	movwf	4
  3672  04B4  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3673  04B9  27ED               	call	PL12	;select bank 0
  3674  04BA  00EB               	movwf	calgulateTemp@V1_
  3675  04BB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3676  04C0  00EC               	movwf	calgulateTemp@V1_+1
  3677                           
  3678                           ;main.c: 547: V2_ = V2[6];
  3679  04C1  304F               	movlw	(_V2-__stringbase+12)
  3680  04C2  0084               	movwf	4
  3681  04C3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3682  04C8  00E7               	movwf	calgulateTemp@V2_
  3683  04C9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3684  04CE  00E8               	movwf	calgulateTemp@V2_+1
  3685                           
  3686                           ;main.c: 548: T1_ = T1[6];
  3687  04CF  300D               	movlw	(_T1-__stringbase+12)
  3688  04D0  0084               	movwf	4
  3689  04D1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3690  04D6  00ED               	movwf	calgulateTemp@T1_
  3691  04D7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3692  04DC  00EE               	movwf	calgulateTemp@T1_+1
  3693                           
  3694                           ;main.c: 549: T2_ = T2[6];
  3695  04DD  3023               	movlw	(_T2-__stringbase+12)
  3696  04DE  2DB6               	goto	L15
  3697  04DF                     l8162:	
  3698                           ;main.c: 550: } else if (milliVolt > 476) {
  3699                           
  3700  04DF  27B6  120A  118A   	fcall	PL5	;call to abstracted procedure
  3701  04E2  1D03               	skipz
  3702  04E3  2CE6               	goto	u2695
  3703  04E4  30DD               	movlw	221
  3704  04E5  0263               	subwf	calgulateTemp@milliVolt,w
  3705  04E6                     u2695:	
  3706  04E6  1C03               	skipc
  3707  04E7  2D15               	goto	l8166
  3708                           
  3709                           ;main.c: 551: V1_ = V1[7];
  3710  04E8  303B               	movlw	(_V1-__stringbase+14)
  3711  04E9  0084               	movwf	4
  3712  04EA  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3713  04EF  27ED               	call	PL12	;select bank 0
  3714  04F0  00EB               	movwf	calgulateTemp@V1_
  3715  04F1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3716  04F6  00EC               	movwf	calgulateTemp@V1_+1
  3717                           
  3718                           ;main.c: 552: V2_ = V2[7];
  3719  04F7  3051               	movlw	(_V2-__stringbase+14)
  3720  04F8  0084               	movwf	4
  3721  04F9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3722  04FE  00E7               	movwf	calgulateTemp@V2_
  3723  04FF  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3724  0504  00E8               	movwf	calgulateTemp@V2_+1
  3725                           
  3726                           ;main.c: 553: T1_ = T1[7];
  3727  0505  300F               	movlw	(_T1-__stringbase+14)
  3728  0506  0084               	movwf	4
  3729  0507  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3730  050C  00ED               	movwf	calgulateTemp@T1_
  3731  050D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3732  0512  00EE               	movwf	calgulateTemp@T1_+1
  3733                           
  3734                           ;main.c: 554: T2_ = T2[7];
  3735  0513  3025               	movlw	(_T2-__stringbase+14)
  3736  0514  2DB6               	goto	L15
  3737  0515                     l8166:	
  3738                           ;main.c: 555: } else if (milliVolt > 361) {
  3739                           
  3740  0515  27B6  120A  118A   	fcall	PL5	;call to abstracted procedure
  3741  0518  1D03               	skipz
  3742  0519  2D1C               	goto	u2705
  3743  051A  306A               	movlw	106
  3744  051B  0263               	subwf	calgulateTemp@milliVolt,w
  3745  051C                     u2705:	
  3746  051C  1C03               	skipc
  3747  051D  2D4B               	goto	l8170
  3748                           
  3749                           ;main.c: 556: V1_ = V1[8];
  3750  051E  303D               	movlw	(_V1-__stringbase+16)
  3751  051F  0084               	movwf	4
  3752  0520  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3753  0525  27ED               	call	PL12	;select bank 0
  3754  0526  00EB               	movwf	calgulateTemp@V1_
  3755  0527  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3756  052C  00EC               	movwf	calgulateTemp@V1_+1
  3757                           
  3758                           ;main.c: 557: V2_ = V2[8];
  3759  052D  3053               	movlw	(_V2-__stringbase+16)
  3760  052E  0084               	movwf	4
  3761  052F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3762  0534  00E7               	movwf	calgulateTemp@V2_
  3763  0535  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3764  053A  00E8               	movwf	calgulateTemp@V2_+1
  3765                           
  3766                           ;main.c: 558: T1_ = T1[8];
  3767  053B  3011               	movlw	(_T1-__stringbase+16)
  3768  053C  0084               	movwf	4
  3769  053D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3770  0542  00ED               	movwf	calgulateTemp@T1_
  3771  0543  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3772  0548  00EE               	movwf	calgulateTemp@T1_+1
  3773                           
  3774                           ;main.c: 559: T2_ = T2[8];
  3775  0549  3027               	movlw	(_T2-__stringbase+16)
  3776  054A  2DB6               	goto	L15
  3777  054B                     l8170:	
  3778                           ;main.c: 560: } else if (milliVolt > 243) {
  3779                           
  3780  054B  27BE  120A  118A   	fcall	PL6	;call to abstracted procedure
  3781  054E  1D03               	skipz
  3782  054F  2D52               	goto	u2715
  3783  0550  30F4               	movlw	244
  3784  0551  0263               	subwf	calgulateTemp@milliVolt,w
  3785  0552                     u2715:	
  3786  0552  1C03               	skipc
  3787  0553  2D81               	goto	l8174
  3788                           
  3789                           ;main.c: 561: V1_ = V1[9];
  3790  0554  303F               	movlw	(_V1-__stringbase+18)
  3791  0555  0084               	movwf	4
  3792  0556  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3793  055B  27ED               	call	PL12	;select bank 0
  3794  055C  00EB               	movwf	calgulateTemp@V1_
  3795  055D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3796  0562  00EC               	movwf	calgulateTemp@V1_+1
  3797                           
  3798                           ;main.c: 562: V2_ = V2[9];
  3799  0563  3055               	movlw	(_V2-__stringbase+18)
  3800  0564  0084               	movwf	4
  3801  0565  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3802  056A  00E7               	movwf	calgulateTemp@V2_
  3803  056B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3804  0570  00E8               	movwf	calgulateTemp@V2_+1
  3805                           
  3806                           ;main.c: 563: T1_ = T1[9];
  3807  0571  3013               	movlw	(_T1-__stringbase+18)
  3808  0572  0084               	movwf	4
  3809  0573  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3810  0578  00ED               	movwf	calgulateTemp@T1_
  3811  0579  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3812  057E  00EE               	movwf	calgulateTemp@T1_+1
  3813                           
  3814                           ;main.c: 564: T2_ = T2[9];
  3815  057F  3029               	movlw	(_T2-__stringbase+18)
  3816  0580  2DB6               	goto	L15
  3817  0581                     l8174:	
  3818                           ;main.c: 565: } else if (milliVolt > 182) {
  3819                           
  3820  0581  27BE  120A  118A   	fcall	PL6	;call to abstracted procedure
  3821  0584  1D03               	skipz
  3822  0585  2D88               	goto	u2725
  3823  0586  30B7               	movlw	183
  3824  0587  0263               	subwf	calgulateTemp@milliVolt,w
  3825  0588                     u2725:	
  3826  0588  1C03               	skipc
  3827  0589  2DC3               	goto	l8178
  3828                           
  3829                           ;main.c: 566: V1_ = V1[10];
  3830  058A  3041               	movlw	(_V1-__stringbase+20)
  3831  058B  0084               	movwf	4
  3832  058C  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3833  0591  27ED               	call	PL12	;select bank 0
  3834  0592  00EB               	movwf	calgulateTemp@V1_
  3835  0593  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3836  0598  00EC               	movwf	calgulateTemp@V1_+1
  3837                           
  3838                           ;main.c: 567: V2_ = V2[10];
  3839  0599  3057               	movlw	(_V2-__stringbase+20)
  3840  059A  0084               	movwf	4
  3841  059B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3842  05A0  00E7               	movwf	calgulateTemp@V2_
  3843  05A1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3844  05A6  00E8               	movwf	calgulateTemp@V2_+1
  3845                           
  3846                           ;main.c: 568: T1_ = T1[10];
  3847  05A7  3015               	movlw	(_T1-__stringbase+20)
  3848  05A8  0084               	movwf	4
  3849  05A9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3850  05AE  00ED               	movwf	calgulateTemp@T1_
  3851  05AF  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3852  05B4  00EE               	movwf	calgulateTemp@T1_+1
  3853                           
  3854                           ;main.c: 569: T2_ = T2[10];
  3855  05B5  302B               	movlw	(_T2-__stringbase+20)
  3856  05B6                     L15:	
  3857  05B6  0084               	movwf	4
  3858  05B7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3859  05BC  00E9               	movwf	calgulateTemp@T2_
  3860  05BD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3861  05C2  00EA               	movwf	calgulateTemp@T2_+1
  3862  05C3                     l8178:	
  3863  05C3  27ED               	call	PL12	;select bank 0
  3864                           
  3865                           ;main.c: 570: }
  3866                           ;main.c: 572: temperature = (int) ((milliVolt - V1_)*((float) (T2_ - T1_) / (float) (V2_
      +                           - V1_)) + T1_);
  3867  05C4  0864               	movf	calgulateTemp@milliVolt+1,w
  3868  05C5  00B6               	movwf	?___awtoft+1
  3869  05C6  0863               	movf	calgulateTemp@milliVolt,w
  3870  05C7  27C6  120A  118A   	fcall	PL7	;call to abstracted procedure
  3871  05CA  2645  120A  118A   	fcall	___awtoft
  3872  05CD  0835               	movf	?___awtoft,w
  3873  05CE  00CB               	movwf	?___ftmul+3
  3874  05CF  0836               	movf	?___awtoft+1,w
  3875  05D0  00CC               	movwf	?___ftmul+4
  3876  05D1  0837               	movf	?___awtoft+2,w
  3877  05D2  00CD               	movwf	?___ftmul+5
  3878  05D3  086A               	movf	calgulateTemp@T2_+1,w
  3879  05D4  00B6               	movwf	?___awtoft+1
  3880  05D5  0869               	movf	calgulateTemp@T2_,w
  3881  05D6  00B5               	movwf	?___awtoft
  3882  05D7  086D               	movf	calgulateTemp@T1_,w
  3883  05D8  02B5               	subwf	?___awtoft,f
  3884  05D9  086E               	movf	calgulateTemp@T1_+1,w
  3885  05DA  1C03               	skipc
  3886  05DB  03B6               	decf	?___awtoft+1,f
  3887  05DC  02B6               	subwf	?___awtoft+1,f
  3888  05DD  2645  120A  118A   	fcall	___awtoft
  3889  05E0  0835               	movf	?___awtoft,w
  3890  05E1  00BC               	movwf	?___ftdiv+3
  3891  05E2  0836               	movf	?___awtoft+1,w
  3892  05E3  00BD               	movwf	?___ftdiv+4
  3893  05E4  0837               	movf	?___awtoft+2,w
  3894  05E5  00BE               	movwf	?___ftdiv+5
  3895  05E6  0868               	movf	calgulateTemp@V2_+1,w
  3896  05E7  00B6               	movwf	?___awtoft+1
  3897  05E8  0867               	movf	calgulateTemp@V2_,w
  3898  05E9  27C6  120A  118A   	fcall	PL7	;call to abstracted procedure
  3899  05EC  2645               	fcall	___awtoft
  3900  05ED  0835               	movf	?___awtoft,w
  3901  05EE  00B9               	movwf	?___ftdiv
  3902  05EF  0836               	movf	?___awtoft+1,w
  3903  05F0  00BA               	movwf	?___ftdiv+1
  3904  05F1  0837               	movf	?___awtoft+2,w
  3905  05F2  00BB               	movwf	?___ftdiv+2
  3906  05F3  120A  158A  238C   	fcall	___ftdiv
      +       120A  118A         
  3907  05F8  0839               	movf	?___ftdiv,w
  3908  05F9  00C8               	movwf	?___ftmul
  3909  05FA  083A               	movf	?___ftdiv+1,w
  3910  05FB  00C9               	movwf	?___ftmul+1
  3911  05FC  083B               	movf	?___ftdiv+2,w
  3912  05FD  00CA               	movwf	?___ftmul+2
  3913  05FE  26F9  120A  118A   	fcall	___ftmul
  3914  0601  0848               	movf	?___ftmul,w
  3915  0602  00DA               	movwf	?___ftadd+3
  3916  0603  0849               	movf	?___ftmul+1,w
  3917  0604  00DB               	movwf	?___ftadd+4
  3918  0605  084A               	movf	?___ftmul+2,w
  3919  0606  00DC               	movwf	?___ftadd+5
  3920  0607  086E               	movf	calgulateTemp@T1_+1,w
  3921  0608  00B6               	movwf	?___awtoft+1
  3922  0609  086D               	movf	calgulateTemp@T1_,w
  3923  060A  00B5               	movwf	?___awtoft
  3924  060B  2645               	fcall	___awtoft
  3925  060C  0835               	movf	?___awtoft,w
  3926  060D  00D7               	movwf	?___ftadd
  3927  060E  0836               	movf	?___awtoft+1,w
  3928  060F  00D8               	movwf	?___ftadd+1
  3929  0610  0837               	movf	?___awtoft+2,w
  3930  0611  00D9               	movwf	?___ftadd+2
  3931  0612  120A  158A  23F6   	fcall	___ftadd
      +       120A  118A         
  3932  0617  0857               	movf	?___ftadd,w
  3933  0618  00A8               	movwf	?___fttol
  3934  0619  0858               	movf	?___ftadd+1,w
  3935  061A  00A9               	movwf	?___fttol+1
  3936  061B  0859               	movf	?___ftadd+2,w
  3937  061C  00AA               	movwf	?___fttol+2
  3938  061D  2660  120A  118A   	fcall	___fttol
  3939  0620  0829               	movf	?___fttol+1,w
  3940  0621  00E6               	movwf	calgulateTemp@temperature+1
  3941  0622  0828               	movf	?___fttol,w
  3942  0623  00E5               	movwf	calgulateTemp@temperature
  3943                           
  3944                           ;main.c: 573: if ((milliVolt < 183) || (milliVolt > 1299)) {
  3945  0624  0864               	movf	calgulateTemp@milliVolt+1,w
  3946  0625  3A80               	xorlw	128
  3947  0626  00FF               	movwf	127
  3948  0627  3080               	movlw	128
  3949  0628  027F               	subwf	127,w
  3950  0629  1D03               	skipz
  3951  062A  2E2D               	goto	u2735
  3952  062B  30B7               	movlw	183
  3953  062C  0263               	subwf	calgulateTemp@milliVolt,w
  3954  062D                     u2735:	
  3955  062D  1C03               	skipc
  3956  062E  2E3B               	goto	l8184
  3957  062F  27ED               	call	PL12	;select bank 0
  3958  0630  0864               	movf	calgulateTemp@milliVolt+1,w
  3959  0631  3A80               	xorlw	128
  3960  0632  00FF               	movwf	127
  3961  0633  3085               	movlw	133
  3962  0634  027F               	subwf	127,w
  3963  0635  1D03               	skipz
  3964  0636  2E39               	goto	u2745
  3965  0637  3014               	movlw	20
  3966  0638  0263               	subwf	calgulateTemp@milliVolt,w
  3967  0639                     u2745:	
  3968  0639  1C03               	skipc
  3969  063A  2E3F               	goto	l1223
  3970  063B                     l8184:	
  3971                           
  3972                           ;main.c: 574: temperature = 255;
  3973  063B  30FF               	movlw	255
  3974  063C  27ED               	call	PL12	;select bank 0
  3975  063D  00E5               	movwf	calgulateTemp@temperature
  3976  063E  01E6               	clrf	calgulateTemp@temperature+1
  3977  063F                     l1223:	
  3978  063F  27ED               	call	PL12	;select bank 0
  3979                           
  3980                           ;main.c: 575: }
  3981                           ;main.c: 576: return temperature;
  3982  0640  0866               	movf	calgulateTemp@temperature+1,w
  3983  0641  00E4               	movwf	?_calgulateTemp+1
  3984  0642  0865               	movf	calgulateTemp@temperature,w
  3985  0643  00E3               	movwf	?_calgulateTemp
  3986  0644  0008               	return
  3987  0645                     __end_of_calgulateTemp:	
  3988  0645                     __ptext723:	
  3989 ;; =============== function ___lwtoft ends ============
  3990                           
  3991                           
  3992 ;; *************** function ___awtoft *****************
  3993 ;; Defined at:
  3994 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  c               2   21[BANK0 ] int 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  sign            1   24[BANK0 ] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  3   21[BANK0 ] float 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, pclath, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 60/0
  4005 ;;		On exit  : 60/0
  4006 ;;		Unchanged: FFF9F/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         0       3       0       0       0
  4009 ;;      Locals:         0       1       0       0       0
  4010 ;;      Temps:          0       0       0       0       0
  4011 ;;      Totals:         0       4       0       0       0
  4012 ;;Total ram usage:        4 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    4
  4015 ;; This function calls:
  4016 ;;		___ftpack
  4017 ;; This function is called by:
  4018 ;;		_calgulateTemp
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021  0645                     ___awtoft:	
  4022                           
  4023                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4024  0645  01B8               	clrf	___awtoft@sign
  4025  0646  1FB6               	btfss	___awtoft@c+1,7
  4026  0647  2E4F               	goto	l8106
  4027  0648  09B5               	comf	___awtoft@c,f
  4028  0649  09B6               	comf	___awtoft@c+1,f
  4029  064A  0AB5               	incf	___awtoft@c,f
  4030  064B  1903               	skipnz
  4031  064C  0AB6               	incf	___awtoft@c+1,f
  4032  064D  01B8               	clrf	___awtoft@sign
  4033  064E  0AB8               	incf	___awtoft@sign,f
  4034  064F                     l8106:	
  4035  064F  0835               	movf	___awtoft@c,w
  4036  0650  00A0               	movwf	?___ftpack
  4037  0651  0836               	movf	___awtoft@c+1,w
  4038  0652  00A1               	movwf	?___ftpack+1
  4039  0653  308E               	movlw	142
  4040  0654  01A2               	clrf	?___ftpack+2
  4041  0655  00A3               	movwf	?___ftpack+3
  4042  0656  0838               	movf	___awtoft@sign,w
  4043  0657  00A4               	movwf	?___ftpack+4
  4044  0658  26BB               	fcall	___ftpack
  4045  0659  0820               	movf	?___ftpack,w
  4046  065A  00B5               	movwf	?___awtoft
  4047  065B  0821               	movf	?___ftpack+1,w
  4048  065C  00B6               	movwf	?___awtoft+1
  4049  065D  0822               	movf	?___ftpack+2,w
  4050  065E  00B7               	movwf	?___awtoft+2
  4051  065F  0008               	return
  4052  0660                     __end_of___awtoft:	
  4053  0660                     __ptext729:	
  4054 ;; =============== function _temperatureOffset ends ============
  4055                           
  4056                           
  4057 ;; *************** function ___fttol *****************
  4058 ;; Defined at:
  4059 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  f1              3    8[BANK0 ] float 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  lval            4   16[BANK0 ] unsigned long 
  4064 ;;  exp1            1   20[BANK0 ] unsigned char 
  4065 ;;  sign1           1   15[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  4    8[BANK0 ] long 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 60/0
  4072 ;;		On exit  : 60/0
  4073 ;;		Unchanged: FFF9F/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4075 ;;      Params:         0       4       0       0       0
  4076 ;;      Locals:         0       6       0       0       0
  4077 ;;      Temps:          0       3       0       0       0
  4078 ;;      Totals:         0      13       0       0       0
  4079 ;;Total ram usage:       13 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    3
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_getTemperature
  4086 ;;		_calgulateTemp
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089  0660                     ___fttol:	
  4090                           
  4091                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4092  0660  27E6  120A  118A   	fcall	PL11	;call to abstracted procedure
  4093  0663  1003               	clrc
  4094  0664  0D2D               	rlf	??___fttol+1,w
  4095  0665  0D2E               	rlf	??___fttol+2,w
  4096  0666  00B4               	movwf	___fttol@exp1
  4097  0667  08B4               	movf	___fttol@exp1,f
  4098  0668  1D03               	skipz
  4099  0669  2E6F               	goto	l7824
  4100  066A                     l7822:	
  4101  066A  01A8               	clrf	?___fttol
  4102  066B  01A9               	clrf	?___fttol+1
  4103  066C  01AA               	clrf	?___fttol+2
  4104  066D  01AB               	clrf	?___fttol+3
  4105  066E  0008               	return
  4106  066F                     l7824:	
  4107  066F  27E6  120A  118A   	fcall	PL11	;call to abstracted procedure
  4108  0672  3017               	movlw	23
  4109  0673                     u2175:	
  4110  0673  1003               	clrc
  4111  0674  0CAE               	rrf	??___fttol+2,f
  4112  0675  0CAD               	rrf	??___fttol+1,f
  4113  0676  0CAC               	rrf	??___fttol,f
  4114  0677  3EFF               	addlw	-1
  4115  0678  1D03               	skipz
  4116  0679  2E73               	goto	u2175
  4117  067A  082C               	movf	??___fttol,w
  4118  067B  00AF               	movwf	___fttol@sign1
  4119  067C  17A9               	bsf	___fttol@f1+1,7
  4120  067D  01AA               	clrf	___fttol@f1+2
  4121  067E  0828               	movf	___fttol@f1,w
  4122  067F  00B0               	movwf	___fttol@lval
  4123  0680  0829               	movf	___fttol@f1+1,w
  4124  0681  00B1               	movwf	___fttol@lval+1
  4125  0682  082A               	movf	___fttol@f1+2,w
  4126  0683  00B2               	movwf	___fttol@lval+2
  4127  0684  308E               	movlw	142
  4128  0685  01B3               	clrf	___fttol@lval+3
  4129  0686  02B4               	subwf	___fttol@exp1,f
  4130  0687  1FB4               	btfss	___fttol@exp1,7
  4131  0688  2E96               	goto	l7844
  4132  0689  0834               	movf	___fttol@exp1,w
  4133  068A  3A80               	xorlw	128
  4134  068B  3E8F               	addlw	143
  4135  068C  1C03               	btfss	3,0
  4136  068D  2E6A               	goto	l7822
  4137  068E                     l7840:	
  4138  068E  1003               	clrc
  4139  068F  0CB3               	rrf	___fttol@lval+3,f
  4140  0690  0CB2               	rrf	___fttol@lval+2,f
  4141  0691  0CB1               	rrf	___fttol@lval+1,f
  4142  0692  0CB0               	rrf	___fttol@lval,f
  4143  0693  0FB4               	incfsz	___fttol@exp1,f
  4144  0694  2E8E               	goto	l7840
  4145  0695  2EA4               	goto	l7850
  4146  0696                     l7844:	
  4147  0696  3018               	movlw	24
  4148  0697  0234               	subwf	___fttol@exp1,w
  4149  0698  1803               	btfsc	3,0
  4150  0699  2E6A               	goto	l7822
  4151  069A                     l5597:	
  4152  069A  08B4               	movf	___fttol@exp1,f
  4153  069B  1903               	btfsc	3,2
  4154  069C  2EA4               	goto	l7850
  4155  069D  1003               	clrc
  4156  069E  0DB0               	rlf	___fttol@lval,f
  4157  069F  0DB1               	rlf	___fttol@lval+1,f
  4158  06A0  0DB2               	rlf	___fttol@lval+2,f
  4159  06A1  0DB3               	rlf	___fttol@lval+3,f
  4160  06A2  03B4               	decf	___fttol@exp1,f
  4161  06A3  2E9A               	goto	l5597
  4162  06A4                     l7850:	
  4163  06A4  082F               	movf	___fttol@sign1,w
  4164  06A5  1903               	btfsc	3,2
  4165  06A6  2EB2               	goto	l7854
  4166  06A7  09B0               	comf	___fttol@lval,f
  4167  06A8  09B1               	comf	___fttol@lval+1,f
  4168  06A9  09B2               	comf	___fttol@lval+2,f
  4169  06AA  09B3               	comf	___fttol@lval+3,f
  4170  06AB  0AB0               	incf	___fttol@lval,f
  4171  06AC  1903               	skipnz
  4172  06AD  0AB1               	incf	___fttol@lval+1,f
  4173  06AE  1903               	skipnz
  4174  06AF  0AB2               	incf	___fttol@lval+2,f
  4175  06B0  1903               	skipnz
  4176  06B1  0AB3               	incf	___fttol@lval+3,f
  4177  06B2                     l7854:	
  4178  06B2  0833               	movf	___fttol@lval+3,w
  4179  06B3  00AB               	movwf	?___fttol+3
  4180  06B4  0832               	movf	___fttol@lval+2,w
  4181  06B5  00AA               	movwf	?___fttol+2
  4182  06B6  0831               	movf	___fttol@lval+1,w
  4183  06B7  00A9               	movwf	?___fttol+1
  4184  06B8  0830               	movf	___fttol@lval,w
  4185  06B9  00A8               	movwf	?___fttol
  4186  06BA  0008               	return
  4187  06BB                     __end_of___fttol:	
  4188  06BB                     __ptext730:	
  4189 ;; =============== function ___fttol ends ============
  4190                           
  4191                           
  4192 ;; *************** function ___ftpack *****************
  4193 ;; Defined at:
  4194 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  4195 ;; Parameters:    Size  Location     Type
  4196 ;;  arg             3    0[BANK0 ] unsigned um
  4197 ;;  exp             1    3[BANK0 ] unsigned char 
  4198 ;;  sign            1    4[BANK0 ] unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  3    0[BANK0 ] float 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 60/0
  4207 ;;		On exit  : 60/0
  4208 ;;		Unchanged: FFF9F/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         0       5       0       0       0
  4211 ;;      Locals:         0       0       0       0       0
  4212 ;;      Temps:          0       3       0       0       0
  4213 ;;      Totals:         0       8       0       0       0
  4214 ;;Total ram usage:        8 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    3
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		___ftadd
  4221 ;;		___ftdiv
  4222 ;;		___ftmul
  4223 ;;		___awtoft
  4224 ;;		___lwtoft
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227  06BB                     ___ftpack:	
  4228                           
  4229                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4230  06BB  0823               	movf	___ftpack@exp,w
  4231  06BC  1903               	btfsc	3,2
  4232  06BD  2EC3               	goto	l7796
  4233  06BE  0822               	movf	___ftpack@arg+2,w
  4234  06BF  0421               	iorwf	___ftpack@arg+1,w
  4235  06C0  0420               	iorwf	___ftpack@arg,w
  4236  06C1  1D03               	skipz
  4237  06C2  2ECC               	goto	l7802
  4238  06C3                     l7796:	
  4239  06C3  01A0               	clrf	?___ftpack
  4240  06C4  01A1               	clrf	?___ftpack+1
  4241  06C5  01A2               	clrf	?___ftpack+2
  4242  06C6  0008               	return
  4243  06C7                     l7800:	
  4244  06C7  0AA3               	incf	___ftpack@exp,f
  4245  06C8  1003               	clrc
  4246  06C9  0CA2               	rrf	___ftpack@arg+2,f
  4247  06CA  0CA1               	rrf	___ftpack@arg+1,f
  4248  06CB  0CA0               	rrf	___ftpack@arg,f
  4249  06CC                     l7802:	
  4250  06CC  30FE               	movlw	254
  4251  06CD  0522               	andwf	___ftpack@arg+2,w
  4252  06CE  1903               	btfsc	3,2
  4253  06CF  2EDB               	goto	l7806
  4254  06D0  2EC7               	goto	l7800
  4255  06D1                     l7804:	
  4256  06D1  0AA3               	incf	___ftpack@exp,f
  4257  06D2  0AA0               	incf	___ftpack@arg,f
  4258  06D3  1903               	skipnz
  4259  06D4  0AA1               	incf	___ftpack@arg+1,f
  4260  06D5  1903               	skipnz
  4261  06D6  0AA2               	incf	___ftpack@arg+2,f
  4262  06D7  1003               	clrc
  4263  06D8  0CA2               	rrf	___ftpack@arg+2,f
  4264  06D9  0CA1               	rrf	___ftpack@arg+1,f
  4265  06DA  0CA0               	rrf	___ftpack@arg,f
  4266  06DB                     l7806:	
  4267  06DB  30FF               	movlw	255
  4268  06DC  0522               	andwf	___ftpack@arg+2,w
  4269  06DD  1903               	btfsc	3,2
  4270  06DE  2EE5               	goto	l7810
  4271  06DF  2ED1               	goto	l7804
  4272  06E0                     l7808:	
  4273  06E0  03A3               	decf	___ftpack@exp,f
  4274  06E1  1003               	clrc
  4275  06E2  0DA0               	rlf	___ftpack@arg,f
  4276  06E3  0DA1               	rlf	___ftpack@arg+1,f
  4277  06E4  0DA2               	rlf	___ftpack@arg+2,f
  4278  06E5                     l7810:	
  4279  06E5  1FA1               	btfss	___ftpack@arg+1,7
  4280  06E6  2EE0               	goto	l7808
  4281  06E7  1C23               	btfss	___ftpack@exp,0
  4282  06E8  13A1               	bcf	___ftpack@arg+1,7
  4283  06E9  1003               	clrc
  4284  06EA  0CA3               	rrf	___ftpack@exp,f
  4285  06EB  0823               	movf	___ftpack@exp,w
  4286  06EC  00A7               	movwf	??___ftpack+2
  4287  06ED  01A6               	clrf	??___ftpack+1
  4288  06EE  01A5               	clrf	??___ftpack
  4289  06EF  0825               	movf	??___ftpack,w
  4290  06F0  04A0               	iorwf	___ftpack@arg,f
  4291  06F1  0826               	movf	??___ftpack+1,w
  4292  06F2  04A1               	iorwf	___ftpack@arg+1,f
  4293  06F3  0827               	movf	??___ftpack+2,w
  4294  06F4  04A2               	iorwf	___ftpack@arg+2,f
  4295  06F5  0824               	movf	___ftpack@sign,w
  4296  06F6  1D03               	skipz
  4297  06F7  17A2               	bsf	___ftpack@arg+2,7
  4298  06F8  0008               	return
  4299  06F9                     __end_of___ftpack:	
  4300  06F9                     __ptext724:	
  4301 ;; =============== function ___awtoft ends ============
  4302                           
  4303                           
  4304 ;; *************** function ___ftmul *****************
  4305 ;; Defined at:
  4306 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  f1              3   40[BANK0 ] float 
  4309 ;;  f2              3   43[BANK0 ] float 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  f3_as_produc    3   50[BANK0 ] unsigned um
  4312 ;;  sign            1   54[BANK0 ] unsigned char 
  4313 ;;  cntr            1   53[BANK0 ] unsigned char 
  4314 ;;  exp             1   49[BANK0 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  3   40[BANK0 ] float 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 60/0
  4321 ;;		On exit  : 60/0
  4322 ;;		Unchanged: FFF9F/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       6       0       0       0
  4325 ;;      Locals:         0       6       0       0       0
  4326 ;;      Temps:          0       3       0       0       0
  4327 ;;      Totals:         0      15       0       0       0
  4328 ;;Total ram usage:       15 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    4
  4331 ;; This function calls:
  4332 ;;		___ftpack
  4333 ;; This function is called by:
  4334 ;;		_getTemperature
  4335 ;;		_calgulateTemp
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338  06F9                     ___ftmul:	
  4339                           
  4340                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4341  06F9  0848               	movf	___ftmul@f1,w
  4342  06FA  00CE               	movwf	??___ftmul
  4343  06FB  0849               	movf	___ftmul@f1+1,w
  4344  06FC  00CF               	movwf	??___ftmul+1
  4345  06FD  084A               	movf	___ftmul@f1+2,w
  4346  06FE  00D0               	movwf	??___ftmul+2
  4347  06FF  1003               	clrc
  4348  0700  0D4F               	rlf	??___ftmul+1,w
  4349  0701  0D50               	rlf	??___ftmul+2,w
  4350  0702  00D1               	movwf	___ftmul@exp
  4351  0703  08D1               	movf	___ftmul@exp,f
  4352  0704  1D03               	skipz
  4353  0705  2F0A               	goto	l8048
  4354  0706  01C8               	clrf	?___ftmul
  4355  0707  01C9               	clrf	?___ftmul+1
  4356  0708  01CA               	clrf	?___ftmul+2
  4357  0709  0008               	return
  4358  070A                     l8048:	
  4359  070A  084B               	movf	___ftmul@f2,w
  4360  070B  00CE               	movwf	??___ftmul
  4361  070C  084C               	movf	___ftmul@f2+1,w
  4362  070D  00CF               	movwf	??___ftmul+1
  4363  070E  084D               	movf	___ftmul@f2+2,w
  4364  070F  00D0               	movwf	??___ftmul+2
  4365  0710  1003               	clrc
  4366  0711  0D4F               	rlf	??___ftmul+1,w
  4367  0712  0D50               	rlf	??___ftmul+2,w
  4368  0713  00D6               	movwf	___ftmul@sign
  4369  0714  08D6               	movf	___ftmul@sign,f
  4370  0715  1D03               	skipz
  4371  0716  2F1B               	goto	l8054
  4372  0717  01C8               	clrf	?___ftmul
  4373  0718  01C9               	clrf	?___ftmul+1
  4374  0719  01CA               	clrf	?___ftmul+2
  4375  071A  0008               	return
  4376  071B                     l8054:	
  4377  071B  0856               	movf	___ftmul@sign,w
  4378  071C  3E7B               	addlw	123
  4379  071D  07D1               	addwf	___ftmul@exp,f
  4380  071E  084A               	movf	___ftmul@f1+2,w
  4381  071F  00D6               	movwf	___ftmul@sign
  4382  0720  084D               	movf	___ftmul@f2+2,w
  4383  0721  06D6               	xorwf	___ftmul@sign,f
  4384  0722  3080               	movlw	128
  4385  0723  05D6               	andwf	___ftmul@sign,f
  4386  0724  3007               	movlw	7
  4387  0725  17C9               	bsf	___ftmul@f1+1,7
  4388  0726  17CC               	bsf	___ftmul@f2+1,7
  4389  0727  01CD               	clrf	___ftmul@f2+2
  4390  0728  01D2               	clrf	___ftmul@f3_as_product
  4391  0729  01D3               	clrf	___ftmul@f3_as_product+1
  4392  072A  01D4               	clrf	___ftmul@f3_as_product+2
  4393  072B  00D5               	movwf	___ftmul@cntr
  4394  072C                     l8072:	
  4395  072C  1C48               	btfss	___ftmul@f1,0
  4396  072D  2F36               	goto	l8076
  4397  072E  084B               	movf	___ftmul@f2,w
  4398  072F  27AC  120A  118A   	fcall	PL4	;call to abstracted procedure
  4399  0732  1803               	skipnc
  4400  0733  0A4D               	incf	___ftmul@f2+2,w
  4401  0734  1D03               	btfss	3,2
  4402  0735  07D4               	addwf	___ftmul@f3_as_product+2,f
  4403  0736                     l8076:	
  4404  0736  1003               	clrc
  4405  0737  0CCA               	rrf	___ftmul@f1+2,f
  4406  0738  0CC9               	rrf	___ftmul@f1+1,f
  4407  0739  0CC8               	rrf	___ftmul@f1,f
  4408  073A  1003               	clrc
  4409  073B  0DCB               	rlf	___ftmul@f2,f
  4410  073C  0DCC               	rlf	___ftmul@f2+1,f
  4411  073D  0DCD               	rlf	___ftmul@f2+2,f
  4412  073E  0BD5               	decfsz	___ftmul@cntr,f
  4413  073F  2F2C               	goto	l8072
  4414  0740  3009               	movlw	9
  4415  0741  00D5               	movwf	___ftmul@cntr
  4416  0742                     l8084:	
  4417  0742  1C48               	btfss	___ftmul@f1,0
  4418  0743  2F4C               	goto	l8088
  4419  0744  084B               	movf	___ftmul@f2,w
  4420  0745  27AC  120A  118A   	fcall	PL4	;call to abstracted procedure
  4421  0748  1803               	skipnc
  4422  0749  0A4D               	incf	___ftmul@f2+2,w
  4423  074A  1D03               	btfss	3,2
  4424  074B  07D4               	addwf	___ftmul@f3_as_product+2,f
  4425  074C                     l8088:	
  4426  074C  1003               	clrc
  4427  074D  0CCA               	rrf	___ftmul@f1+2,f
  4428  074E  0CC9               	rrf	___ftmul@f1+1,f
  4429  074F  0CC8               	rrf	___ftmul@f1,f
  4430  0750  1003               	clrc
  4431  0751  0CD4               	rrf	___ftmul@f3_as_product+2,f
  4432  0752  0CD3               	rrf	___ftmul@f3_as_product+1,f
  4433  0753  0CD2               	rrf	___ftmul@f3_as_product,f
  4434  0754  0BD5               	decfsz	___ftmul@cntr,f
  4435  0755  2F42               	goto	l8084
  4436  0756  0852               	movf	___ftmul@f3_as_product,w
  4437  0757  00A0               	movwf	?___ftpack
  4438  0758  0853               	movf	___ftmul@f3_as_product+1,w
  4439  0759  00A1               	movwf	?___ftpack+1
  4440  075A  0854               	movf	___ftmul@f3_as_product+2,w
  4441  075B  00A2               	movwf	?___ftpack+2
  4442  075C  0851               	movf	___ftmul@exp,w
  4443  075D  00A3               	movwf	?___ftpack+3
  4444  075E  0856               	movf	___ftmul@sign,w
  4445  075F  00A4               	movwf	?___ftpack+4
  4446  0760  26BB               	fcall	___ftpack
  4447  0761  0820               	movf	?___ftpack,w
  4448  0762  00C8               	movwf	?___ftmul
  4449  0763  0821               	movf	?___ftpack+1,w
  4450  0764  00C9               	movwf	?___ftmul+1
  4451  0765  0822               	movf	?___ftpack+2,w
  4452  0766  00CA               	movwf	?___ftmul+2
  4453  0767  0008               	return
  4454  0768                     __end_of___ftmul:	
  4455  0768                     __ptext738:	
  4456 ;; =============== function _vResetPrintBuffer ends ============
  4457                           
  4458                           
  4459 ;; *************** function _read_ADC *****************
  4460 ;; Defined at:
  4461 ;;		line 69 in file "../src/adc.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  analogChanne    1    wreg     unsigned char 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  analogChanne    1    3[BANK0 ] unsigned char 
  4466 ;;  adcResult       2    4[BANK0 ] unsigned int 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    0[BANK0 ] unsigned int 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 60/0
  4474 ;;		Unchanged: FFF9F/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4476 ;;      Params:         0       2       0       0       0
  4477 ;;      Locals:         0       3       0       0       0
  4478 ;;      Temps:          0       1       0       0       0
  4479 ;;      Totals:         0       6       0       0       0
  4480 ;;Total ram usage:        6 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_getTemperature
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489  0768                     _read_ADC:	
  4490  0768  27ED               	call	PL12	;select bank 0
  4491                           
  4492                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
  4493                           ;read_ADC@analogChannel stored from wreg
  4494  0769  00A3               	movwf	read_ADC@analogChannel
  4495                           
  4496                           ;adc.c: 72: ADCON0bits.CHS = analogChannel;
  4497  076A  00A2               	movwf	??_read_ADC
  4498  076B  0DA2               	rlf	??_read_ADC,f
  4499  076C  0DA2               	rlf	??_read_ADC,f
  4500  076D  081F               	movf	31,w	;volatile
  4501  076E  0622               	xorwf	??_read_ADC,w
  4502  076F  39C3               	andlw	-61
  4503  0770  0622               	xorwf	??_read_ADC,w
  4504  0771  009F               	movwf	31	;volatile
  4505                           
  4506                           ;adc.c: 73: ADCON0bits.GO_DONE = 1;
  4507  0772  149F               	bsf	31,1	;volatile
  4508  0773                     l3304:	
  4509                           ;adc.c: 74: while(ADCON0bits.GO_DONE) continue;
  4510                           
  4511  0773  189F               	btfsc	31,1	;volatile
  4512  0774  2F73               	goto	l3304
  4513                           
  4514                           ;adc.c: 75: adcResult = ADRESH;
  4515  0775  081E               	movf	30,w	;volatile
  4516  0776  00A4               	movwf	read_ADC@adcResult
  4517  0777  01A5               	clrf	read_ADC@adcResult+1
  4518                           
  4519                           ;adc.c: 76: adcResult <<= 8;
  4520  0778  00A5               	movwf	read_ADC@adcResult+1
  4521  0779  01A4               	clrf	read_ADC@adcResult
  4522                           
  4523                           ;adc.c: 77: adcResult |= ADRESL;
  4524  077A  1683               	bsf	3,5	;RP0=1, select bank1
  4525  077B  081E               	movf	30,w	;volatile
  4526  077C  1283               	bcf	3,5	;RP0=0, select bank0
  4527  077D  04A4               	iorwf	read_ADC@adcResult,f
  4528                           
  4529                           ;adc.c: 79: return adcResult;
  4530  077E  0825               	movf	read_ADC@adcResult+1,w
  4531  077F  00A1               	movwf	?_read_ADC+1
  4532  0780  0824               	movf	read_ADC@adcResult,w
  4533  0781  00A0               	movwf	?_read_ADC
  4534  0782  0008               	return
  4535  0783                     __end_of_read_ADC:	
  4536  0783                     __ptext722:	
  4537 ;; =============== function _getTemperature ends ============
  4538                           
  4539                           
  4540 ;; *************** function ___lwtoft *****************
  4541 ;; Defined at:
  4542 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  c               2    8[BANK0 ] unsigned int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  3    8[BANK0 ] float 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 60/0
  4553 ;;		On exit  : 60/0
  4554 ;;		Unchanged: FFF9F/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       3       0       0       0
  4557 ;;      Locals:         0       0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0
  4559 ;;      Totals:         0       3       0       0       0
  4560 ;;Total ram usage:        3 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    4
  4563 ;; This function calls:
  4564 ;;		___ftpack
  4565 ;; This function is called by:
  4566 ;;		_getTemperature
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569  0783                     ___lwtoft:	
  4570                           
  4571                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4572  0783  0828               	movf	___lwtoft@c,w
  4573  0784  00A0               	movwf	?___ftpack
  4574  0785  0829               	movf	___lwtoft@c+1,w
  4575  0786  00A1               	movwf	?___ftpack+1
  4576  0787  308E               	movlw	142
  4577  0788  01A2               	clrf	?___ftpack+2
  4578  0789  00A3               	movwf	?___ftpack+3
  4579  078A  01A4               	clrf	?___ftpack+4
  4580  078B  26BB               	fcall	___ftpack
  4581  078C  0820               	movf	?___ftpack,w
  4582  078D  00A8               	movwf	?___lwtoft
  4583  078E  0821               	movf	?___ftpack+1,w
  4584  078F  00A9               	movwf	?___lwtoft+1
  4585  0790  0822               	movf	?___ftpack+2,w
  4586  0791  00AA               	movwf	?___lwtoft+2
  4587  0792  0008               	return
  4588  0793                     __end_of___lwtoft:	
  4589  0793                     __ptext743:	
  4590 ;; =============== function _vAddToUartTransmitBuffer ends ============
  4591                           
  4592                           
  4593 ;; *************** function _setCommunicationTimeOut *****************
  4594 ;; Defined at:
  4595 ;;		line 388 in file "../src/main.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  value           2    0[BANK0 ] unsigned int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;		None               void
  4602 ;; Registers used:
  4603 ;;		wreg
  4604 ;; Tracked objects:
  4605 ;;		On entry : 60/0
  4606 ;;		On exit  : 60/20
  4607 ;;		Unchanged: FFF9F/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4609 ;;      Params:         0       2       0       0       0
  4610 ;;      Locals:         0       0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0
  4612 ;;      Totals:         0       2       0       0       0
  4613 ;;Total ram usage:        2 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    3
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;;		_StringSerialProtocolService
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623  0793                     _setCommunicationTimeOut:	
  4624                           
  4625                           ;main.c: 389: communicationControlTimer = value;
  4626                           
  4627                           ; Regs used in _setCommunicationTimeOut: [wreg]
  4628  0793  0821               	movf	setCommunicationTimeOut@value+1,w
  4629  0794  1683               	bsf	3,5	;RP0=1, select bank1
  4630  0795  00AB               	movwf	(_communicationControlTimer+1)^(0+128)	;volatile
  4631  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4632  0797  0820               	movf	setCommunicationTimeOut@value,w
  4633  0798  1683               	bsf	3,5	;RP0=1, select bank1
  4634  0799  00AA               	movwf	_communicationControlTimer^(0+128)	;volatile
  4635                           
  4636                           ;main.c: 390: communicationControlTimer_En = 1;
  4637  079A  16F8               	bsf	_communicationControlTimer_En/(0+8),_communicationControlTimer_En& (0+7)
  4638  079B  0008               	return
  4639  079C                     __end_of_setCommunicationTimeOut:	
  4640  079C                     PL2:	
  4641  079C  1703               	bsf	3,6	;RP1=1, select bank2
  4642  079D  008D               	movwf	13	;volatile
  4643  079E  303F               	movlw	63
  4644  079F  1683               	bsf	3,5	;RP0=1, select bank3
  4645  07A0  058C               	andwf	12,f	;volatile
  4646  07A1  140C               	bsf	12,0
  4647  07A2  1283               	bcf	3,5	;RP0=0, select bank2
  4648  07A3  0008               	return
  4649  07A4                     PL3:	
  4650  07A4  00A0               	movwf	??_CheckCommand
  4651  07A5  0824               	movf	CheckCommand@i,w
  4652  07A6  3EA6               	addlw	_commandBuffer& (0+255)
  4653  07A7  0084               	movwf	4
  4654  07A8  1383               	bcf	3,7	;select IRP bank1
  4655  07A9  0800               	movf	0,w
  4656  07AA  0620               	xorwf	??_CheckCommand,w
  4657  07AB  0008               	return
  4658  07AC                     PL4:	
  4659  07AC  07D2               	addwf	___ftmul@f3_as_product,f
  4660  07AD  084C               	movf	___ftmul@f2+1,w
  4661  07AE  1103               	clrz
  4662  07AF  1803               	skipnc
  4663  07B0  0A4C               	incf	___ftmul@f2+1,w
  4664  07B1  1D03               	btfss	3,2
  4665  07B2  07D3               	addwf	___ftmul@f3_as_product+1,f
  4666  07B3  084D               	movf	___ftmul@f2+2,w
  4667  07B4  1103               	clrz
  4668  07B5  0008               	return
  4669  07B6                     PL5:	
  4670  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4671  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4672  07B8  0864               	movf	calgulateTemp@milliVolt+1,w
  4673  07B9  3A80               	xorlw	128
  4674  07BA  00FF               	movwf	127
  4675  07BB  3081               	movlw	129
  4676  07BC  027F               	subwf	127,w
  4677  07BD  0008               	return
  4678  07BE                     PL6:	
  4679  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  4680  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  4681  07C0  0864               	movf	calgulateTemp@milliVolt+1,w
  4682  07C1  3A80               	xorlw	128
  4683  07C2  00FF               	movwf	127
  4684  07C3  3080               	movlw	128
  4685  07C4  027F               	subwf	127,w
  4686  07C5  0008               	return
  4687  07C6                     PL7:	
  4688  07C6  00B5               	movwf	?___awtoft
  4689  07C7  086B               	movf	calgulateTemp@V1_,w
  4690  07C8  02B5               	subwf	?___awtoft,f
  4691  07C9  086C               	movf	calgulateTemp@V1_+1,w
  4692  07CA  1C03               	skipc
  4693  07CB  03B6               	decf	?___awtoft+1,f
  4694  07CC  02B6               	subwf	?___awtoft+1,f
  4695  07CD  0008               	return
  4696  07CE                     PL8:	
  4697  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  4698  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  4699  07D0  0864               	movf	calgulateTemp@milliVolt+1,w
  4700  07D1  3A80               	xorlw	128
  4701  07D2  00FF               	movwf	127
  4702  07D3  3083               	movlw	131
  4703  07D4  027F               	subwf	127,w
  4704  07D5  0008               	return
  4705  07D6                     PL9:	
  4706  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  4707  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  4708  07D8  0864               	movf	calgulateTemp@milliVolt+1,w
  4709  07D9  3A80               	xorlw	128
  4710  07DA  00FF               	movwf	127
  4711  07DB  3082               	movlw	130
  4712  07DC  027F               	subwf	127,w
  4713  07DD  0008               	return
  4714  07DE                     PL10:	
  4715  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  4716  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  4717  07E0  0864               	movf	calgulateTemp@milliVolt+1,w
  4718  07E1  3A80               	xorlw	128
  4719  07E2  00FF               	movwf	127
  4720  07E3  3084               	movlw	132
  4721  07E4  027F               	subwf	127,w
  4722  07E5  0008               	return
  4723  07E6                     PL11:	
  4724  07E6  0828               	movf	___fttol@f1,w
  4725  07E7  00AC               	movwf	??___fttol
  4726  07E8  0829               	movf	___fttol@f1+1,w
  4727  07E9  00AD               	movwf	??___fttol+1
  4728  07EA  082A               	movf	___fttol@f1+2,w
  4729  07EB  00AE               	movwf	??___fttol+2
  4730  07EC  0008               	return
  4731  07ED                     PL12:	
  4732  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  4733  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  4734  07EF  0008               	return
  4735                           
  4736                           	psect	text718
  4737  0EB5                     __ptext718:	
  4738 ;; =============== function _StringSerialProtocolService ends ============
  4739                           
  4740                           
  4741 ;; *************** function _vSendTemperatureToBuffer *****************
  4742 ;; Defined at:
  4743 ;;		line 460 in file "../src/main.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  convData        2   21[BANK0 ] int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;		None               void
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 160/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: FFE00/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         0       2       0       0       0
  4758 ;;      Locals:         0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0
  4760 ;;      Totals:         0       2       0       0       0
  4761 ;;Total ram usage:        2 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    6
  4764 ;; This function calls:
  4765 ;;		_itoa
  4766 ;; This function is called by:
  4767 ;;		_StringSerialProtocolService
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770  0EB5                     _vSendTemperatureToBuffer:	
  4771                           
  4772                           ;main.c: 461: itoa(currentTemperatureBuffer, convData, 10);
  4773                           
  4774                           ; Regs used in _vSendTemperatureToBuffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  4775  0EB5  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4776  0EB6  00B0               	movwf	?_itoa+1
  4777  0EB7  0835               	movf	vSendTemperatureToBuffer@convData,w
  4778  0EB8  00AF               	movwf	?_itoa
  4779  0EB9  300A               	movlw	10
  4780  0EBA  00B1               	movwf	?_itoa+2
  4781  0EBB  30BA               	movlw	_currentTemperatureBuffer& (0+255)
  4782  0EBC  01B2               	clrf	?_itoa+3
  4783  0EBD  2751  120A  158A   	fcall	_itoa
  4784                           
  4785                           ;main.c: 463: printBuffer[0] = '+';
  4786  0EC0  302B               	movlw	43
  4787  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  4788  0EC2  00A0               	movwf	_printBuffer^(0+128)
  4789                           
  4790                           ;main.c: 464: printBuffer[1] = currentTemperatureBuffer[0];
  4791  0EC3  083A               	movf	_currentTemperatureBuffer^(0+128),w
  4792  0EC4  00A1               	movwf	(_printBuffer^(0+128)+1)
  4793                           
  4794                           ;main.c: 465: printBuffer[2] = currentTemperatureBuffer[1];
  4795  0EC5  083B               	movf	(_currentTemperatureBuffer^(0+128)+1),w
  4796  0EC6  00A2               	movwf	(_printBuffer^(0+128)+2)
  4797                           
  4798                           ;main.c: 466: printBuffer[3] = currentTemperatureBuffer[2];
  4799  0EC7  083C               	movf	(_currentTemperatureBuffer^(0+128)+2),w
  4800  0EC8  00A3               	movwf	(_printBuffer^(0+128)+3)
  4801                           
  4802                           ;main.c: 467: printBuffer[4] = 'C';
  4803  0EC9  3043               	movlw	67
  4804  0ECA  00A4               	movwf	(_printBuffer^(0+128)+4)
  4805                           
  4806                           ;main.c: 468: printBuffer[5] = '\0';
  4807  0ECB  01A5               	clrf	(_printBuffer^(0+128)+5)
  4808                           
  4809                           ;main.c: 470: if (convData < 100) {
  4810  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4811  0ECD  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4812  0ECE  3A80               	xorlw	128
  4813  0ECF  00FF               	movwf	127
  4814  0ED0  3080               	movlw	128
  4815  0ED1  027F               	subwf	127,w
  4816  0ED2  1D03               	skipz
  4817  0ED3  2ED6               	goto	u2765
  4818  0ED4  3064               	movlw	100
  4819  0ED5  0235               	subwf	vSendTemperatureToBuffer@convData,w
  4820  0ED6                     u2765:	
  4821  0ED6  1803               	skipnc
  4822  0ED7  2EE5               	goto	l8222
  4823                           
  4824                           ;main.c: 471: printBuffer[0] = '+';
  4825  0ED8  302B               	movlw	43
  4826  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  4827  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  4828  0EDB  00A0               	movwf	_printBuffer^(0+128)
  4829                           
  4830                           ;main.c: 472: printBuffer[1] = '0';
  4831  0EDC  3030               	movlw	48
  4832  0EDD  00A1               	movwf	(_printBuffer^(0+128)+1)
  4833                           
  4834                           ;main.c: 473: printBuffer[2] = currentTemperatureBuffer[0];
  4835  0EDE  083A               	movf	_currentTemperatureBuffer^(0+128),w
  4836  0EDF  00A2               	movwf	(_printBuffer^(0+128)+2)
  4837                           
  4838                           ;main.c: 474: printBuffer[3] = currentTemperatureBuffer[1];
  4839  0EE0  083B               	movf	(_currentTemperatureBuffer^(0+128)+1),w
  4840  0EE1  00A3               	movwf	(_printBuffer^(0+128)+3)
  4841                           
  4842                           ;main.c: 475: printBuffer[4] = 'C';
  4843  0EE2  3043               	movlw	67
  4844  0EE3  00A4               	movwf	(_printBuffer^(0+128)+4)
  4845                           
  4846                           ;main.c: 476: printBuffer[5] = '\0';
  4847  0EE4  01A5               	clrf	(_printBuffer^(0+128)+5)
  4848  0EE5                     l8222:	
  4849                           
  4850                           ;main.c: 477: }
  4851                           ;main.c: 478: if (convData < 10) {
  4852  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0EE7  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4855  0EE8  3A80               	xorlw	128
  4856  0EE9  00FF               	movwf	127
  4857  0EEA  3080               	movlw	128
  4858  0EEB  027F               	subwf	127,w
  4859  0EEC  1D03               	skipz
  4860  0EED  2EF0               	goto	u2775
  4861  0EEE  300A               	movlw	10
  4862  0EEF  0235               	subwf	vSendTemperatureToBuffer@convData,w
  4863  0EF0                     u2775:	
  4864  0EF0  1803               	skipnc
  4865  0EF1  2EFE               	goto	l8228
  4866                           
  4867                           ;main.c: 479: printBuffer[0] = '+';
  4868  0EF2  302B               	movlw	43
  4869  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  4870  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  4871  0EF5  00A0               	movwf	_printBuffer^(0+128)
  4872                           
  4873                           ;main.c: 480: printBuffer[1] = '0';
  4874  0EF6  3030               	movlw	48
  4875  0EF7  00A1               	movwf	(_printBuffer^(0+128)+1)
  4876                           
  4877                           ;main.c: 481: printBuffer[2] = '0';
  4878  0EF8  00A2               	movwf	(_printBuffer^(0+128)+2)
  4879                           
  4880                           ;main.c: 482: printBuffer[3] = currentTemperatureBuffer[0];
  4881  0EF9  083A               	movf	_currentTemperatureBuffer^(0+128),w
  4882  0EFA  00A3               	movwf	(_printBuffer^(0+128)+3)
  4883                           
  4884                           ;main.c: 483: printBuffer[4] = 'C';
  4885  0EFB  3043               	movlw	67
  4886  0EFC  00A4               	movwf	(_printBuffer^(0+128)+4)
  4887                           
  4888                           ;main.c: 484: printBuffer[5] = '\0';
  4889  0EFD  01A5               	clrf	(_printBuffer^(0+128)+5)
  4890  0EFE                     l8228:	
  4891                           
  4892                           ;main.c: 485: }
  4893                           ;main.c: 486: if (convData == 0) {
  4894  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0F00  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4897  0F01  0435               	iorwf	vSendTemperatureToBuffer@convData,w
  4898  0F02  1D03               	skipz
  4899  0F03  2F0E               	goto	l8234
  4900                           
  4901                           ;main.c: 487: printBuffer[0] = '0';
  4902  0F04  3030               	movlw	48
  4903  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  4904  0F06  00A0               	movwf	_printBuffer^(0+128)
  4905                           
  4906                           ;main.c: 488: printBuffer[1] = '0';
  4907  0F07  00A1               	movwf	(_printBuffer^(0+128)+1)
  4908                           
  4909                           ;main.c: 489: printBuffer[2] = '0';
  4910  0F08  00A2               	movwf	(_printBuffer^(0+128)+2)
  4911                           
  4912                           ;main.c: 490: printBuffer[3] = currentTemperatureBuffer[0];
  4913  0F09  083A               	movf	_currentTemperatureBuffer^(0+128),w
  4914  0F0A  00A3               	movwf	(_printBuffer^(0+128)+3)
  4915                           
  4916                           ;main.c: 491: printBuffer[4] = 'C';
  4917  0F0B  3043               	movlw	67
  4918  0F0C  00A4               	movwf	(_printBuffer^(0+128)+4)
  4919                           
  4920                           ;main.c: 492: printBuffer[5] = '\0';
  4921  0F0D  01A5               	clrf	(_printBuffer^(0+128)+5)
  4922  0F0E                     l8234:	
  4923                           
  4924                           ;main.c: 493: }
  4925                           ;main.c: 494: if ((convData > -10) && (convData < 0)) {
  4926  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0F0F  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4928  0F10  3A80               	xorlw	128
  4929  0F11  00FF               	movwf	127
  4930  0F12  307F               	movlw	127
  4931  0F13  027F               	subwf	127,w
  4932  0F14  1D03               	skipz
  4933  0F15  2F18               	goto	u2795
  4934  0F16  30F7               	movlw	247
  4935  0F17  0235               	subwf	vSendTemperatureToBuffer@convData,w
  4936  0F18                     u2795:	
  4937  0F18  1C03               	skipc
  4938  0F19  2F29               	goto	l8242
  4939  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0F1C  1FB6               	btfss	vSendTemperatureToBuffer@convData+1,7
  4942  0F1D  2F29               	goto	l8242
  4943                           
  4944                           ;main.c: 495: printBuffer[0] = currentTemperatureBuffer[0];
  4945  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  4946  0F1F  083A               	movf	_currentTemperatureBuffer^(0+128),w
  4947  0F20  00A0               	movwf	_printBuffer^(0+128)
  4948                           
  4949                           ;main.c: 496: printBuffer[1] = '0';
  4950  0F21  3030               	movlw	48
  4951  0F22  00A1               	movwf	(_printBuffer^(0+128)+1)
  4952                           
  4953                           ;main.c: 497: printBuffer[2] = '0';
  4954  0F23  00A2               	movwf	(_printBuffer^(0+128)+2)
  4955                           
  4956                           ;main.c: 498: printBuffer[3] = currentTemperatureBuffer[1];
  4957  0F24  083B               	movf	(_currentTemperatureBuffer^(0+128)+1),w
  4958  0F25  00A3               	movwf	(_printBuffer^(0+128)+3)
  4959                           
  4960                           ;main.c: 499: printBuffer[4] = 'C';
  4961  0F26  3043               	movlw	67
  4962  0F27  00A4               	movwf	(_printBuffer^(0+128)+4)
  4963                           
  4964                           ;main.c: 500: printBuffer[5] = '\0';
  4965  0F28  01A5               	clrf	(_printBuffer^(0+128)+5)
  4966  0F29                     l8242:	
  4967                           
  4968                           ;main.c: 501: }
  4969                           ;main.c: 502: if ((convData > -51) && (convData <= -10)) {
  4970  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0F2B  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4973  0F2C  3A80               	xorlw	128
  4974  0F2D  00FF               	movwf	127
  4975  0F2E  307F               	movlw	127
  4976  0F2F  027F               	subwf	127,w
  4977  0F30  1D03               	skipz
  4978  0F31  2F34               	goto	u2815
  4979  0F32  30CE               	movlw	206
  4980  0F33  0235               	subwf	vSendTemperatureToBuffer@convData,w
  4981  0F34                     u2815:	
  4982  0F34  1C03               	skipc
  4983  0F35  0008               	return
  4984  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0F38  0836               	movf	vSendTemperatureToBuffer@convData+1,w
  4987  0F39  3A80               	xorlw	128
  4988  0F3A  00FF               	movwf	127
  4989  0F3B  307F               	movlw	127
  4990  0F3C  027F               	subwf	127,w
  4991  0F3D  1D03               	skipz
  4992  0F3E  2F41               	goto	u2825
  4993  0F3F  30F7               	movlw	247
  4994  0F40  0235               	subwf	vSendTemperatureToBuffer@convData,w
  4995  0F41                     u2825:	
  4996  0F41  1803               	skipnc
  4997  0F42  0008               	return
  4998                           
  4999                           ;main.c: 503: printBuffer[0] = currentTemperatureBuffer[0];
  5000  0F43  1683               	bsf	3,5	;RP0=1, select bank1
  5001  0F44  1303               	bcf	3,6	;RP1=0, select bank1
  5002  0F45  083A               	movf	_currentTemperatureBuffer^(0+128),w
  5003  0F46  00A0               	movwf	_printBuffer^(0+128)
  5004                           
  5005                           ;main.c: 504: printBuffer[1] = '0';
  5006  0F47  3030               	movlw	48
  5007  0F48  00A1               	movwf	(_printBuffer^(0+128)+1)
  5008                           
  5009                           ;main.c: 505: printBuffer[2] = currentTemperatureBuffer[1];
  5010  0F49  083B               	movf	(_currentTemperatureBuffer^(0+128)+1),w
  5011  0F4A  00A2               	movwf	(_printBuffer^(0+128)+2)
  5012                           
  5013                           ;main.c: 506: printBuffer[3] = currentTemperatureBuffer[2];
  5014  0F4B  083C               	movf	(_currentTemperatureBuffer^(0+128)+2),w
  5015  0F4C  00A3               	movwf	(_printBuffer^(0+128)+3)
  5016                           
  5017                           ;main.c: 507: printBuffer[4] = 'C';
  5018  0F4D  3043               	movlw	67
  5019  0F4E  00A4               	movwf	(_printBuffer^(0+128)+4)
  5020                           
  5021                           ;main.c: 508: printBuffer[5] = '\0';
  5022  0F4F  01A5               	clrf	(_printBuffer^(0+128)+5)
  5023  0F50  0008               	return
  5024  0F51                     __end_of_vSendTemperatureToBuffer:	
  5025  0F51                     __ptext719:	
  5026 ;; =============== function _vSendTemperatureToBuffer ends ============
  5027                           
  5028                           
  5029 ;; *************** function _itoa *****************
  5030 ;; Defined at:
  5031 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  buf             1    wreg     PTR unsigned char 
  5034 ;;		 -> currentTemperatureBuffer(6), 
  5035 ;;  val             2   15[BANK0 ] int 
  5036 ;;  base            2   17[BANK0 ] int 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  5039 ;;		 -> currentTemperatureBuffer(6), 
  5040 ;;  cp              1    0        PTR unsigned char 
  5041 ;;		 -> currentTemperatureBuffer(6), 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      PTR unsigned char 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 160/0
  5048 ;;		On exit  : 160/0
  5049 ;;		Unchanged: FFE9F/0
  5050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5051 ;;      Params:         0       4       0       0       0
  5052 ;;      Locals:         0       2       0       0       0
  5053 ;;      Temps:          0       0       0       0       0
  5054 ;;      Totals:         0       6       0       0       0
  5055 ;;Total ram usage:        6 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    5
  5058 ;; This function calls:
  5059 ;;		_utoa
  5060 ;; This function is called by:
  5061 ;;		_vSendTemperatureToBuffer
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064  0F51                     _itoa:	
  5065                           
  5066                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5067                           ;itoa@buf stored from wreg
  5068  0F51  00B4               	movwf	itoa@buf
  5069  0F52  1FB0               	btfss	itoa@val+1,7
  5070  0F53  2F5E               	goto	l8198
  5071  0F54  0834               	movf	itoa@buf,w
  5072  0F55  0084               	movwf	4
  5073  0F56  302D               	movlw	45
  5074  0F57  0080               	movwf	0
  5075  0F58  0AB4               	incf	itoa@buf,f
  5076  0F59  09AF               	comf	itoa@val,f
  5077  0F5A  09B0               	comf	itoa@val+1,f
  5078  0F5B  0AAF               	incf	itoa@val,f
  5079  0F5C  1903               	skipnz
  5080  0F5D  0AB0               	incf	itoa@val+1,f
  5081  0F5E                     l8198:	
  5082  0F5E  0830               	movf	itoa@val+1,w
  5083  0F5F  00A8               	movwf	?_utoa+1
  5084  0F60  082F               	movf	itoa@val,w
  5085  0F61  00A7               	movwf	?_utoa
  5086  0F62  0832               	movf	itoa@base+1,w
  5087  0F63  00AA               	movwf	?_utoa+3
  5088  0F64  0831               	movf	itoa@base,w
  5089  0F65  00A9               	movwf	?_utoa+2
  5090  0F66  0834               	movf	itoa@buf,w
  5091  0F67  2F68               	ljmp	_utoa
  5092  0F68                     __end_of_itoa:	
  5093  0F68                     __ptext727:	
  5094 ;; =============== function ___ftadd ends ============
  5095                           
  5096                           
  5097 ;; *************** function _utoa *****************
  5098 ;; Defined at:
  5099 ;;		line 18 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  buf             1    wreg     PTR unsigned char 
  5102 ;;		 -> currentTemperatureBuffer(6), 
  5103 ;;  val             2    7[BANK0 ] unsigned int 
  5104 ;;  base            2    9[BANK0 ] int 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  5107 ;;		 -> currentTemperatureBuffer(6), 
  5108 ;;  v               2   11[BANK0 ] unsigned int 
  5109 ;;  c               1   13[BANK0 ] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      PTR unsigned char 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 160/0
  5116 ;;		On exit  : 160/0
  5117 ;;		Unchanged: FFE9F/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5119 ;;      Params:         0       4       0       0       0
  5120 ;;      Locals:         0       4       0       0       0
  5121 ;;      Temps:          0       0       0       0       0
  5122 ;;      Totals:         0       8       0       0       0
  5123 ;;Total ram usage:        8 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    4
  5126 ;; This function calls:
  5127 ;;		___lwdiv
  5128 ;;		___lwmod
  5129 ;; This function is called by:
  5130 ;;		_itoa
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133  0F68                     _utoa:	
  5134                           
  5135                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5136                           ;utoa@buf stored from wreg
  5137  0F68  00AE               	movwf	utoa@buf
  5138  0F69  0828               	movf	utoa@val+1,w
  5139  0F6A  00AC               	movwf	utoa@v+1
  5140  0F6B  0827               	movf	utoa@val,w
  5141  0F6C  00AB               	movwf	utoa@v
  5142  0F6D                     l7896:	
  5143  0F6D  082A               	movf	utoa@base+1,w
  5144  0F6E  00A1               	movwf	?___lwdiv+1
  5145  0F6F  0829               	movf	utoa@base,w
  5146  0F70  00A0               	movwf	?___lwdiv
  5147  0F71  082C               	movf	utoa@v+1,w
  5148  0F72  00A3               	movwf	?___lwdiv+3
  5149  0F73  082B               	movf	utoa@v,w
  5150  0F74  00A2               	movwf	?___lwdiv+2
  5151  0F75  27B2  120A  158A   	fcall	___lwdiv
  5152  0F78  0821               	movf	?___lwdiv+1,w
  5153  0F79  00AC               	movwf	utoa@v+1
  5154  0F7A  0820               	movf	?___lwdiv,w
  5155  0F7B  00AB               	movwf	utoa@v
  5156  0F7C  0AAE               	incf	utoa@buf,f
  5157  0F7D  042C               	iorwf	utoa@v+1,w
  5158  0F7E  1D03               	skipz
  5159  0F7F  2F6D               	goto	l7896
  5160  0F80  082E               	movf	utoa@buf,w
  5161  0F81  0084               	movwf	4
  5162  0F82  0180               	clrf	0
  5163  0F83  03AE               	decf	utoa@buf,f
  5164  0F84                     l7906:	
  5165  0F84  082A               	movf	utoa@base+1,w
  5166  0F85  00A1               	movwf	?___lwmod+1
  5167  0F86  0829               	movf	utoa@base,w
  5168  0F87  00A0               	movwf	?___lwmod
  5169  0F88  0828               	movf	utoa@val+1,w
  5170  0F89  00A3               	movwf	?___lwmod+3
  5171  0F8A  0827               	movf	utoa@val,w
  5172  0F8B  00A2               	movwf	?___lwmod+2
  5173  0F8C  27DC  120A  158A   	fcall	___lwmod
  5174  0F8F  0820               	movf	?___lwmod,w
  5175  0F90  00AD               	movwf	utoa@c
  5176  0F91  082A               	movf	utoa@base+1,w
  5177  0F92  00A1               	movwf	?___lwdiv+1
  5178  0F93  0829               	movf	utoa@base,w
  5179  0F94  00A0               	movwf	?___lwdiv
  5180  0F95  0828               	movf	utoa@val+1,w
  5181  0F96  00A3               	movwf	?___lwdiv+3
  5182  0F97  0827               	movf	utoa@val,w
  5183  0F98  00A2               	movwf	?___lwdiv+2
  5184  0F99  27B2  120A  158A   	fcall	___lwdiv
  5185  0F9C  0821               	movf	?___lwdiv+1,w
  5186  0F9D  00A8               	movwf	utoa@val+1
  5187  0F9E  0820               	movf	?___lwdiv,w
  5188  0F9F  00A7               	movwf	utoa@val
  5189  0FA0  300A               	movlw	10
  5190  0FA1  022D               	subwf	utoa@c,w
  5191  0FA2  1C03               	skipc
  5192  0FA3  2FA6               	goto	l5469
  5193  0FA4  3007               	movlw	7
  5194  0FA5  07AD               	addwf	utoa@c,f
  5195  0FA6                     l5469:	
  5196  0FA6  3030               	movlw	48
  5197  0FA7  07AD               	addwf	utoa@c,f
  5198  0FA8  082E               	movf	utoa@buf,w
  5199  0FA9  0084               	movwf	4
  5200  0FAA  082D               	movf	utoa@c,w
  5201  0FAB  0080               	movwf	0
  5202  0FAC  03AE               	decf	utoa@buf,f
  5203  0FAD  0828               	movf	utoa@val+1,w
  5204  0FAE  0427               	iorwf	utoa@val,w
  5205  0FAF  1903               	btfsc	3,2
  5206  0FB0  0008               	return
  5207  0FB1  2F84               	goto	l7906
  5208  0FB2                     __end_of_utoa:	
  5209  0FB2                     __ptext732:	
  5210 ;; =============== function ___lwmod ends ============
  5211                           
  5212                           
  5213 ;; *************** function ___lwdiv *****************
  5214 ;; Defined at:
  5215 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  divisor         2    0[BANK0 ] unsigned int 
  5218 ;;  dividend        2    2[BANK0 ] unsigned int 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  quotient        2    4[BANK0 ] unsigned int 
  5221 ;;  counter         1    6[BANK0 ] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  2    0[BANK0 ] unsigned int 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 160/0
  5228 ;;		On exit  : 160/0
  5229 ;;		Unchanged: FFE9F/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5231 ;;      Params:         0       4       0       0       0
  5232 ;;      Locals:         0       3       0       0       0
  5233 ;;      Temps:          0       0       0       0       0
  5234 ;;      Totals:         0       7       0       0       0
  5235 ;;Total ram usage:        7 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    3
  5238 ;; This function calls:
  5239 ;;		Nothing
  5240 ;; This function is called by:
  5241 ;;		_utoa
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244  0FB2                     ___lwdiv:	
  5245                           
  5246                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5247  0FB2  01A4               	clrf	___lwdiv@quotient
  5248  0FB3  01A5               	clrf	___lwdiv@quotient+1
  5249  0FB4  0821               	movf	___lwdiv@divisor+1,w
  5250  0FB5  0420               	iorwf	___lwdiv@divisor,w
  5251  0FB6  1903               	skipnz
  5252  0FB7  2FD7               	goto	l7768
  5253  0FB8  01A6               	clrf	___lwdiv@counter
  5254  0FB9                     L20:	
  5255  0FB9  0AA6               	incf	___lwdiv@counter,f
  5256  0FBA  1BA1               	btfsc	___lwdiv@divisor+1,7
  5257  0FBB  2FC0               	goto	l7756
  5258  0FBC  1003               	clrc
  5259  0FBD  0DA0               	rlf	___lwdiv@divisor,f
  5260  0FBE  0DA1               	rlf	___lwdiv@divisor+1,f
  5261  0FBF  2FB9               	goto	L20
  5262  0FC0                     l7756:	
  5263  0FC0  1003               	clrc
  5264  0FC1  0DA4               	rlf	___lwdiv@quotient,f
  5265  0FC2  0DA5               	rlf	___lwdiv@quotient+1,f
  5266  0FC3  0821               	movf	___lwdiv@divisor+1,w
  5267  0FC4  0223               	subwf	___lwdiv@dividend+1,w
  5268  0FC5  1D03               	skipz
  5269  0FC6  2FC9               	goto	u2035
  5270  0FC7  0820               	movf	___lwdiv@divisor,w
  5271  0FC8  0222               	subwf	___lwdiv@dividend,w
  5272  0FC9                     u2035:	
  5273  0FC9  1C03               	skipc
  5274  0FCA  2FD3               	goto	L21
  5275  0FCB  0820               	movf	___lwdiv@divisor,w
  5276  0FCC  02A2               	subwf	___lwdiv@dividend,f
  5277  0FCD  0821               	movf	___lwdiv@divisor+1,w
  5278  0FCE  1C03               	skipc
  5279  0FCF  03A3               	decf	___lwdiv@dividend+1,f
  5280  0FD0  02A3               	subwf	___lwdiv@dividend+1,f
  5281  0FD1  1424               	bsf	___lwdiv@quotient,0
  5282  0FD2  1003               	clrc
  5283  0FD3                     L21:	
  5284  0FD3  0CA1               	rrf	___lwdiv@divisor+1,f
  5285  0FD4  0CA0               	rrf	___lwdiv@divisor,f
  5286  0FD5  0BA6               	decfsz	___lwdiv@counter,f
  5287  0FD6  2FC0               	goto	l7756
  5288  0FD7                     l7768:	
  5289  0FD7  0825               	movf	___lwdiv@quotient+1,w
  5290  0FD8  00A1               	movwf	?___lwdiv+1
  5291  0FD9  0824               	movf	___lwdiv@quotient,w
  5292  0FDA  00A0               	movwf	?___lwdiv
  5293  0FDB  0008               	return
  5294  0FDC                     __end_of___lwdiv:	
  5295  0FDC                     __ptext731:	
  5296 ;; =============== function ___ftpack ends ============
  5297                           
  5298                           
  5299 ;; *************** function ___lwmod *****************
  5300 ;; Defined at:
  5301 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  divisor         2    0[BANK0 ] unsigned int 
  5304 ;;  dividend        2    2[BANK0 ] unsigned int 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  counter         1    4[BANK0 ] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  2    0[BANK0 ] unsigned int 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 160/0
  5313 ;;		On exit  : 160/0
  5314 ;;		Unchanged: FFE9F/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5316 ;;      Params:         0       4       0       0       0
  5317 ;;      Locals:         0       1       0       0       0
  5318 ;;      Temps:          0       0       0       0       0
  5319 ;;      Totals:         0       5       0       0       0
  5320 ;;Total ram usage:        5 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    3
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_utoa
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329  0FDC                     ___lwmod:	
  5330                           
  5331                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5332  0FDC  0821               	movf	___lwmod@divisor+1,w
  5333  0FDD  0420               	iorwf	___lwmod@divisor,w
  5334  0FDE  1903               	skipnz
  5335  0FDF  2FFB               	goto	l7788
  5336  0FE0  01A4               	clrf	___lwmod@counter
  5337  0FE1                     L18:	
  5338  0FE1  0AA4               	incf	___lwmod@counter,f
  5339  0FE2  1BA1               	btfsc	___lwmod@divisor+1,7
  5340  0FE3  2FE8               	goto	l7780
  5341  0FE4  1003               	clrc
  5342  0FE5  0DA0               	rlf	___lwmod@divisor,f
  5343  0FE6  0DA1               	rlf	___lwmod@divisor+1,f
  5344  0FE7  2FE1               	goto	L18
  5345  0FE8                     l7780:	
  5346  0FE8  0821               	movf	___lwmod@divisor+1,w
  5347  0FE9  0223               	subwf	___lwmod@dividend+1,w
  5348  0FEA  1D03               	skipz
  5349  0FEB  2FEE               	goto	u2075
  5350  0FEC  0820               	movf	___lwmod@divisor,w
  5351  0FED  0222               	subwf	___lwmod@dividend,w
  5352  0FEE                     u2075:	
  5353  0FEE  1C03               	skipc
  5354  0FEF  2FF7               	goto	L19
  5355  0FF0  0820               	movf	___lwmod@divisor,w
  5356  0FF1  02A2               	subwf	___lwmod@dividend,f
  5357  0FF2  0821               	movf	___lwmod@divisor+1,w
  5358  0FF3  1C03               	skipc
  5359  0FF4  03A3               	decf	___lwmod@dividend+1,f
  5360  0FF5  02A3               	subwf	___lwmod@dividend+1,f
  5361  0FF6  1003               	clrc
  5362  0FF7                     L19:	
  5363  0FF7  0CA1               	rrf	___lwmod@divisor+1,f
  5364  0FF8  0CA0               	rrf	___lwmod@divisor,f
  5365  0FF9  0BA4               	decfsz	___lwmod@counter,f
  5366  0FFA  2FE8               	goto	l7780
  5367  0FFB                     l7788:	
  5368  0FFB  0823               	movf	___lwmod@dividend+1,w
  5369  0FFC  00A1               	movwf	?___lwmod+1
  5370  0FFD  0822               	movf	___lwmod@dividend,w
  5371  0FFE  00A0               	movwf	?___lwmod
  5372  0FFF  0008               	return
  5373  1000                     __end_of___lwmod:	
  5374                           
  5375                           	psect	text725
  5376  0B8C                     __ptext725:	
  5377 ;; =============== function ___ftmul ends ============
  5378                           
  5379                           
  5380 ;; *************** function ___ftdiv *****************
  5381 ;; Defined at:
  5382 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  f2              3   25[BANK0 ] float 
  5385 ;;  f1              3   28[BANK0 ] float 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;  f3              3   35[BANK0 ] float 
  5388 ;;  sign            1   39[BANK0 ] unsigned char 
  5389 ;;  exp             1   38[BANK0 ] unsigned char 
  5390 ;;  cntr            1   34[BANK0 ] unsigned char 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  3   25[BANK0 ] float 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, pclath, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 60/0
  5397 ;;		On exit  : 60/0
  5398 ;;		Unchanged: FFF9F/0
  5399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5400 ;;      Params:         0       6       0       0       0
  5401 ;;      Locals:         0       6       0       0       0
  5402 ;;      Temps:          0       3       0       0       0
  5403 ;;      Totals:         0      15       0       0       0
  5404 ;;Total ram usage:       15 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    4
  5407 ;; This function calls:
  5408 ;;		___ftpack
  5409 ;; This function is called by:
  5410 ;;		_calgulateTemp
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413  0B8C                     ___ftdiv:	
  5414                           
  5415                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5416  0B8C  083C               	movf	___ftdiv@f1,w
  5417  0B8D  00BF               	movwf	??___ftdiv
  5418  0B8E  083D               	movf	___ftdiv@f1+1,w
  5419  0B8F  00C0               	movwf	??___ftdiv+1
  5420  0B90  083E               	movf	___ftdiv@f1+2,w
  5421  0B91  00C1               	movwf	??___ftdiv+2
  5422  0B92  1003               	clrc
  5423  0B93  0D40               	rlf	??___ftdiv+1,w
  5424  0B94  0D41               	rlf	??___ftdiv+2,w
  5425  0B95  00C6               	movwf	___ftdiv@exp
  5426  0B96  08C6               	movf	___ftdiv@exp,f
  5427  0B97  1D03               	skipz
  5428  0B98  2B9D               	goto	l8004
  5429  0B99  01B9               	clrf	?___ftdiv
  5430  0B9A  01BA               	clrf	?___ftdiv+1
  5431  0B9B  01BB               	clrf	?___ftdiv+2
  5432  0B9C  0008               	return
  5433  0B9D                     l8004:	
  5434  0B9D  0839               	movf	___ftdiv@f2,w
  5435  0B9E  00BF               	movwf	??___ftdiv
  5436  0B9F  083A               	movf	___ftdiv@f2+1,w
  5437  0BA0  00C0               	movwf	??___ftdiv+1
  5438  0BA1  083B               	movf	___ftdiv@f2+2,w
  5439  0BA2  00C1               	movwf	??___ftdiv+2
  5440  0BA3  1003               	clrc
  5441  0BA4  0D40               	rlf	??___ftdiv+1,w
  5442  0BA5  0D41               	rlf	??___ftdiv+2,w
  5443  0BA6  00C7               	movwf	___ftdiv@sign
  5444  0BA7  08C7               	movf	___ftdiv@sign,f
  5445  0BA8  1D03               	skipz
  5446  0BA9  2BAE               	goto	l5570
  5447  0BAA  01B9               	clrf	?___ftdiv
  5448  0BAB  01BA               	clrf	?___ftdiv+1
  5449  0BAC  01BB               	clrf	?___ftdiv+2
  5450  0BAD  0008               	return
  5451  0BAE                     l5570:	
  5452  0BAE  3089               	movlw	137
  5453  0BAF  01C3               	clrf	___ftdiv@f3
  5454  0BB0  01C4               	clrf	___ftdiv@f3+1
  5455  0BB1  01C5               	clrf	___ftdiv@f3+2
  5456  0BB2  0747               	addwf	___ftdiv@sign,w
  5457  0BB3  00BF               	movwf	??___ftdiv
  5458  0BB4  02C6               	subwf	___ftdiv@exp,f
  5459  0BB5  083E               	movf	___ftdiv@f1+2,w
  5460  0BB6  00C7               	movwf	___ftdiv@sign
  5461  0BB7  083B               	movf	___ftdiv@f2+2,w
  5462  0BB8  06C7               	xorwf	___ftdiv@sign,f
  5463  0BB9  3080               	movlw	128
  5464  0BBA  05C7               	andwf	___ftdiv@sign,f
  5465  0BBB  3018               	movlw	24
  5466  0BBC  17BD               	bsf	___ftdiv@f1+1,7
  5467  0BBD  01BE               	clrf	___ftdiv@f1+2
  5468  0BBE  17BA               	bsf	___ftdiv@f2+1,7
  5469  0BBF  01BB               	clrf	___ftdiv@f2+2
  5470  0BC0  00C2               	movwf	___ftdiv@cntr
  5471  0BC1                     l8028:	
  5472  0BC1  1003               	clrc
  5473  0BC2  0DC3               	rlf	___ftdiv@f3,f
  5474  0BC3  0DC4               	rlf	___ftdiv@f3+1,f
  5475  0BC4  0DC5               	rlf	___ftdiv@f3+2,f
  5476  0BC5  083B               	movf	___ftdiv@f2+2,w
  5477  0BC6  023E               	subwf	___ftdiv@f1+2,w
  5478  0BC7  1D03               	skipz
  5479  0BC8  2BCF               	goto	u2505
  5480  0BC9  083A               	movf	___ftdiv@f2+1,w
  5481  0BCA  023D               	subwf	___ftdiv@f1+1,w
  5482  0BCB  1D03               	skipz
  5483  0BCC  2BCF               	goto	u2505
  5484  0BCD  0839               	movf	___ftdiv@f2,w
  5485  0BCE  023C               	subwf	___ftdiv@f1,w
  5486  0BCF                     u2505:	
  5487  0BCF  1C03               	skipc
  5488  0BD0  2BDD               	goto	L16
  5489  0BD1  0839               	movf	___ftdiv@f2,w
  5490  0BD2  02BC               	subwf	___ftdiv@f1,f
  5491  0BD3  083A               	movf	___ftdiv@f2+1,w
  5492  0BD4  1C03               	skipc
  5493  0BD5  0F3A               	incfsz	___ftdiv@f2+1,w
  5494  0BD6  02BD               	subwf	___ftdiv@f1+1,f
  5495  0BD7  083B               	movf	___ftdiv@f2+2,w
  5496  0BD8  1C03               	skipc
  5497  0BD9  0A3B               	incf	___ftdiv@f2+2,w
  5498  0BDA  02BE               	subwf	___ftdiv@f1+2,f
  5499  0BDB  1443               	bsf	___ftdiv@f3,0
  5500  0BDC  1003               	clrc
  5501  0BDD                     L16:	
  5502  0BDD  0DBC               	rlf	___ftdiv@f1,f
  5503  0BDE  0DBD               	rlf	___ftdiv@f1+1,f
  5504  0BDF  0DBE               	rlf	___ftdiv@f1+2,f
  5505  0BE0  0BC2               	decfsz	___ftdiv@cntr,f
  5506  0BE1  2BC1               	goto	l8028
  5507  0BE2  0843               	movf	___ftdiv@f3,w
  5508  0BE3  00A0               	movwf	?___ftpack
  5509  0BE4  0844               	movf	___ftdiv@f3+1,w
  5510  0BE5  00A1               	movwf	?___ftpack+1
  5511  0BE6  0845               	movf	___ftdiv@f3+2,w
  5512  0BE7  00A2               	movwf	?___ftpack+2
  5513  0BE8  0846               	movf	___ftdiv@exp,w
  5514  0BE9  00A3               	movwf	?___ftpack+3
  5515  0BEA  0847               	movf	___ftdiv@sign,w
  5516  0BEB  00A4               	movwf	?___ftpack+4
  5517  0BEC  120A  118A  26BB   	fcall	___ftpack
  5518  0BEF  0820               	movf	?___ftpack,w
  5519  0BF0  00B9               	movwf	?___ftdiv
  5520  0BF1  0821               	movf	?___ftpack+1,w
  5521  0BF2  00BA               	movwf	?___ftdiv+1
  5522  0BF3  0822               	movf	?___ftpack+2,w
  5523  0BF4  00BB               	movwf	?___ftdiv+2
  5524  0BF5  0008               	return
  5525  0BF6                     __end_of___ftdiv:	
  5526                           
  5527                           	psect	text726
  5528  0BF6                     __ptext726:	
  5529 ;; =============== function ___ftdiv ends ============
  5530                           
  5531                           
  5532 ;; *************** function ___ftadd *****************
  5533 ;; Defined at:
  5534 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  f1              3   55[BANK0 ] float 
  5537 ;;  f2              3   58[BANK0 ] float 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  exp1            1   66[BANK0 ] unsigned char 
  5540 ;;  exp2            1   65[BANK0 ] unsigned char 
  5541 ;;  sign            1   64[BANK0 ] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  3   55[BANK0 ] float 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0, pclath, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 60/0
  5548 ;;		On exit  : 60/0
  5549 ;;		Unchanged: FFF9F/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5551 ;;      Params:         0       6       0       0       0
  5552 ;;      Locals:         0       3       0       0       0
  5553 ;;      Temps:          0       3       0       0       0
  5554 ;;      Totals:         0      12       0       0       0
  5555 ;;Total ram usage:       12 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    4
  5558 ;; This function calls:
  5559 ;;		___ftpack
  5560 ;; This function is called by:
  5561 ;;		_calgulateTemp
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564  0BF6                     ___ftadd:	
  5565                           
  5566                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5567  0BF6  0857               	movf	___ftadd@f1,w
  5568  0BF7  00DD               	movwf	??___ftadd
  5569  0BF8  0858               	movf	___ftadd@f1+1,w
  5570  0BF9  00DE               	movwf	??___ftadd+1
  5571  0BFA  0859               	movf	___ftadd@f1+2,w
  5572  0BFB  00DF               	movwf	??___ftadd+2
  5573  0BFC  1003               	clrc
  5574  0BFD  0D5E               	rlf	??___ftadd+1,w
  5575  0BFE  0D5F               	rlf	??___ftadd+2,w
  5576  0BFF  00E2               	movwf	___ftadd@exp1
  5577  0C00  085A               	movf	___ftadd@f2,w
  5578  0C01  00DD               	movwf	??___ftadd
  5579  0C02  085B               	movf	___ftadd@f2+1,w
  5580  0C03  00DE               	movwf	??___ftadd+1
  5581  0C04  085C               	movf	___ftadd@f2+2,w
  5582  0C05  00DF               	movwf	??___ftadd+2
  5583  0C06  1003               	clrc
  5584  0C07  0D5E               	rlf	??___ftadd+1,w
  5585  0C08  0D5F               	rlf	??___ftadd+2,w
  5586  0C09  00E1               	movwf	___ftadd@exp2
  5587  0C0A  0862               	movf	___ftadd@exp1,w
  5588  0C0B  1903               	btfsc	3,2
  5589  0C0C  2C19               	goto	l7928
  5590  0C0D  0861               	movf	___ftadd@exp2,w
  5591  0C0E  0262               	subwf	___ftadd@exp1,w
  5592  0C0F  0861               	movf	___ftadd@exp2,w
  5593  0C10  1803               	skipnc
  5594  0C11  2C21               	goto	L17
  5595  0C12  00DD               	movwf	??___ftadd
  5596  0C13  0862               	movf	___ftadd@exp1,w
  5597  0C14  02DD               	subwf	??___ftadd,f
  5598  0C15  3019               	movlw	25
  5599  0C16  025D               	subwf	??___ftadd,w
  5600  0C17  1C03               	skipc
  5601  0C18  2C20               	goto	l7932
  5602  0C19                     l7928:	
  5603  0C19  085A               	movf	___ftadd@f2,w
  5604  0C1A  00D7               	movwf	?___ftadd
  5605  0C1B  085B               	movf	___ftadd@f2+1,w
  5606  0C1C  00D8               	movwf	?___ftadd+1
  5607  0C1D  085C               	movf	___ftadd@f2+2,w
  5608  0C1E  00D9               	movwf	?___ftadd+2
  5609  0C1F  0008               	return
  5610  0C20                     l7932:	
  5611  0C20  0861               	movf	___ftadd@exp2,w
  5612  0C21                     L17:	
  5613  0C21  1903               	btfsc	3,2
  5614  0C22  0008               	return
  5615  0C23  0862               	movf	___ftadd@exp1,w
  5616  0C24  0261               	subwf	___ftadd@exp2,w
  5617  0C25  1803               	skipnc
  5618  0C26  2C2F               	goto	l7938
  5619  0C27  0862               	movf	___ftadd@exp1,w
  5620  0C28  00DD               	movwf	??___ftadd
  5621  0C29  0861               	movf	___ftadd@exp2,w
  5622  0C2A  02DD               	subwf	??___ftadd,f
  5623  0C2B  3019               	movlw	25
  5624  0C2C  025D               	subwf	??___ftadd,w
  5625  0C2D  1803               	btfsc	3,0
  5626  0C2E  0008               	return
  5627  0C2F                     l7938:	
  5628  0C2F  3006               	movlw	6
  5629  0C30  00E0               	movwf	___ftadd@sign
  5630  0C31  1BD9               	btfsc	___ftadd@f1+2,7
  5631  0C32  17E0               	bsf	___ftadd@sign,7
  5632  0C33  1BDC               	btfsc	___ftadd@f2+2,7
  5633  0C34  1760               	bsf	___ftadd@sign,6
  5634  0C35  17D8               	bsf	___ftadd@f1+1,7
  5635  0C36  01D9               	clrf	___ftadd@f1+2
  5636  0C37  17DB               	bsf	___ftadd@f2+1,7
  5637  0C38  01DC               	clrf	___ftadd@f2+2
  5638  0C39  0861               	movf	___ftadd@exp2,w
  5639  0C3A  0262               	subwf	___ftadd@exp1,w
  5640  0C3B  1803               	skipnc
  5641  0C3C  2C56               	goto	l7960
  5642  0C3D                     l7950:	
  5643  0C3D  1003               	clrc
  5644  0C3E  0DDA               	rlf	___ftadd@f2,f
  5645  0C3F  0DDB               	rlf	___ftadd@f2+1,f
  5646  0C40  0DDC               	rlf	___ftadd@f2+2,f
  5647  0C41  03E1               	decf	___ftadd@exp2,f
  5648  0C42  0861               	movf	___ftadd@exp2,w
  5649  0C43  0662               	xorwf	___ftadd@exp1,w
  5650  0C44  1903               	skipnz
  5651  0C45  2C51               	goto	l7958
  5652  0C46  03E0               	decf	___ftadd@sign,f
  5653  0C47  0860               	movf	___ftadd@sign,w
  5654  0C48  3907               	andlw	7
  5655  0C49  1903               	btfsc	3,2
  5656  0C4A  2C51               	goto	l7958
  5657  0C4B  2C3D               	goto	l7950
  5658  0C4C                     l7956:	
  5659  0C4C  1003               	clrc
  5660  0C4D  0CD9               	rrf	___ftadd@f1+2,f
  5661  0C4E  0CD8               	rrf	___ftadd@f1+1,f
  5662  0C4F  0CD7               	rrf	___ftadd@f1,f
  5663  0C50  0AE2               	incf	___ftadd@exp1,f
  5664  0C51                     l7958:	
  5665  0C51  0862               	movf	___ftadd@exp1,w
  5666  0C52  0661               	xorwf	___ftadd@exp2,w
  5667  0C53  1903               	btfsc	3,2
  5668  0C54  2C72               	goto	l5541
  5669  0C55  2C4C               	goto	l7956
  5670  0C56                     l7960:	
  5671  0C56  0862               	movf	___ftadd@exp1,w
  5672  0C57  0261               	subwf	___ftadd@exp2,w
  5673  0C58  1803               	skipnc
  5674  0C59  2C72               	goto	l5541
  5675  0C5A                     l7962:	
  5676  0C5A  1003               	clrc
  5677  0C5B  0DD7               	rlf	___ftadd@f1,f
  5678  0C5C  0DD8               	rlf	___ftadd@f1+1,f
  5679  0C5D  0DD9               	rlf	___ftadd@f1+2,f
  5680  0C5E  03E2               	decf	___ftadd@exp1,f
  5681  0C5F  0861               	movf	___ftadd@exp2,w
  5682  0C60  0662               	xorwf	___ftadd@exp1,w
  5683  0C61  1903               	skipnz
  5684  0C62  2C6E               	goto	l7970
  5685  0C63  03E0               	decf	___ftadd@sign,f
  5686  0C64  0860               	movf	___ftadd@sign,w
  5687  0C65  3907               	andlw	7
  5688  0C66  1903               	btfsc	3,2
  5689  0C67  2C6E               	goto	l7970
  5690  0C68  2C5A               	goto	l7962
  5691  0C69                     l7968:	
  5692  0C69  1003               	clrc
  5693  0C6A  0CDC               	rrf	___ftadd@f2+2,f
  5694  0C6B  0CDB               	rrf	___ftadd@f2+1,f
  5695  0C6C  0CDA               	rrf	___ftadd@f2,f
  5696  0C6D  0AE1               	incf	___ftadd@exp2,f
  5697  0C6E                     l7970:	
  5698  0C6E  0862               	movf	___ftadd@exp1,w
  5699  0C6F  0661               	xorwf	___ftadd@exp2,w
  5700  0C70  1D03               	skipz
  5701  0C71  2C69               	goto	l7968
  5702  0C72                     l5541:	
  5703  0C72  1FE0               	btfss	___ftadd@sign,7
  5704  0C73  2C7D               	goto	l7976
  5705  0C74  30FF               	movlw	255
  5706  0C75  06D7               	xorwf	___ftadd@f1,f
  5707  0C76  06D8               	xorwf	___ftadd@f1+1,f
  5708  0C77  06D9               	xorwf	___ftadd@f1+2,f
  5709  0C78  0AD7               	incf	___ftadd@f1,f
  5710  0C79  1903               	skipnz
  5711  0C7A  0AD8               	incf	___ftadd@f1+1,f
  5712  0C7B  1903               	skipnz
  5713  0C7C  0AD9               	incf	___ftadd@f1+2,f
  5714  0C7D                     l7976:	
  5715  0C7D  1F60               	btfss	___ftadd@sign,6
  5716  0C7E  2C88               	goto	l7982
  5717  0C7F  30FF               	movlw	255
  5718  0C80  06DA               	xorwf	___ftadd@f2,f
  5719  0C81  06DB               	xorwf	___ftadd@f2+1,f
  5720  0C82  06DC               	xorwf	___ftadd@f2+2,f
  5721  0C83  0ADA               	incf	___ftadd@f2,f
  5722  0C84  1903               	skipnz
  5723  0C85  0ADB               	incf	___ftadd@f2+1,f
  5724  0C86  1903               	skipnz
  5725  0C87  0ADC               	incf	___ftadd@f2+2,f
  5726  0C88                     l7982:	
  5727  0C88  01E0               	clrf	___ftadd@sign
  5728  0C89  0857               	movf	___ftadd@f1,w
  5729  0C8A  07DA               	addwf	___ftadd@f2,f
  5730  0C8B  0858               	movf	___ftadd@f1+1,w
  5731  0C8C  1103               	clrz
  5732  0C8D  1803               	skipnc
  5733  0C8E  0A58               	incf	___ftadd@f1+1,w
  5734  0C8F  1D03               	btfss	3,2
  5735  0C90  07DB               	addwf	___ftadd@f2+1,f
  5736  0C91  0859               	movf	___ftadd@f1+2,w
  5737  0C92  1103               	clrz
  5738  0C93  1803               	skipnc
  5739  0C94  0A59               	incf	___ftadd@f1+2,w
  5740  0C95  1D03               	btfss	3,2
  5741  0C96  07DC               	addwf	___ftadd@f2+2,f
  5742  0C97  1FDC               	btfss	___ftadd@f2+2,7
  5743  0C98  2CA4               	goto	l7994
  5744  0C99  30FF               	movlw	255
  5745  0C9A  06DA               	xorwf	___ftadd@f2,f
  5746  0C9B  06DB               	xorwf	___ftadd@f2+1,f
  5747  0C9C  06DC               	xorwf	___ftadd@f2+2,f
  5748  0C9D  0ADA               	incf	___ftadd@f2,f
  5749  0C9E  1903               	skipnz
  5750  0C9F  0ADB               	incf	___ftadd@f2+1,f
  5751  0CA0  1903               	skipnz
  5752  0CA1  0ADC               	incf	___ftadd@f2+2,f
  5753  0CA2  01E0               	clrf	___ftadd@sign
  5754  0CA3  0AE0               	incf	___ftadd@sign,f
  5755  0CA4                     l7994:	
  5756  0CA4  085A               	movf	___ftadd@f2,w
  5757  0CA5  00A0               	movwf	?___ftpack
  5758  0CA6  085B               	movf	___ftadd@f2+1,w
  5759  0CA7  00A1               	movwf	?___ftpack+1
  5760  0CA8  085C               	movf	___ftadd@f2+2,w
  5761  0CA9  00A2               	movwf	?___ftpack+2
  5762  0CAA  0862               	movf	___ftadd@exp1,w
  5763  0CAB  00A3               	movwf	?___ftpack+3
  5764  0CAC  0860               	movf	___ftadd@sign,w
  5765  0CAD  00A4               	movwf	?___ftpack+4
  5766  0CAE  120A  118A  26BB   	fcall	___ftpack
  5767  0CB1  0820               	movf	?___ftpack,w
  5768  0CB2  00D7               	movwf	?___ftadd
  5769  0CB3  0821               	movf	?___ftpack+1,w
  5770  0CB4  00D8               	movwf	?___ftadd+1
  5771  0CB5  0822               	movf	?___ftpack+2,w
  5772  0CB6  00D9               	movwf	?___ftadd+2
  5773  0CB7  0008               	return
  5774  0CB8                     __end_of___ftadd:	
  5775                           
  5776                           	psect	text744
  5777  07F0                     __ptext744:	
  5778 ;; =============== function _setCommunicationTimeOut ends ============
  5779                           
  5780                           
  5781 ;; *************** function _vInitializeADC *****************
  5782 ;; Defined at:
  5783 ;;		line 43 in file "../src/adc.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		None
  5792 ;; Tracked objects:
  5793 ;;		On entry : 17F/20
  5794 ;;		On exit  : 17F/0
  5795 ;;		Unchanged: FFE80/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5797 ;;      Params:         0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    3
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810  07F0                     _vInitializeADC:	
  5811                           
  5812                           ;adc.c: 44: (TRISBbits.TRISB5) = 1;
  5813                           
  5814                           ; Regs used in _vInitializeADC: []
  5815  07F0  1686               	bsf	6,5	;volatile
  5816                           
  5817                           ;adc.c: 46: ANSELHbits.ANS13 = 1;
  5818  07F1  1703               	bsf	3,6	;RP1=1, select bank3
  5819  07F2  1689               	bsf	9,5	;volatile
  5820                           
  5821                           ;adc.c: 48: ADCON0bits.ADCS1 = 1;
  5822  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5823  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5824  07F5  179F               	bsf	31,7	;volatile
  5825                           
  5826                           ;adc.c: 49: ADCON0bits.ADCS0 = 0;
  5827  07F6  131F               	bcf	31,6	;volatile
  5828                           
  5829                           ;adc.c: 51: ADCON1bits.ADFM = 1;
  5830  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  5831  07F8  179F               	bsf	31,7	;volatile
  5832                           
  5833                           ;adc.c: 52: ADCON1bits.VCFG1 = 0;
  5834  07F9  129F               	bcf	31,5	;volatile
  5835                           
  5836                           ;adc.c: 53: ADCON1bits.VCFG0 = 0;
  5837  07FA  121F               	bcf	31,4	;volatile
  5838                           
  5839                           ;adc.c: 54: ADCON0bits.ADON = 1;
  5840  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  5841  07FC  141F               	bsf	31,0	;volatile
  5842  07FD  0008               	return
  5843  07FE                     __end_of_vInitializeADC:	
  5844                           
  5845                           	psect	text745
  5846  0B20                     __ptext745:	
  5847 ;; =============== function _vInitializeADC ends ============
  5848                           
  5849                           
  5850 ;; *************** function _vInitializeUart *****************
  5851 ;; Defined at:
  5852 ;;		line 49 in file "../src/uart.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;		None
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  cBaudTemp       1    0        unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;		None               void
  5859 ;; Registers used:
  5860 ;;		wreg
  5861 ;; Tracked objects:
  5862 ;;		On entry : 17F/20
  5863 ;;		On exit  : 17F/20
  5864 ;;		Unchanged: FFE80/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5866 ;;      Params:         0       0       0       0       0
  5867 ;;      Locals:         0       1       0       0       0
  5868 ;;      Temps:          0       0       0       0       0
  5869 ;;      Totals:         0       1       0       0       0
  5870 ;;Total ram usage:        1 bytes
  5871 ;; Hardware stack levels used:    1
  5872 ;; Hardware stack levels required when called:    3
  5873 ;; This function calls:
  5874 ;;		Nothing
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879  0B20                     _vInitializeUart:	
  5880                           
  5881                           ;uart.c: 54: (TRISCbits.TRISC6) = 1;
  5882                           
  5883                           ; Regs used in _vInitializeUart: [wreg]
  5884  0B20  1707               	bsf	7,6	;volatile
  5885                           
  5886                           ;uart.c: 55: (TRISCbits.TRISC7) = 1;
  5887  0B21  1787               	bsf	7,7	;volatile
  5888                           
  5889                           ;uart.c: 64: {
  5890                           ;uart.c: 65: BRGH = 0;
  5891                           
  5892                           ;uart.c: 63: else if( cBaudTemp == ( 2 ) )
  5893  0B22  1118               	bcf	24,2
  5894                           
  5895                           ;uart.c: 66: BRG16 = 1;
  5896  0B23  1703               	bsf	3,6	;RP1=1, select bank3
  5897  0B24  3033               	movlw	51
  5898  0B25  1587               	bsf	7,3
  5899                           
  5900                           ;uart.c: 67: SPBRG = 51;
  5901  0B26  1303               	bcf	3,6	;RP1=0, select bank1
  5902  0B27  0099               	movwf	25	;volatile
  5903                           
  5904                           ;uart.c: 80: }
  5905                           ;uart.c: 82: SYNC = 0;
  5906                           
  5907                           ;uart.c: 68: }
  5908  0B28  1218               	bcf	24,4
  5909                           
  5910                           ;uart.c: 83: SPEN = 1;
  5911  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  5912  0B2A  1798               	bsf	24,7
  5913                           
  5914                           ;uart.c: 84: CREN = 1;
  5915  0B2B  1618               	bsf	24,4
  5916                           
  5917                           ;uart.c: 85: TXEN = 1;
  5918  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  5919  0B2D  1698               	bsf	24,5
  5920                           
  5921                           ;uart.c: 86: TX9 = 0;
  5922  0B2E  1318               	bcf	24,6
  5923                           
  5924                           ;uart.c: 87: RX9 = 0;
  5925  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  5926  0B30  1318               	bcf	24,6
  5927                           
  5928                           ;uart.c: 88: ADDEN = 0;
  5929  0B31  1198               	bcf	24,3
  5930                           
  5931                           ;uart.c: 89: RCIE = 1;
  5932  0B32  1683               	bsf	3,5	;RP0=1, select bank1
  5933  0B33  168C               	bsf	12,5
  5934                           
  5935                           ;uart.c: 90: TXIE = 0;
  5936  0B34  120C               	bcf	12,4
  5937  0B35  0008               	return
  5938  0B36                     __end_of_vInitializeUart:	
  5939                           
  5940                           	psect	text746
  5941  0B58                     __ptext746:	
  5942 ;; =============== function _vInitializeUart ends ============
  5943                           
  5944                           
  5945 ;; *************** function _vInitializeBoard *****************
  5946 ;; Defined at:
  5947 ;;		line 342 in file "../src/main.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;		None               void
  5954 ;; Registers used:
  5955 ;;		wreg, status,2
  5956 ;; Tracked objects:
  5957 ;;		On entry : 17F/0
  5958 ;;		On exit  : 17F/20
  5959 ;;		Unchanged: FFE80/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5961 ;;      Params:         0       0       0       0       0
  5962 ;;      Locals:         0       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0
  5964 ;;      Totals:         0       0       0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    3
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_main
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974  0B58                     _vInitializeBoard:	
  5975                           
  5976                           ;main.c: 343: PORTA = 0;
  5977                           
  5978                           ; Regs used in _vInitializeBoard: [wreg+status,2]
  5979  0B58  0185               	clrf	5	;volatile
  5980                           
  5981                           ;main.c: 344: PORTB = 0;
  5982  0B59  0186               	clrf	6	;volatile
  5983                           
  5984                           ;main.c: 345: PORTC = 0;
  5985  0B5A  0187               	clrf	7	;volatile
  5986                           
  5987                           ;main.c: 346: PORTD = 0;
  5988  0B5B  0188               	clrf	8	;volatile
  5989                           
  5990                           ;main.c: 347: PORTE = 0;
  5991  0B5C  0189               	clrf	9	;volatile
  5992                           
  5993                           ;main.c: 349: OSCCON = 0b01110101;
  5994  0B5D  3075               	movlw	117
  5995  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  5996  0B5F  008F               	movwf	15	;volatile
  5997                           
  5998                           ;main.c: 351: CM1CON0 = 0;
  5999  0B60  1283               	bcf	3,5	;RP0=0, select bank2
  6000  0B61  1703               	bsf	3,6	;RP1=1, select bank2
  6001  0B62  0187               	clrf	7	;volatile
  6002                           
  6003                           ;main.c: 352: CM2CON0 = 0;
  6004  0B63  0188               	clrf	8	;volatile
  6005  0B64  3016               	movlw	22
  6006                           
  6007                           ;main.c: 353: C1ON = 0;
  6008  0B65  1387               	bcf	7,7
  6009                           
  6010                           ;main.c: 354: C2ON = 0;
  6011  0B66  1388               	bcf	8,7
  6012                           
  6013                           ;main.c: 356: WDTCON = 0b00010110;
  6014  0B67  0085               	movwf	5	;volatile
  6015                           
  6016                           ;main.c: 357: OPTION_REG = 0b10000111;
  6017  0B68  3087               	movlw	135
  6018  0B69  1683               	bsf	3,5	;RP0=1, select bank1
  6019  0B6A  1303               	bcf	3,6	;RP1=0, select bank1
  6020  0B6B  0081               	movwf	1	;volatile
  6021                           
  6022                           ;main.c: 358: INTCON = 0;
  6023  0B6C  018B               	clrf	11	;volatile
  6024                           
  6025                           ;main.c: 359: PIE1 = 0;
  6026  0B6D  018C               	clrf	12	;volatile
  6027                           
  6028                           ;main.c: 360: PIE2 = 0;
  6029  0B6E  018D               	clrf	13	;volatile
  6030                           
  6031                           ;main.c: 362: ANSELH = 0;
  6032  0B6F  1703               	bsf	3,6	;RP1=1, select bank3
  6033  0B70  0189               	clrf	9	;volatile
  6034                           
  6035                           ;main.c: 363: ANSEL = 0;
  6036  0B71  0188               	clrf	8	;volatile
  6037                           
  6038                           ;main.c: 364: WPUB = 0;
  6039  0B72  1303               	bcf	3,6	;RP1=0, select bank1
  6040  0B73  0195               	clrf	21	;volatile
  6041                           
  6042                           ;main.c: 366: T0IF = 0;
  6043  0B74  110B               	bcf	11,2
  6044                           
  6045                           ;main.c: 367: T0IE = 1;
  6046  0B75  168B               	bsf	11,5
  6047                           
  6048                           ;main.c: 369: TRISA = 0b00000000;
  6049  0B76  0185               	clrf	5	;volatile
  6050                           
  6051                           ;main.c: 370: TRISB = 0b00110111;
  6052  0B77  3037               	movlw	55
  6053  0B78  0086               	movwf	6	;volatile
  6054                           
  6055                           ;main.c: 371: TRISC = 0b11000000;
  6056  0B79  30C0               	movlw	192
  6057  0B7A  0087               	movwf	7	;volatile
  6058                           
  6059                           ;main.c: 372: TRISD = 0b00000000;
  6060  0B7B  0188               	clrf	8	;volatile
  6061                           
  6062                           ;main.c: 373: TRISE = 0b00000000;
  6063  0B7C  0189               	clrf	9	;volatile
  6064                           
  6065                           ;main.c: 374: (TRISCbits.TRISC3) = 0;
  6066  0B7D  1187               	bcf	7,3	;volatile
  6067                           
  6068                           ;main.c: 375: (PORTCbits.RC3) = 0;
  6069  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0B7F  1187               	bcf	7,3	;volatile
  6071                           
  6072                           ;main.c: 377: PORTA = 0;
  6073  0B80  0185               	clrf	5	;volatile
  6074                           
  6075                           ;main.c: 378: PORTB = 0;
  6076  0B81  0186               	clrf	6	;volatile
  6077                           
  6078                           ;main.c: 379: PORTC = 0;
  6079  0B82  0187               	clrf	7	;volatile
  6080                           
  6081                           ;main.c: 380: PORTD = 0;
  6082  0B83  0188               	clrf	8	;volatile
  6083                           
  6084                           ;main.c: 381: PORTE = 0;
  6085  0B84  0189               	clrf	9	;volatile
  6086                           
  6087                           ;main.c: 383: tim10Hz = 5;
  6088  0B85  3005               	movlw	5
  6089  0B86  1683               	bsf	3,5	;RP0=1, select bank1
  6090  0B87  00CC               	movwf	_tim10Hz^(0+128)	;volatile
  6091                           
  6092                           ;main.c: 384: tim2Hz = 5;
  6093  0B88  00CE               	movwf	_tim2Hz^(0+128)	;volatile
  6094                           
  6095                           ;main.c: 385: tim1sec = 2;
  6096  0B89  3002               	movlw	2
  6097  0B8A  00CD               	movwf	_tim1sec^(0+128)	;volatile
  6098  0B8B  0008               	return
  6099  0B8C                     __end_of_vInitializeBoard:	
  6100                           
  6101                           	psect	text747
  6102  0CB8                     __ptext747:	
  6103 ;; =============== function _vInitializeBoard ends ============
  6104                           
  6105                           
  6106 ;; *************** function _erdem *****************
  6107 ;; Defined at:
  6108 ;;		line 170 in file "../src/main.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  temp            1    7[COMMON] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;		None               void
  6115 ;; Registers used:
  6116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 40/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6122 ;;      Params:         0       0       0       0       0
  6123 ;;      Locals:         1       0       0       0       0
  6124 ;;      Temps:          3       0       0       0       0
  6125 ;;      Totals:         4       0       0       0       0
  6126 ;;Total ram usage:        4 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    2
  6129 ;; This function calls:
  6130 ;;		_restartUSR_K2
  6131 ;;		_vCheckError
  6132 ;;		_vAddToUartReceiveBuffer
  6133 ;;		_cGetFromTxBuffer
  6134 ;; This function is called by:
  6135 ;;		Interrupt level 1
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138  0CB8                     _erdem:	
  6139                           
  6140                           ;main.c: 171: unsigned char temp;
  6141                           ;main.c: 174: if (T0IE && T0IF) {
  6142  0CB8  1A8B               	btfsc	11,5
  6143  0CB9  1D0B               	btfss	11,2
  6144  0CBA  2D0A               	goto	i1l1131
  6145                           
  6146                           ;main.c: 175: TMR0 = 190;
  6147  0CBB  30BE               	movlw	190
  6148  0CBC  1283               	bcf	3,5	;RP0=0, select bank0
  6149  0CBD  1303               	bcf	3,6	;RP1=0, select bank0
  6150  0CBE  0081               	movwf	1	;volatile
  6151                           
  6152                           ;main.c: 177: if (--tim10Hz == 0)
  6153  0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  6154  0CC0  0BCC               	decfsz	_tim10Hz^(0+128),f	;volatile
  6155  0CC1  2D08               	goto	i1l7524
  6156                           
  6157                           ;main.c: 178: {
  6158                           ;main.c: 179: tim10Hz = 12;
  6159  0CC2  300C               	movlw	12
  6160  0CC3  00CC               	movwf	_tim10Hz^(0+128)	;volatile
  6161                           
  6162                           ;main.c: 181: if ((--RELAY_1_Timer == 0) && RELAY_1_Timer_En) {
  6163  0CC4  0BF9               	decfsz	_RELAY_1_Timer,f	;volatile
  6164  0CC5  2CCB               	goto	i1l1133
  6165  0CC6  1C78               	btfss	_RELAY_1_Timer_En/(0+8),_RELAY_1_Timer_En& (0+7)
  6166  0CC7  2CCB               	goto	i1l1133
  6167                           
  6168                           ;main.c: 182: (PORTDbits.RD1) = 0;
  6169  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0CC9  1088               	bcf	8,1	;volatile
  6171                           
  6172                           ;main.c: 183: RELAY_1_Timer_En = 0;
  6173  0CCA  1078               	bcf	_RELAY_1_Timer_En/(0+8),_RELAY_1_Timer_En& (0+7)
  6174  0CCB                     i1l1133:	
  6175                           
  6176                           ;main.c: 184: }
  6177                           ;main.c: 185: if ((--RELAY_2_Timer == 0) && RELAY_2_Timer_En) {
  6178  0CCB  0BFA               	decfsz	_RELAY_2_Timer,f	;volatile
  6179  0CCC  2CD2               	goto	i1l1134
  6180  0CCD  1CF8               	btfss	_RELAY_2_Timer_En/(0+8),_RELAY_2_Timer_En& (0+7)
  6181  0CCE  2CD2               	goto	i1l1134
  6182                           
  6183                           ;main.c: 186: (PORTDbits.RD2) = 0;
  6184  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  6185  0CD0  1108               	bcf	8,2	;volatile
  6186                           
  6187                           ;main.c: 187: RELAY_2_Timer_En = 0;
  6188  0CD1  10F8               	bcf	_RELAY_2_Timer_En/(0+8),_RELAY_2_Timer_En& (0+7)
  6189  0CD2                     i1l1134:	
  6190                           
  6191                           ;main.c: 188: }
  6192                           ;main.c: 189: if ((--RELAY_3_Timer == 0) && RELAY_3_Timer_En) {
  6193  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  6194  0CD3  0BEF               	decfsz	_RELAY_3_Timer,f	;volatile
  6195  0CD4  2CD9               	goto	i1l1135
  6196  0CD5  1D78               	btfss	_RELAY_3_Timer_En/(0+8),_RELAY_3_Timer_En& (0+7)
  6197  0CD6  2CD9               	goto	i1l1135
  6198                           
  6199                           ;main.c: 190: (PORTDbits.RD3) = 0;
  6200  0CD7  1188               	bcf	8,3	;volatile
  6201                           
  6202                           ;main.c: 191: RELAY_3_Timer_En = 0;
  6203  0CD8  1178               	bcf	_RELAY_3_Timer_En/(0+8),_RELAY_3_Timer_En& (0+7)
  6204  0CD9                     i1l1135:	
  6205                           
  6206                           ;main.c: 192: }
  6207                           ;main.c: 193: if ((--RELAY_4_Timer == 0) && RELAY_4_Timer_En) {
  6208  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  6209  0CDA  0BB0               	decfsz	_RELAY_4_Timer^(0+128),f	;volatile
  6210  0CDB  2CE1               	goto	i1l1136
  6211  0CDC  1DF8               	btfss	_RELAY_4_Timer_En/(0+8),_RELAY_4_Timer_En& (0+7)
  6212  0CDD  2CE1               	goto	i1l1136
  6213                           
  6214                           ;main.c: 194: (PORTCbits.RC4) = 0;
  6215  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  6216  0CDF  1207               	bcf	7,4	;volatile
  6217                           
  6218                           ;main.c: 195: RELAY_4_Timer_En = 0;
  6219  0CE0  11F8               	bcf	_RELAY_4_Timer_En/(0+8),_RELAY_4_Timer_En& (0+7)
  6220  0CE1                     i1l1136:	
  6221                           
  6222                           ;main.c: 196: }
  6223                           ;main.c: 197: if ((--RELAY_5_Timer == 0) && RELAY_5_Timer_En) {
  6224  0CE1  1683               	bsf	3,5	;RP0=1, select bank1
  6225  0CE2  0BB1               	decfsz	_RELAY_5_Timer^(0+128),f	;volatile
  6226  0CE3  2CE9               	goto	i1l7506
  6227  0CE4  1E78               	btfss	_RELAY_5_Timer_En/(0+8),_RELAY_5_Timer_En& (0+7)
  6228  0CE5  2CE9               	goto	i1l7506
  6229                           
  6230                           ;main.c: 198: (PORTCbits.RC5) = 0;
  6231  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0CE7  1287               	bcf	7,5	;volatile
  6233                           
  6234                           ;main.c: 199: RELAY_5_Timer_En = 0;
  6235  0CE8  1278               	bcf	_RELAY_5_Timer_En/(0+8),_RELAY_5_Timer_En& (0+7)
  6236  0CE9                     i1l7506:	
  6237                           
  6238                           ;main.c: 200: }
  6239                           ;main.c: 201: if ((--communicationControlTimer == 0) && communicationControlTimer_En) {
  6240  0CE9  3001               	movlw	1
  6241  0CEA  1683               	bsf	3,5	;RP0=1, select bank1
  6242  0CEB  02AA               	subwf	_communicationControlTimer^(0+128),f	;volatile
  6243  0CEC  3000               	movlw	0
  6244  0CED  1C03               	skipc
  6245  0CEE  03AB               	decf	(_communicationControlTimer+1)^(0+128),f	;volatile
  6246  0CEF  02AB               	subwf	(_communicationControlTimer+1)^(0+128),f	;volatile
  6247  0CF0  082B               	movf	(_communicationControlTimer+1)^(0+128),w	;volatile
  6248  0CF1  042A               	iorwf	_communicationControlTimer^(0+128),w	;volatile
  6249  0CF2  1903               	btfsc	3,2
  6250  0CF3  1EF8               	btfss	_communicationControlTimer_En/(0+8),_communicationControlTimer_En& (0+7)
  6251  0CF4  2CFC               	goto	i1l7514
  6252                           
  6253                           ;main.c: 202: restartUSR_K2();
  6254  0CF5  2564  120A  158A   	fcall	_restartUSR_K2
  6255                           
  6256                           ;main.c: 203: communicationControlTimer = 3000;
  6257  0CF8  30B8               	movlw	184
  6258  0CF9  00AA               	movwf	_communicationControlTimer^(0+128)	;volatile
  6259  0CFA  300B               	movlw	11
  6260  0CFB  00AB               	movwf	(_communicationControlTimer^(0+128)+1)	;volatile
  6261  0CFC                     i1l7514:	
  6262                           
  6263                           ;main.c: 204: }
  6264                           ;main.c: 206: if (--tim2Hz == 0)
  6265  0CFC  0BCE               	decfsz	_tim2Hz^(0+128),f	;volatile
  6266  0CFD  2D08               	goto	i1l7524
  6267                           
  6268                           ;main.c: 207: {
  6269                           ;main.c: 208: tim2Hz = 5;
  6270  0CFE  3005               	movlw	5
  6271  0CFF  00CE               	movwf	_tim2Hz^(0+128)	;volatile
  6272                           
  6273                           ;main.c: 209: if (--tim1sec == 0)
  6274  0D00  0BCD               	decfsz	_tim1sec^(0+128),f	;volatile
  6275  0D01  2D08               	goto	i1l7524
  6276                           
  6277                           ;main.c: 210: {
  6278                           ;main.c: 211: tim1sec = 2;
  6279  0D02  3002               	movlw	2
  6280  0D03  00CD               	movwf	_tim1sec^(0+128)	;volatile
  6281                           
  6282                           ;main.c: 212: (PORTDbits.RD0) ^= 1;
  6283  0D04  3001               	movlw	1
  6284  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  6285  0D06  0688               	xorwf	8,f	;volatile
  6286                           
  6287                           ;main.c: 213: timeoutFlag = 1;
  6288  0D07  1778               	bsf	_timeoutFlag/(0+8),_timeoutFlag& (0+7)
  6289  0D08                     i1l7524:	
  6290                           
  6291                           ;main.c: 215: }
  6292                           ;main.c: 216: }
  6293                           ;main.c: 217: }
  6294                           ;main.c: 219: T0IF = 0;
  6295  0D08  110B               	bcf	11,2
  6296  0D09  2D37               	goto	i1l1141
  6297  0D0A                     i1l1131:	
  6298                           
  6299                           ;main.c: 221: }
  6300                           ;main.c: 223: if (RCIE && RCIF) {
  6301  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  6302  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  6303  0D0C  1E8C               	btfss	12,5
  6304  0D0D  2D23               	goto	i1l1142
  6305  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  6306  0D0F  1E8C               	btfss	12,5
  6307  0D10  2D23               	goto	i1l1142
  6308                           
  6309                           ;main.c: 224: if (OERR) {
  6310  0D11  1C98               	btfss	24,1
  6311  0D12  2D15               	goto	i1l1143
  6312                           
  6313                           ;main.c: 225: CREN = 0;
  6314  0D13  1218               	bcf	24,4
  6315                           
  6316                           ;main.c: 226: CREN = 1;
  6317  0D14  1618               	bsf	24,4
  6318  0D15                     i1l1143:	
  6319                           
  6320                           ;main.c: 227: }
  6321                           ;main.c: 228: if (FERR) {
  6322  0D15  1918               	btfsc	24,2
  6323  0D16  081A               	movf	26,w	;volatile
  6324  0D17                     i1l7538:	
  6325  0D17  1A8C               	btfsc	12,5
  6326  0D18  2D1D               	goto	i1l7540
  6327                           
  6328                           ;main.c: 232: vCheckError();
  6329  0D19  2540  120A  158A   	fcall	_vCheckError
  6330  0D1C  2D17               	goto	i1l7538
  6331  0D1D                     i1l7540:	
  6332                           
  6333                           ;main.c: 233: }
  6334                           ;main.c: 235: temp = RCREG;
  6335  0D1D  081A               	movf	26,w	;volatile
  6336  0D1E  00F7               	movwf	erdem@temp
  6337                           
  6338                           ;main.c: 236: vAddToUartReceiveBuffer(temp);
  6339  0D1F  2549  120A  158A   	fcall	_vAddToUartReceiveBuffer
  6340  0D22  2D37               	goto	i1l1141
  6341  0D23                     i1l1142:	
  6342                           
  6343                           ;main.c: 238: }
  6344                           ;main.c: 240: if (TXIE && TXIF) {
  6345  0D23  1683               	bsf	3,5	;RP0=1, select bank1
  6346  0D24  1E0C               	btfss	12,4
  6347  0D25  2D37               	goto	i1l1141
  6348  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0D27  1E0C               	btfss	12,4
  6350  0D28  2D37               	goto	i1l1141
  6351                           
  6352                           ;main.c: 241: if (uartTransmitBufferR != uartTransmitBufferW) {
  6353  0D29  087B               	movf	_uartTransmitBufferR,w	;volatile
  6354  0D2A  067C               	xorwf	_uartTransmitBufferW,w	;volatile
  6355  0D2B  1903               	skipnz
  6356  0D2C  2D33               	goto	i1l1149
  6357                           
  6358                           ;main.c: 242: temp = cGetFromTxBuffer();
  6359  0D2D  2557  120A  158A   	fcall	_cGetFromTxBuffer
  6360  0D30  00F7               	movwf	erdem@temp
  6361                           
  6362                           ;main.c: 243: TXREG = temp;
  6363  0D31  0099               	movwf	25	;volatile
  6364                           
  6365                           ;main.c: 244: } else {
  6366  0D32  2D37               	goto	i1l1141
  6367  0D33                     i1l1149:	
  6368                           
  6369                           ;main.c: 245: TXIE = 0;
  6370  0D33  1683               	bsf	3,5	;RP0=1, select bank1
  6371  0D34  120C               	bcf	12,4
  6372                           
  6373                           ;main.c: 246: TXIF = 0;
  6374  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0D36  120C               	bcf	12,4
  6376  0D37                     i1l1141:	
  6377  0D37  0876               	movf	??_erdem+2,w
  6378  0D38  008A               	movwf	10
  6379  0D39  0875               	movf	??_erdem+1,w
  6380  0D3A  0084               	movwf	4
  6381  0D3B  0E74               	swapf	??_erdem^(0+-128),w
  6382  0D3C  0083               	movwf	3
  6383  0D3D  0EFE               	swapf	126,f
  6384  0D3E  0E7E               	swapf	126,w
  6385  0D3F  0009               	retfie
  6386  0D40                     __end_of_erdem:	
  6387  0D40                     __ptext752:	
  6388 ;; =============== function _vAddToUartReceiveBuffer ends ============
  6389                           
  6390                           
  6391 ;; *************** function _vCheckError *****************
  6392 ;; Defined at:
  6393 ;;		line 105 in file "../src/uart.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;		None
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  a               1    0        unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 60/0
  6405 ;;		Unchanged: FFF9F/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         0       0       0       0       0
  6408 ;;      Locals:         0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0
  6410 ;;      Totals:         0       0       0       0       0
  6411 ;;Total ram usage:        0 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_erdem
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419  0D40                     _vCheckError:	
  6420                           
  6421                           ;uart.c: 107: if ( OERR )
  6422                           
  6423                           ; Regs used in _vCheckError: [wreg]
  6424  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  6425  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  6426  0D42  1C98               	btfss	24,1
  6427  0D43  2D46               	goto	i1l2265
  6428                           
  6429                           ;uart.c: 108: {
  6430                           ;uart.c: 109: CREN = 0;
  6431  0D44  1218               	bcf	24,4
  6432                           
  6433                           ;uart.c: 110: CREN = 1;
  6434  0D45  1618               	bsf	24,4
  6435  0D46                     i1l2265:	
  6436                           
  6437                           ;uart.c: 111: }
  6438                           ;uart.c: 112: if( FERR )
  6439  0D46  1918               	btfsc	24,2
  6440                           
  6441                           ;uart.c: 113: {
  6442                           ;uart.c: 114: a = RCREG;
  6443  0D47  081A               	movf	26,w	;volatile
  6444  0D48  0008               	return
  6445  0D49                     __end_of_vCheckError:	
  6446  0D49                     __ptext751:	
  6447 ;; =============== function _cGetFromTxBuffer ends ============
  6448                           
  6449                           
  6450 ;; *************** function _vAddToUartReceiveBuffer *****************
  6451 ;; Defined at:
  6452 ;;		line 92 in file "../src/StringSerialProtocol.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  data            1    wreg     unsigned char 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;  data            1    0[COMMON] unsigned char 
  6457 ;; Return value:  Size  Location     Type
  6458 ;;		None               void
  6459 ;; Registers used:
  6460 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 60/0
  6463 ;;		On exit  : 160/120
  6464 ;;		Unchanged: FFE9F/0
  6465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6466 ;;      Params:         0       0       0       0       0
  6467 ;;      Locals:         1       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0
  6469 ;;      Totals:         1       0       0       0       0
  6470 ;;Total ram usage:        1 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_erdem
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478  0D49                     _vAddToUartReceiveBuffer:	
  6479                           
  6480                           ; Regs used in _vAddToUartReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  6481                           ;vAddToUartReceiveBuffer@data stored from wreg
  6482  0D49  00F0               	movwf	vAddToUartReceiveBuffer@data
  6483                           
  6484                           ;StringSerialProtocol.c: 93: uartReceiveBuffer[ uartReceiveBufferW ] = data;
  6485  0D4A  1683               	bsf	3,5	;RP0=1, select bank1
  6486  0D4B  0839               	movf	_uartReceiveBufferW^(0+128),w
  6487  0D4C  3E90               	addlw	_uartReceiveBuffer& (0+255)
  6488  0D4D  0084               	movwf	4
  6489  0D4E  0870               	movf	vAddToUartReceiveBuffer@data,w
  6490  0D4F  1783               	bsf	3,7	;select IRP bank3
  6491  0D50  0080               	movwf	0
  6492                           
  6493                           ;StringSerialProtocol.c: 94: uartReceiveBufferW++;
  6494  0D51  0AB9               	incf	_uartReceiveBufferW^(0+128),f	;volatile
  6495                           
  6496                           ;StringSerialProtocol.c: 95: if (uartReceiveBufferW == 60) {
  6497  0D52  0839               	movf	_uartReceiveBufferW^(0+128),w	;volatile
  6498  0D53  3A3C               	xorlw	60
  6499  0D54  1903               	btfsc	3,2
  6500                           
  6501                           ;StringSerialProtocol.c: 96: uartReceiveBufferW = 0;
  6502  0D55  01B9               	clrf	_uartReceiveBufferW^(0+128)	;volatile
  6503  0D56  0008               	return
  6504  0D57                     __end_of_vAddToUartReceiveBuffer:	
  6505  0D57                     __ptext750:	
  6506 ;; =============== function i1_setCommunicationTimeOut ends ============
  6507                           
  6508                           
  6509 ;; *************** function _cGetFromTxBuffer *****************
  6510 ;; Defined at:
  6511 ;;		line 130 in file "../src/StringSerialProtocol.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  value           1    0[COMMON] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      unsigned char 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6520 ;; Tracked objects:
  6521 ;;		On entry : 60/0
  6522 ;;		On exit  : 160/100
  6523 ;;		Unchanged: FFE9F/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6525 ;;      Params:         0       0       0       0       0
  6526 ;;      Locals:         1       0       0       0       0
  6527 ;;      Temps:          0       0       0       0       0
  6528 ;;      Totals:         1       0       0       0       0
  6529 ;;Total ram usage:        1 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_erdem
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537  0D57                     _cGetFromTxBuffer:	
  6538                           
  6539                           ;StringSerialProtocol.c: 131: unsigned char value;
  6540                           ;StringSerialProtocol.c: 133: value = uartTransmitBuffer[uartTransmitBufferR];
  6541                           
  6542                           ; Regs used in _cGetFromTxBuffer: [wreg-fsr0h+status,2+status,0]
  6543  0D57  087B               	movf	_uartTransmitBufferR,w
  6544  0D58  3E10               	addlw	_uartTransmitBuffer& (0+255)
  6545  0D59  0084               	movwf	4
  6546  0D5A  1783               	bsf	3,7	;select IRP bank2
  6547  0D5B  0800               	movf	0,w
  6548  0D5C  00F0               	movwf	cGetFromTxBuffer@value
  6549                           
  6550                           ;StringSerialProtocol.c: 134: uartTransmitBufferR++;
  6551  0D5D  0AFB               	incf	_uartTransmitBufferR,f	;volatile
  6552                           
  6553                           ;StringSerialProtocol.c: 135: if (uartTransmitBufferR == 60) {
  6554  0D5E  087B               	movf	_uartTransmitBufferR,w	;volatile
  6555  0D5F  3A3C               	xorlw	60
  6556  0D60  1903               	btfsc	3,2
  6557                           
  6558                           ;StringSerialProtocol.c: 136: uartTransmitBufferR = 0;
  6559  0D61  01FB               	clrf	_uartTransmitBufferR	;volatile
  6560                           
  6561                           ;StringSerialProtocol.c: 137: }
  6562                           ;StringSerialProtocol.c: 138: return value;
  6563  0D62  0870               	movf	cGetFromTxBuffer@value,w
  6564  0D63  0008               	return
  6565  0D64                     __end_of_cGetFromTxBuffer:	
  6566  0D64                     __ptext748:	
  6567 ;; =============== function _erdem ends ============
  6568                           
  6569                           
  6570 ;; *************** function _restartUSR_K2 *****************
  6571 ;; Defined at:
  6572 ;;		line 393 in file "../src/main.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;		None
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;		None               void
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0, pclath, cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 60/20
  6583 ;;		On exit  : 60/20
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6586 ;;      Params:         0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0
  6588 ;;      Temps:          2       0       0       0       0
  6589 ;;      Totals:         2       0       0       0       0
  6590 ;;Total ram usage:        2 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    1
  6593 ;; This function calls:
  6594 ;;		i1_setCommunicationTimeOut
  6595 ;; This function is called by:
  6596 ;;		_erdem
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599  0D64                     _restartUSR_K2:	
  6600                           
  6601                           ;main.c: 394: (PORTCbits.RC3) = 1;
  6602                           
  6603                           ; Regs used in _restartUSR_K2: [wreg+status,2+status,0+pclath+cstack]
  6604  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  6605  0D65  1587               	bsf	7,3	;volatile
  6606                           
  6607                           ;main.c: 398: _delay((unsigned long)((40)*(8000000/4000.0)));
  6608  0D66  3068               	movlw	104
  6609  0D67  00F3               	movwf	??_restartUSR_K2+1
  6610  0D68  30E4               	movlw	228
  6611  0D69  00F2               	movwf	??_restartUSR_K2
  6612  0D6A                     u319_27:	
  6613  0D6A  0BF2               	decfsz	??_restartUSR_K2,f
  6614  0D6B  2D6A               	goto	u319_27
  6615  0D6C  0BF3               	decfsz	??_restartUSR_K2+1,f
  6616  0D6D  2D6A               	goto	u319_27
  6617  0D6E  0064               	clrwdt
  6618                           
  6619                           ;main.c: 399: _delay((unsigned long)((40)*(8000000/4000.0)));
  6620  0D6F  3068               	movlw	104
  6621  0D70  00F3               	movwf	??_restartUSR_K2+1
  6622  0D71  30E4               	movlw	228
  6623  0D72  00F2               	movwf	??_restartUSR_K2
  6624  0D73                     u320_27:	
  6625  0D73  0BF2               	decfsz	??_restartUSR_K2,f
  6626  0D74  2D73               	goto	u320_27
  6627  0D75  0BF3               	decfsz	??_restartUSR_K2+1,f
  6628  0D76  2D73               	goto	u320_27
  6629  0D77  0064               	clrwdt
  6630                           
  6631                           ;main.c: 400: _delay((unsigned long)((40)*(8000000/4000.0)));
  6632  0D78  3068               	movlw	104
  6633  0D79  00F3               	movwf	??_restartUSR_K2+1
  6634  0D7A  30E4               	movlw	228
  6635  0D7B  00F2               	movwf	??_restartUSR_K2
  6636  0D7C                     u321_27:	
  6637  0D7C  0BF2               	decfsz	??_restartUSR_K2,f
  6638  0D7D  2D7C               	goto	u321_27
  6639  0D7E  0BF3               	decfsz	??_restartUSR_K2+1,f
  6640  0D7F  2D7C               	goto	u321_27
  6641  0D80  0064               	clrwdt
  6642                           
  6643                           ;main.c: 401: _delay((unsigned long)((40)*(8000000/4000.0)));
  6644  0D81  3068               	movlw	104
  6645  0D82  00F3               	movwf	??_restartUSR_K2+1
  6646  0D83  30E4               	movlw	228
  6647  0D84  00F2               	movwf	??_restartUSR_K2
  6648  0D85                     u322_27:	
  6649  0D85  0BF2               	decfsz	??_restartUSR_K2,f
  6650  0D86  2D85               	goto	u322_27
  6651  0D87  0BF3               	decfsz	??_restartUSR_K2+1,f
  6652  0D88  2D85               	goto	u322_27
  6653  0D89  0064               	clrwdt
  6654                           
  6655                           ;main.c: 402: _delay((unsigned long)((40)*(8000000/4000.0)));
  6656  0D8A  3068               	movlw	104
  6657  0D8B  00F3               	movwf	??_restartUSR_K2+1
  6658  0D8C  30E4               	movlw	228
  6659  0D8D  00F2               	movwf	??_restartUSR_K2
  6660  0D8E                     u323_27:	
  6661  0D8E  0BF2               	decfsz	??_restartUSR_K2,f
  6662  0D8F  2D8E               	goto	u323_27
  6663  0D90  0BF3               	decfsz	??_restartUSR_K2+1,f
  6664  0D91  2D8E               	goto	u323_27
  6665  0D92  0064               	clrwdt
  6666                           
  6667                           ;main.c: 403: _delay((unsigned long)((40)*(8000000/4000.0)));
  6668  0D93  3068               	movlw	104
  6669  0D94  00F3               	movwf	??_restartUSR_K2+1
  6670  0D95  30E4               	movlw	228
  6671  0D96  00F2               	movwf	??_restartUSR_K2
  6672  0D97                     u324_27:	
  6673  0D97  0BF2               	decfsz	??_restartUSR_K2,f
  6674  0D98  2D97               	goto	u324_27
  6675  0D99  0BF3               	decfsz	??_restartUSR_K2+1,f
  6676  0D9A  2D97               	goto	u324_27
  6677  0D9B  0064               	clrwdt
  6678                           
  6679                           ;main.c: 404: _delay((unsigned long)((40)*(8000000/4000.0)));
  6680  0D9C  3068               	movlw	104
  6681  0D9D  00F3               	movwf	??_restartUSR_K2+1
  6682  0D9E  30E4               	movlw	228
  6683  0D9F  00F2               	movwf	??_restartUSR_K2
  6684  0DA0                     u325_27:	
  6685  0DA0  0BF2               	decfsz	??_restartUSR_K2,f
  6686  0DA1  2DA0               	goto	u325_27
  6687  0DA2  0BF3               	decfsz	??_restartUSR_K2+1,f
  6688  0DA3  2DA0               	goto	u325_27
  6689  0DA4  0064               	clrwdt
  6690                           
  6691                           ;main.c: 405: (PORTCbits.RC3) = 0;
  6692  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  6693  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  6694  0DA7  1187               	bcf	7,3	;volatile
  6695                           
  6696                           ;main.c: 410: setCommunicationTimeOut(3000);
  6697  0DA8  30B8               	movlw	184
  6698  0DA9  00F0               	movwf	?i1_setCommunicationTimeOut
  6699  0DAA  300B               	movlw	11
  6700  0DAB  00F1               	movwf	?i1_setCommunicationTimeOut+1
  6701  0DAC  25AE               	fcall	i1_setCommunicationTimeOut
  6702  0DAD  0008               	return
  6703  0DAE                     __end_of_restartUSR_K2:	
  6704  0DAE                     __ptext749:	
  6705 ;; =============== function _restartUSR_K2 ends ============
  6706                           
  6707                           
  6708 ;; *************** function i1_setCommunicationTimeOut *****************
  6709 ;; Defined at:
  6710 ;;		line 388 in file "../src/main.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  setCommunica    2    0[COMMON] unsigned int 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg
  6719 ;; Tracked objects:
  6720 ;;		On entry : 60/0
  6721 ;;		On exit  : 60/20
  6722 ;;		Unchanged: FFF9F/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         2       0       0       0       0
  6725 ;;      Locals:         0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0
  6727 ;;      Totals:         2       0       0       0       0
  6728 ;;Total ram usage:        2 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_restartUSR_K2
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736  0DAE                     i1_setCommunicationTimeOut:	
  6737                           
  6738                           ;main.c: 389: communicationControlTimer = value;
  6739                           
  6740                           ; Regs used in i1_setCommunicationTimeOut: [wreg]
  6741  0DAE  0871               	movf	i1setCommunicationTimeOut@value+1,w
  6742  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  6743  0DB0  00AB               	movwf	(_communicationControlTimer+1)^(0+128)	;volatile
  6744  0DB1  0870               	movf	i1setCommunicationTimeOut@value,w
  6745  0DB2  00AA               	movwf	_communicationControlTimer^(0+128)	;volatile
  6746                           
  6747                           ;main.c: 390: communicationControlTimer_En = 1;
  6748  0DB3  16F8               	bsf	_communicationControlTimer_En/(0+8),_communicationControlTimer_En& (0+7)
  6749  0DB4  0008               	return
  6750  0DB5                     __end_ofi1_setCommunicationTimeOut:	
  6751                           
  6752                           	psect	intentry
  6753  0004                     __pintentry:	
  6754                           ; Regs used in _erdem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6755                           
  6756  0004                     interrupt_function:	
  6757  007E                     saved_w	set	btemp
  6758  0004  00FE               	movwf	btemp
  6759  0005  0E03               	swapf	3,w
  6760  0006  00F4               	movwf	??_erdem
  6761  0007  0804               	movf	4,w
  6762  0008  00F5               	movwf	??_erdem+1
  6763  0009  080A               	movf	10,w
  6764  000A  00F6               	movwf	??_erdem+2
  6765  000B  120A  158A  2CB8   	ljmp	_erdem
  6766                           
  6767                           	psect	text753
  6768  0000                     __ptext753:	
  6769 ;; =============== function _vCheckError ends ============
  6770                           
  6771  007E                     btemp	set	126	;btemp
  6772  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jun 07 18:31:07 2018

                                          pc 0002                           ?_vResetPrintBuffer 0070  
                             ___bmul@product 0021                               _vInitializeADC 07F0  
                                         _T1 0806                                           _T2 081C  
                                         _V1 0832                                           _V2 0848  
                                         _RD 0C60                                           _WR 0C61  
                                         fsr 0004                          ___wmul@multiplicand 0022  
                           calgulateTemp@T1_ 006D                             calgulateTemp@T2_ 0069  
                           calgulateTemp@V1_ 006B                             calgulateTemp@V2_ 0067  
                        CheckCommand@command 0021                    ??_vAddToUartReceiveBuffer 0070  
                               ___ftadd@exp1 0062                                 ___ftadd@exp2 0061  
                           ??_getTemperature 0059                        __end_of_calgulateTemp 0645  
                               ___ftadd@sign 0060                                          _GIE 005F  
                                        _ISI 0863                                          _RX9 00C6  
                                        _TX9 04C6                                          _TMO 0867  
                        ??_vResetPrintBuffer 0020                              _vInitializeUart 0B20  
                                        fsr0 0004                                          indf 0000  
                               ___ftdiv@cntr 0042                                 ___ftdiv@sign 0047  
                    ??_cGetFromReceiveBuffer 0020                                         l1230 0000  
                                       l1223 063F                                         l1161 028B  
                                       l1154 025F                                         l1226 0000  
                                       l1156 0264                                         l1172 0256  
                                       l1157 0269                                         l1158 026E  
                                       l1175 0000                                         l1159 0274  
                                       l1191 0000                                         l1178 0000  
                                       l1186 0000                                         l3301 0000  
                                       l2262 0000                                         l3304 0773  
                                       _C1ON 083F                                         l3307 0000  
                                       l2276 0000                                         _C2ON 0847  
                                       l4432 012D                                         l4446 017B  
                                       l5503 0000                                         l4439 0154  
                                       l4456 0000                                         l8010 0000  
                                       l8020 0000                                         l8012 0000  
                                       l8004 0B9D                                         l8100 0000  
                                       l4477 0000                                         l5541 0C72  
                                       l8022 0000                                         l8014 0000  
                                       l8110 0000                                         l5471 0000  
                                       l5703 0000                                         l5463 0000  
                                       l7400 0000                                         l8032 0000  
                                       l8024 0000                                         l8016 0000  
                                       l8104 0000                                         l8120 031A  
                                       l5617 0000                                         l7402 0000  
                                       l7410 0000                                         l8026 0000  
                                       l8018 0000                                         l5570 0BAE  
                                       l8042 0000                                         l8106 064F  
                                       l8130 0000                                         l8122 0000  
                                       l8114 0000                                         l8210 0000  
                                       l8202 0000                                         l5483 0000  
                                       l7404 0000                                         l7420 0000  
                                       l7412 0000                                         l8036 0000  
                                       l8028 0BC1                                         l8060 0000  
                                       l8124 0000                                         l8220 0000  
                                       l8212 0000                                         l8204 0000  
                                       l8300 005B                                         l5477 0000  
                                       l5493 0000                                         l5469 0FA6  
                                       l7406 0000                                         l7422 0000  
                                       l7414 0000                                         l8038 0000  
                                       l8070 0000                                         l8062 0000  
                                       l8054 071B                                         l8150 043D  
                                       l8142 03D1                                         l8134 0000  
                                       l8222 0EE5                                         l8214 0000  
                                       l8206 0000                                         l7408 0000  
                                       l7360 0000                                         l7352 0000  
                                       l7440 0000                                         l7424 0000  
                                       l7600 0000                                         l8080 0000  
                                       l8072 072C                                         l8064 0000  
                                       l8056 0000                                         l8048 070A  
                                       l8128 0000                                         l8240 0000  
                                       l8232 0000                                         l8216 0000  
                                       l8208 0000                                         l8320 0000  
                                       l8312 0085                                         l8304 006C  
                                       l7370 0000                                         l7362 0000  
                                       l7354 0000                                         l7450 0000  
                                       l7442 0000                                         l7602 0000  
                                       l8090 0000                                         l8082 0000  
                                       l8066 0000                                         l8058 0000  
                                       l8170 054B                                         l8162 04DF  
                                       l8154 0473                                         l8146 0407  
                                       l8138 039B                                         l8242 0F29  
                                       l8234 0F0E                                         l8226 0000  
                                       l8402 0000                                         l8250 0000  
                                       l7380 0000                                         l7372 0000  
                                       l7364 0000                                         l7356 0000  
                                       l7452 0000                                         l7444 0000  
                                       l7460 0000                                         l7604 0000  
                                       l7612 027A                                         l7620 0233  
                                       l8092 0000                                         l8084 0742  
                                       l8076 0736                                         l8068 0000  
                                       l8180 0000                                         l8228 0EFE  
                                       l8420 0000                                         l8404 0000  
                                       l8332 0000                                         l8308 007B  
                                       l8260 0000                                         l8252 0000  
                                       l8500 0000                                         l5597 069A  
                                       l7390 0000                                         l7382 0000  
                                       l7374 0000                                         l7366 0000  
                                       l7358 0000                                         l7454 0000  
                                       l7446 0000                                         l7462 0000  
                                       l7606 0000                                         l7622 0239  
                                       l7614 0000                                         l7630 0000  
                                       l7702 0204                                         l7710 0222  
                                       l8094 0000                                         l8078 0000  
                                       l8174 0581                                         l8166 0515  
                                       l8158 04A9                                         l8190 0000  
                                       l8422 0000                                         l8414 0000  
                                       l8406 0000                                         l8350 0000  
                                       l8334 0000                                         l8326 0000  
                                       l8318 00C6                                         l8262 0022  
                                       l8502 0000                                         l8430 0000  
                                       l7392 0000                                         l7384 0000  
                                       l7376 0000                                         l7368 0000  
                                       l7456 0000                                         l7448 0000  
                                       l7464 0000                                         l7472 0000  
                                       l7608 0000                                         l7624 023F  
                                       l7616 0227                                         l7632 0000  
                                       l7640 0000                                         l7800 06C7  
                                       l8088 074C                                         l8184 063B  
                                       l8248 0000                                         l8416 0000  
                                       l8408 0000                                         l8360 0000  
                                       l8352 0000                                         l8336 0000  
                                       l8344 0125                                         l8328 00CE  
                                       l8272 0000                                         l8264 0000  
                                       l8256 0000                                         l8504 0000  
                                       l8440 0000                                         l8432 0000  
                                       l7394 0000                                         l7386 0000  
                                       l7378 0000                                         l7458 0000  
                                       l7466 0000                                         l7618 022D  
                                       l7634 0000                                         l7650 0000  
                                       l7722 0000                                         l7714 0000  
                                       l7730 0000                                         l7810 06E5  
                                       l7802 06CC                                         l8098 0000  
                                       l8178 05C3                                         l8194 0000  
                                       l8418 0000                                         l8362 0000  
                                       l8354 0000                                         l8338 0000  
                                       l8426 01BC                                         l8282 0043  
                                       l8274 0036                                         l8290 004E  
                                       l8506 0EAF                                         l8442 0000  
                                       l8434 0000                                         l7396 0000  
                                       l7388 0000                                         l7468 0000  
                                       l7628 0245                                         l7652 0000  
                                       l7708 0217                                         l7724 0000  
                                       l7716 02AC                                         l7740 0000  
                                       l7732 02FE                                         l7804 06D1  
                                       l7820 0000                                         l7900 0000  
                                       l8196 0000                                         l8188 0000  
                                       l8380 0000                                         l8372 0000  
                                       l8364 0000                                         l8268 002A  
                                       l8276 0038                                         l8452 0000  
                                       l8444 0000                                         l8436 0000  
                                       l8428 0000                                         l7398 0000  
                                       l7590 0000                                         l7646 028E  
                                       l7654 0000                                         l7670 0000  
                                       l7814 0000                                         l7806 06DB  
                                       l7830 0000                                         l7822 066A  
                                       l7910 0000                                         l8198 0F5E  
                                       l8382 0000                                         l8374 0000  
                                       l8358 0000                                         l8286 0000  
                                       l8470 0000                                         l8462 0E1C  
                                       l8454 0000                                         l8446 0DDA  
                                       l8438 0000                                         l7592 0000  
                                       l7648 0000                                         l7656 0000  
                                       l7680 01EB                                         l7664 0000  
                                       l7736 0306                                         l7816 0000  
                                       l7808 06E0                                         l7840 068E  
                                       l7832 0000                                         l7824 066F  
                                       l7904 0000                                         l7920 0000  
                                       l8384 0000                                         l8376 0000  
                                       l8480 0000                                         l8456 0000  
                                       l8448 0000                                         l7594 0000  
                                       l7690 01EE                                         l7682 0000  
                                       l7674 01E7                                         l7666 0000  
                                       l7738 0000                                         l7762 0000  
                                       l7746 0000                                         l7818 0000  
                                       l7850 06A4                                         l7842 0000  
                                       l7834 0000                                         l7826 0000  
                                       l7914 0000                                         l7906 0F84  
                                       l7922 0000                                         l8394 0000  
                                       l8386 0000                                         l8490 0000  
                                       l8482 0000                                         l8474 0000  
                                       l8466 0E2C                                         l8458 0E0B  
                                       l7596 0000                                         l7588 0000  
                                       l7692 0201                                         l7676 01E9  
                                       l7668 01D3                                         l7756 0FC0  
                                       l7748 0000                                         l7780 0FE8  
                                       l7772 0000                                         l7852 0000  
                                       l7844 0696                                         l7828 0000  
                                       l7916 0000                                         l7908 0000  
                                       l7940 0000                                         l7932 0C20  
                                       l7924 0000                                         l8396 0000  
                                       l8492 0000                                         l8484 0000  
                                       l8476 0000                                         l7598 0000  
                                       l7694 0000                                         l7678 01D6  
                                       l7766 0000                                         l7758 0000  
                                       l7854 06B2                                         l7870 0000  
                                       l7862 0000                                         l7918 0000  
                                       l7950 0C3D                                         l7934 0000  
                                       l8398 0000                                         l8494 0000  
                                       l8486 0000                                         l8478 0000  
                                       l7768 0FD7                                         l7792 0000  
                                       l7880 0000                                         l7872 0000  
                                       l7864 0000                                         l7952 0000  
                                       l7960 0C56                                         l7928 0C19  
                                       l8496 0000                                         l8488 0000  
                                       l7786 0000                                         l7794 0000  
                                       l7890 02F6                                         l7882 0000  
                                       l7874 0000                                         l7866 0000  
                                       l7970 0C6E                                         l7962 0C5A  
                                       l7946 0000                                         l7938 0C2F  
                                       l8498 0000                                         l7788 0FFB  
                                       l7796 06C3                                         l7884 0000  
                                       l7876 0000                                         l7868 0000  
                                       l7980 0000                                         l7964 0000  
                                       l7956 0C4C                                         l7948 0000  
                                       l7886 0000                                         l7878 0000  
                                       l7894 0000                                         l7990 0000  
                                       l7982 0C88                                         l7974 0000  
                                       l7958 0C51                                         l7896 0F6D  
                                       l7992 0000                                         l7984 0000  
                                       l7976 0C7D                                         l7968 0C69  
                                       l7898 0000                                         l7994 0CA4  
                                       l7986 0000                                         l7998 0000  
                                       _BRGH 04C2                                         _T0IE 005D  
                                       _T0IF 005A                                         _CREN 00C4  
                                       _FERR 00C2                                         u2035 0FC9  
                                       u2170 0000                                         u2075 0FEE  
                                       u3115 0E16                                         u3125 0E27  
                                       u2175 0673                                         u2505 0BCF  
                                       u3157 0E38                                         u3167 014F  
                                       _PIE1 008C                                         _PIE2 008D  
                                       u2705 051C                                         u2625 036C  
                                       u3177 0176                     ?_setCommunicationTimeOut 0020  
                                       u2715 0552                                         u2635 03A2  
                                       u3187 019D                                         u2725 0588  
                                       u2645 03D8                                         u2735 062D  
                                       u2655 040E                                         u2815 0F34  
                                       u2745 0639                                         u2665 0444  
                                       u2825 0F41                                         u2675 047A  
                                       _PEIE 005E                                         u2685 04B0  
                                       u2765 0ED6                                         u2695 04E6  
                                       u2775 0EF0                                         u2795 0F18  
                                       _RCIE 0465                                         _RCIF 0065  
                                       u2965 0098                                         u2975 00B0  
                                       _OERR 00C1                                         _TMR0 0001  
                                       _ROLE 085E                                         _SPEN 00C7  
                                       _TXIE 0464                                         _WREN 0C62  
                                       _TXEN 04C5                                         _TXIF 0064  
                                       _SYNC 04C4                                         _WPUB 0095  
                           _vInitializeBoard 0B58                                         _main 0DB5  
                               ___ftpack@arg 0020                                         _itoa 0F51  
                               ___ftpack@exp 0023                                         btemp 007E  
                                       _utoa 0F68                    __end_of_vResetPrintBuffer 0299  
                                       start 000E                            ___bmul@multiplier 0022  
                               ___ftmul@cntr 0055                       __end_of_vInitializeADC 07FE  
                               ___ftmul@sign 0056                                 ___fttol@exp1 0034  
                               ___fttol@lval 0030                                        _ADDEN 00C3  
                                      ?_main 0070                                        ?_itoa 002F  
                                      _EEADR 010D                              __end_of___ftadd 0CB8  
                                      _BRG16 0C3B                                        _CARRY 0018  
                            __end_of___ftdiv 0BF6                                        _ANSEL 0188  
                                      ?_utoa 0027                              __end_of___ftmul 0768  
                            __end_of___fttol 06BB                               vSetRelay@relay 0021  
                            __end_of___lwdiv 0FDC                              __end_of___lwmod 1000  
                             vSetRelay@value 0020                                        _RCREG 001A  
                                      _SPBRG 0099                                        _PORTA 0005  
                                      _PORTB 0006                                        _PORTC 0007  
                                      _PORTD 0008                                        _PORTE 0009  
                                      _TRISA 0085                                        _TRISB 0086  
                                      _TRISC 0087                                        _TRISD 0088  
                                      _TRISE 0089                                        _TXREG 0019  
                      __size_of_CheckCommand 0057                            ??_vSendDataToUart 0020  
                      cGetFromTxBuffer@value 0070                                ___awtoft@sign 0038  
                               ?_vPulseRelay 0023                                        _erdem 0CB8  
                              ___ftpack@sign 0024                                        _timer 00B7  
                   _vAddToUartTransmitBuffer 01BF                          _uartTransmitBufferR 007B  
                        _uartTransmitBufferW 007C                                        _state 00B5  
           vSendTemperatureToBuffer@convData 0035                               __pbitbssCOMMON 03C0  
                                      pclath 000A              __end_of_vAddToUartReceiveBuffer 0D57  
                          _uartReceiveBuffer 0190                                        utoa@c 002D  
                       __size_of_vCheckError 0009                                        utoa@v 002B  
                                      status 0003                                        wtemp0 007E  
                          read_ADC@adcResult 0024                              ?_vInitializeADC 0070  
                               __end_of_main 0EB5                                 __end_of_itoa 0F68  
                               __end_of_utoa 0FB2                      __end_of_vInitializeUart 0B36  
                               _CheckCommand 01CD                        vPulseRelay@timerValue 0023  
                vAddToUartReceiveBuffer@data 0070                                       ??_main 00CA  
                   calgulateTemp@temperature 0065                                ___fttol@sign1 002F  
                                     ??_itoa 0033                                       ??_utoa 002B  
                 ??_vSendTemperatureToBuffer 0037                            _temperatureOffset 02B8  
                                     ?_erdem 0070                                       _ADRESH 001E  
                                     _ADRESL 009E                                       _EEDATA 010C  
                                     _EECON1 018C                                       _EECON2 018D  
                           __end_of___awtoft 0660                             __end_of___ftpack 06F9  
                                     _ANSELH 0189                           ?_temperatureOffset 0026  
                                     i1l1131 0D0A                                       i1l1141 0D37  
                                     i1l1133 0CCB                                       i1l1142 0D23  
                                     i1l1134 0CD2                                       i1l1143 0D15  
                                     i1l1135 0CD9                                       i1l1136 0CE1  
                                     i1l1181 0000                                       i1l1149 0D33  
                                     i1l1178 0000                                       i1l2265 0D46  
                                     i1l4399 0000                                       i1l7502 0000  
                                     i1l7520 0000                                       i1l7512 0000  
                                     i1l7522 0000                                       i1l7514 0CFC  
                                     i1l7506 0CE9                                       i1l7540 0D1D  
                                     i1l7516 0000                                       i1l7524 0D08  
                                     i1l7542 0000                                       i1l7518 0000  
                                     i1l7560 0000                                       i1l7552 0000  
                                     i1l7480 0000                                       i1l7562 0000  
                                     i1l7570 0000                                       i1l7554 0000  
                                     i1l7538 0D17                                       i1l7490 0000  
                                     i1l7482 0000                                       i1l7474 0000  
                                     i1l7572 0000                                       i1l7580 0000  
                                     i1l7556 0000                                       i1l7484 0000  
                                     i1l7558 0000                                       i1l7494 0000  
                                     i1l7486 0000                                       i1l7568 0000  
                                     i1l7576 0000                                       i1l7578 0000  
                                     i1l7498 0000                                       i1l7860 0000  
                                     u320_27 0D73                                       _INTCON 000B  
                                     i1l7858 0000                                       u321_27 0D7C  
                                     u322_27 0D85                                       u323_27 0D8E  
                                     u324_27 0D97                                       u325_27 0DA0  
                                     u319_27 0D6A                             __end_of___lwtoft 0793  
                                     _OSCCON 008F                                       _WDTCON 0105  
                 __size_of_vResetPrintBuffer 000D                   ?i1_setCommunicationTimeOut 0070  
                        ??_temperatureOffset 0028                                       ___bmul 02A9  
                                     ___wmul 02FC                    __size_of_cGetFromTxBuffer 000D  
                                  ??___ftadd 005D                                    ??___ftdiv 003F  
                                  ??___ftmul 004E                                    ??___fttol 002C  
                                  ??___lwdiv 0024                             __end_of_read_ADC 0783  
                                  ??___lwmod 0024                                       _tim2Hz 00CE  
                                     clrloop 0B19                        ___ftmul@f3_as_product 0052  
                  __end_of_temperatureOffset 02FC                                       saved_w 007E  
                         _uartReceiveBufferR 00B8                           _uartReceiveBufferW 00B9  
                                 ___ftadd@f1 0057                                   ___ftadd@f2 005A  
                                 ___ftdiv@f1 003C                                   ___ftdiv@f2 0039  
                                 ___ftdiv@f3 0043                       calgulateTemp@milliVolt 0063  
                                 ___awtoft@c 0035            __end_ofi1_setCommunicationTimeOut 0DB5  
                        ___bmul@multiplicand 0020                                   ___ftmul@f1 0048  
                                 ___ftmul@f2 004B                                   ___fttol@f1 0028  
                             __pcstackCOMMON 0070                 _communicationControlTimer_En 03C5  
                              __end_of_erdem 0D40                             ?_vInitializeUart 0070  
                   __end_of_vInitializeBoard 0B8C                                   ___lwtoft@c 0028  
                   _currentTemperatureBuffer 00BA                                      ??_erdem 0074  
                                 _dataBuffer 00C0                                   __pbssBANK0 006F  
                                 __pbssBANK1 00A0                                   __pbssBANK2 0110  
                                 __pbssBANK3 0190                         __size_of_vPulseRelay 0030  
                         __size_of_vSetRelay 0033               __size_of_cGetFromReceiveBuffer 0010  
              __end_of_cGetFromReceiveBuffer 02A9                                _RELAY_1_Timer 0079  
                              _RELAY_2_Timer 007A                                _RELAY_3_Timer 006F  
                              _RELAY_4_Timer 00B0                                _RELAY_5_Timer 00B1  
                      __end_of_restartUSR_K2 0DAE                                   __pmaintext 0DB5  
                                    ?___bmul 0020                                      ?___wmul 0020  
           __size_of_setCommunicationTimeOut 0009                                   __pintentry 0004  
                                    _CM1CON0 0107                                      _CM2CON0 0108  
                    temperatureOffset@offset 002A                              _vSendDataToUart 0257  
                                  ?___awtoft 0035                                    ?___ftpack 0020  
                                  ?___lwtoft 0028                   ??_vAddToUartTransmitBuffer 0020  
                 __size_of_temperatureOffset 0044             __end_of_vSendTemperatureToBuffer 0F51  
                                  ?_read_ADC 0020                             ??_vInitializeADC 0020  
                     __size_of_calgulateTemp 02E2                     ?_vAddToUartReceiveBuffer 0070  
                            __size_of___bmul 000F                             _cGetFromTxBuffer 0D57  
                                    ___ftadd 0BF6                                      ___ftdiv 0B8C  
                            __size_of___wmul 0019                                      ___ftmul 06F9  
                                    ___fttol 0660                                      ___lwdiv 0FB2  
                                    ___lwmod 0FDC                                   ??___awtoft 0038  
                                 ??___ftpack 0025                            __end_of_vSetRelay 0257  
                                 ??___lwtoft 002B                                      _tim10Hz 00CC  
                                    _tim1min 00B6                                      _tim1sec 00CD  
                              ??_vCheckError 0070                         end_of_initialization 0B54  
                    __size_of_getTemperature 004E                                   ??_read_ADC 0022  
                                    itoa@buf 0034                                      itoa@val 002F  
                ??i1_setCommunicationTimeOut 0072                      __end_of_vSendDataToUart 025C  
                                    utoa@buf 002E                                      utoa@val 0027  
                                  _PORTBbits 0006                                    _PORTCbits 0007  
                                  _PORTDbits 0008                                _calgulateTemp 0363  
                      read_ADC@analogChannel 0023                                    _TRISBbits 0086  
                                  _TRISCbits 0087                           CheckCommand@result 0022  
StringSerialProtocolService@lastReceivedChar 00C8                                  ___ftdiv@exp 0046  
                        __end_of_vCheckError 0D49            __size_of_vSendTemperatureToBuffer 009C  
                                ___ftmul@exp 0051                      _setCommunicationTimeOut 0793  
                  ?_vSendTemperatureToBuffer 0035                               __end_of___bmul 02B8  
                             __end_of___wmul 0315             __end_of_vAddToUartTransmitBuffer 01CD  
                          ?_vInitializeBoard 0070                               ?_calgulateTemp 0063  
                         _uartTransmitBuffer 0110                             _RELAY_1_Timer_En 03C0  
                  i1_setCommunicationTimeOut 0DAE                           ??_vInitializeBoard 0020  
                        start_initialization 0B36                             _RELAY_2_Timer_En 03C1  
               vAddToUartTransmitBuffer@data 0020                             _RELAY_3_Timer_En 03C2  
                           _RELAY_4_Timer_En 03C3                             _RELAY_5_Timer_En 03C4  
                           ?_vSendDataToUart 0070                                     ??___bmul 0021  
                                   ??___wmul 0024                                  _dataCounter 00B3  
                          __size_of___awtoft 001B                            __size_of___ftpack 003E  
                                __pbssCOMMON 0079                            __size_of___lwtoft 0010  
                   __size_of_vInitializeUart 0016                                __pcstackBANK0 0020  
                              __pcstackBANK1 00C6                                ??_vPulseRelay 0024  
                   __end_of_cGetFromTxBuffer 0D64                               _getTemperature 0315  
             i1setCommunicationTimeOut@value 0070                           vResetPrintBuffer@i 0020  
                                _vCheckError 0D40                               _temperature_mV 00AE  
                            getTemperature@m 005E                    ??_setCommunicationTimeOut 0022  
                                  __pnvBANK1 00CC                        _cGetFromReceiveBuffer 0299  
                          __size_of_read_ADC 001B                             ___lwdiv@dividend 0022  
       __size_of_StringSerialProtocolService 01AE                                     ?___ftadd 0057  
                                  __ptext720 0363                                    __ptext721 0315  
                                  __ptext730 06BB                                    __ptext722 0783  
                                  __ptext731 0FDC                                    __ptext723 0645  
                                  __ptext740 025C                                    __ptext732 0FB2  
                                  __ptext724 06F9                                    __ptext741 0257  
                                  __ptext733 02FC                                    __ptext725 0B8C  
                                  __ptext717 0011                                    __ptext750 0D57  
                                  __ptext742 01BF                                    __ptext734 02A9  
                                  __ptext726 0BF6                                    __ptext718 0EB5  
                                  __ptext751 0D49                                    __ptext743 0793  
                                  __ptext735 01CD                                    __ptext727 0F68  
                                  __ptext719 0F51                                    __ptext752 0D40  
                                  __ptext744 07F0                                    __ptext736 0299  
                                  __ptext728 02B8                                    __ptext753 0000  
                                  __ptext745 0B20                                    __ptext737 028C  
                                  __ptext729 0660                                    __ptext746 0B58  
                                  __ptext738 0768                                    __ptext747 0CB8  
                                  __ptext739 0224                                    __ptext748 0D64  
                                  __ptext749 0DAE                                     ?___ftdiv 0039  
                                   ?___ftmul 0048                                     ?___fttol 0028  
                                   ?___lwdiv 0020                                     ?___lwmod 0020  
                              ?_CheckCommand 0070                              ??_calgulateTemp 0065  
                                  __pstrings 0800                                    _vSetRelay 0224  
                     __size_of_restartUSR_K2 004A             __size_of_vAddToUartReceiveBuffer 000E  
                     __end_of_getTemperature 0363                             ___lwdiv@quotient 0024  
                             __size_of_erdem 0088                                    _inputPort 00B4  
                          interrupt_function 0004            __size_of_vAddToUartTransmitBuffer 000E  
                             ___wmul@product 0024                          __end_of_vPulseRelay 028C  
                  ?_vAddToUartTransmitBuffer 0070                         getTemperature@iTempP 005C  
                             ??_CheckCommand 0020                                   _ADCON0bits 001F  
                                __stringbase 0805                                   _ADCON1bits 009F  
                          ___wmul@multiplier 0020              __end_of_setCommunicationTimeOut 079C  
                                  erdem@temp 0077                                   ?_vSetRelay 0020  
                            ?_getTemperature 0057           __size_ofi1_setCommunicationTimeOut 0007  
                          ??_vInitializeUart 0020                       ?_cGetFromReceiveBuffer 0070  
               StringSerialProtocolService@i 00C9                                _restartUSR_K2 0D64  
                           __size_of___ftadd 00C2                             __size_of___ftdiv 006A  
                    __size_of_vInitializeADC 000E                             __size_of___ftmul 006F  
                           __size_of___fttol 005B                             __size_of___lwdiv 002A  
                           __size_of___lwmod 0024                                     ___awtoft 0645  
                                   ___ftpack 06BB                             vPulseRelay@relay 0024  
                         _currentTemperature 00AC                                     ___lwtoft 0783  
                                 _ANSELHbits 0189                           _commandCharCounter 00B2  
                            ___lwdiv@divisor 0020                              ___lwdiv@counter 0026  
                                _vPulseRelay 025C                   cGetFromReceiveBuffer@value 0020  
                  __size_of_vInitializeBoard 0034                                     _read_ADC 0768  
                              __size_of_main 0100                                __size_of_itoa 0017  
                              __size_of_utoa 004A                               ?_restartUSR_K2 0070  
                              CheckCommand@i 0024                                     clear_ram 0B18  
               setCommunicationTimeOut@value 0020                    _communicationControlTimer 00AA  
                           CheckCommand@size 0023                      _vAddToUartReceiveBuffer 0D49  
                                ??_vSetRelay 0021                                     itoa@base 0031  
                               ?_vCheckError 0070                            ?_cGetFromTxBuffer 0070  
                                   intlevel1 0000                         __end_of_CheckCommand 0224  
               ?_StringSerialProtocolService 0070                           ??_cGetFromTxBuffer 0070  
                           ___lwmod@dividend 0022                     _vSendTemperatureToBuffer 0EB5  
                    getTemperature@milliVolt 0059                                    stringcode 0800  
                              _commandBuffer 00A6                     __size_of_vSendDataToUart 0005  
                                   utoa@base 0029                                   _OPTION_REG 0081  
                            ___lwmod@divisor 0020                              ___lwmod@counter 0024  
                                   stringdir 0800                                     stringtab 0800  
        __end_of_StringSerialProtocolService 01BF                  _StringSerialProtocolService 0011  
                                _printBuffer 00A0                                  _timeoutFlag 03C6  
                            ??_restartUSR_K2 0072                ??_StringSerialProtocolService 00C6  
                          _vResetPrintBuffer 028C  
