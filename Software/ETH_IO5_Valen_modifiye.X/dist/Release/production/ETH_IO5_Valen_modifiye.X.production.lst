

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Mar 26 17:11:23 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	eeprom_data,global,class=EEDATA,space=2,delta=2
     6                           	psect	idataCOMMON,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,delta=2
    10                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,delta=2
    21                           	psect	text619,local,class=CODE,delta=2
    22                           	psect	text621,local,class=CODE,delta=2
    23                           	psect	text622,local,class=CODE,delta=2
    24                           	psect	text626,local,class=CODE,delta=2
    25                           	psect	text627,local,class=CODE,delta=2
    26                           	psect	text633,local,class=CODE,delta=2
    27                           	psect	text635,local,class=CODE,delta=2
    28                           	psect	text636,local,class=CODE,delta=2
    29                           	psect	text637,local,class=CODE,delta=2
    30                           	psect	text638,local,class=CODE,delta=2
    31                           	psect	text639,local,class=CODE,delta=2
    32                           	psect	text640,local,class=CODE,delta=2
    33                           	psect	text641,local,class=CODE,delta=2
    34                           	psect	text642,local,class=CODE,delta=2
    35                           	psect	text643,local,class=CODE,delta=2
    36                           	psect	text644,local,class=CODE,delta=2
    37                           	psect	text645,local,class=CODE,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text651,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  000A                     	;#
    43                           
    44                           	psect	config
    45  2007  E02C               	dw	57388	;#
    46                           
    47                           	psect	eeprom_data
    48  0000  0031 0030 0000     	db	49,48,0,0,0,0,0,0	;#
      +       0000 0000 0000     
      +       0000 0000          
    49                           
    50                           	psect	idataCOMMON
    51  0000                     __pidataCOMMON:	
    52                           
    53                           	psect	strings
    54  0800                     __pstrings:	
    55  0800                     stringtab:	
    56                           ;	global	stringdir,stringtab,__stringbase
    57                           
    58  0800                     stringcode:	
    59                           ;	String table - string pointers are 1 byte each
    60                           
    61  0800                     stringdir:	
    62  0800  3008               	movlw	high stringdir
    63  0801  008A               	movwf	10
    64  0802  0804               	movf	4,w
    65  0803  0A84               	incf	4,f
    66  0804  0782               	addwf	2,f
    67  0805                     __stringbase:	
    68  0805  3400               	retlw	0
    69  0806                     _T1:	
    70  0806  34CE               	retlw	206
    71  0807  34FF               	retlw	255
    72  0808  34D8               	retlw	216
    73  0809  34FF               	retlw	255
    74  080A  34EC               	retlw	236
    75  080B  34FF               	retlw	255
    76  080C  3400               	retlw	0
    77  080D  3400               	retlw	0
    78  080E  3414               	retlw	20
    79  080F  3400               	retlw	0
    80  0810  3428               	retlw	40
    81  0811  3400               	retlw	0
    82  0812  343C               	retlw	60
    83  0813  3400               	retlw	0
    84  0814  3450               	retlw	80
    85  0815  3400               	retlw	0
    86  0816  3464               	retlw	100
    87  0817  3400               	retlw	0
    88  0818  3478               	retlw	120
    89  0819  3400               	retlw	0
    90  081A  348C               	retlw	140
    91  081B  3400               	retlw	0
    92  081C                     _T2:	
    93  081C  34D7               	retlw	215
    94  081D  34FF               	retlw	255
    95  081E  34EB               	retlw	235
    96  081F  34FF               	retlw	255
    97  0820  34FF               	retlw	255
    98  0821  34FF               	retlw	255
    99  0822  3413               	retlw	19
   100  0823  3400               	retlw	0
   101  0824  3427               	retlw	39
   102  0825  3400               	retlw	0
   103  0826  343B               	retlw	59
   104  0827  3400               	retlw	0
   105  0828  344F               	retlw	79
   106  0829  3400               	retlw	0
   107  082A  3463               	retlw	99
   108  082B  3400               	retlw	0
   109  082C  3477               	retlw	119
   110  082D  3400               	retlw	0
   111  082E  348B               	retlw	139
   112  082F  3400               	retlw	0
   113  0830  3496               	retlw	150
   114  0831  3400               	retlw	0
   115  0832                     _V1:	
   116  0832  3413               	retlw	19
   117  0833  3405               	retlw	5
   118  0834  34DF               	retlw	223
   119  0835  3404               	retlw	4
   120  0836  3475               	retlw	117
   121  0837  3404               	retlw	4
   122  0838  340A               	retlw	10
   123  0839  3404               	retlw	4
   124  083A  349D               	retlw	157
   125  083B  3403               	retlw	3
   126  083C  3430               	retlw	48
   127  083D  3403               	retlw	3
   128  083E  34C0               	retlw	192
   129  083F  3402               	retlw	2
   130  0840  344F               	retlw	79
   131  0841  3402               	retlw	2
   132  0842  34DC               	retlw	220
   133  0843  3401               	retlw	1
   134  0844  3469               	retlw	105
   135  0845  3401               	retlw	1
   136  0846  34F3               	retlw	243
   137  0847  3400               	retlw	0
   138  0848                     _V2:	
   139  0848  34E4               	retlw	228
   140  0849  3404               	retlw	4
   141  084A  347A               	retlw	122
   142  084B  3404               	retlw	4
   143  084C  340F               	retlw	15
   144  084D  3404               	retlw	4
   145  084E  34A3               	retlw	163
   146  084F  3403               	retlw	3
   147  0850  3435               	retlw	53
   148  0851  3403               	retlw	3
   149  0852  34C6               	retlw	198
   150  0853  3402               	retlw	2
   151  0854  3454               	retlw	84
   152  0855  3402               	retlw	2
   153  0856  34E2               	retlw	226
   154  0857  3401               	retlw	1
   155  0858  346F               	retlw	111
   156  0859  3401               	retlw	1
   157  085A  34F9               	retlw	249
   158  085B  3400               	retlw	0
   159  085C  34B7               	retlw	183
   160  085D  3400               	retlw	0
   161  001F                     _ADCON0bits	set	31
   162  001E                     _ADRESH	set	30
   163  000B                     _INTCON	set	11
   164  0005                     _PORTA	set	5
   165  0006                     _PORTB	set	6
   166  0006                     _PORTBbits	set	6
   167  0007                     _PORTC	set	7
   168  0007                     _PORTCbits	set	7
   169  0008                     _PORTD	set	8
   170  0008                     _PORTDbits	set	8
   171  0009                     _PORTE	set	9
   172  001A                     _RCREG	set	26
   173  0001                     _TMR0	set	1
   174  0019                     _TXREG	set	25
   175  00C3                     _ADDEN	set	195
   176  00C4                     _CREN	set	196
   177  00C2                     _FERR	set	194
   178  005F                     _GIE	set	95
   179  00C1                     _OERR	set	193
   180  005E                     _PEIE	set	94
   181  0065                     _RCIF	set	101
   182  00C6                     _RX9	set	198
   183  00C7                     _SPEN	set	199
   184  005D                     _T0IE	set	93
   185  005A                     _T0IF	set	90
   186  0064                     _TXIF	set	100
   187  009F                     _ADCON1bits	set	159
   188  009E                     _ADRESL	set	158
   189  0081                     _OPTION_REG	set	129
   190  008F                     _OSCCON	set	143
   191  008C                     _PIE1	set	140
   192  008D                     _PIE2	set	141
   193  0099                     _SPBRG	set	153
   194  0085                     _TRISA	set	133
   195  0086                     _TRISB	set	134
   196  0086                     _TRISBbits	set	134
   197  0087                     _TRISC	set	135
   198  0087                     _TRISCbits	set	135
   199  0088                     _TRISD	set	136
   200  0089                     _TRISE	set	137
   201  0095                     _WPUB	set	149
   202  04C2                     _BRGH	set	1218
   203  0465                     _RCIE	set	1125
   204  04C4                     _SYNC	set	1220
   205  04C6                     _TX9	set	1222
   206  04C5                     _TXEN	set	1221
   207  0464                     _TXIE	set	1124
   208  0107                     _CM1CON0	set	263
   209  0108                     _CM2CON0	set	264
   210  0105                     _WDTCON	set	261
   211  083F                     _C1ON	set	2111
   212  0847                     _C2ON	set	2119
   213  0188                     _ANSEL	set	392
   214  0189                     _ANSELH	set	393
   215  0189                     _ANSELHbits	set	393
   216  0C3B                     _BRG16	set	3131
   217                           
   218                           	psect	nvBANK1
   219  00C6                     __pnvBANK1:	
   220  00C6                     _tim10Hz:	
   221  00C6                     	ds	1
   222  00C7                     _tim1sec:	
   223  00C7                     	ds	1
   224  00C8                     _tim2Hz:	
   225  00C8                     	ds	1
   226                           
   227                           	psect	cinit
   228  07DC                     start_initialization:	
   229  07DC  30A0               	movlw	low __pbssBANK1
   230                           
   231                           ; Clear objects allocated to BITCOMMON
   232  07DD  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   233                           
   234                           ; Clear objects allocated to COMMON
   235  07DE  01F9               	clrf	__pbssCOMMON& (0+127)
   236  07DF  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   237  07E0  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   238                           
   239                           ; Clear objects allocated to BANK1
   240  07E1  1383               	bcf	3,7	;select IRP bank0
   241  07E2  0084               	movwf	4
   242  07E3  30C6               	movlw	low (__pbssBANK1+38)
   243  07E4  120A  158A  2443   	fcall	clear_ram
      +       120A  118A         
   244  07E9  3090               	movlw	low __pbssBANK3
   245                           
   246                           ; Clear objects allocated to BANK3
   247  07EA  1783               	bsf	3,7	;select IRP bank2
   248  07EB  0084               	movwf	4
   249  07EC  30CC               	movlw	low (__pbssBANK3+60)
   250  07ED  120A  158A  2443   	fcall	clear_ram
      +       120A  118A         
   251                           
   252                           ; Clear objects allocated to BANK2
   253  07F2  3010               	movlw	low __pbssBANK2
   254  07F3  0084               	movwf	4
   255  07F4  306A               	movlw	low (__pbssBANK2+90)
   256  07F5  120A  158A  2443   	fcall	clear_ram
   257                           
   258                           ;initializer for _buffer_SM
   259  07F8  3001               	movlw	1
   260  07F9  00FC               	movwf	__pdataCOMMON& (0+127)
   261  07FA                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  07FA  0183               	clrf	3
   265  07FB  120A  118A  2BE3   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bitbssCOMMON
   268  03C0                     __pbitbssCOMMON:	
   269  03C0                     _RELAY_1_Timer_En:	
   270  03C0                     	ds	1
   271  03C1                     _RELAY_2_Timer_En:	
   272  03C1                     	ds	1
   273  03C2                     _RELAY_3_Timer_En:	
   274  03C2                     	ds	1
   275  03C3                     _RELAY_4_Timer_En:	
   276  03C3                     	ds	1
   277  03C4                     _RELAY_5_Timer_En:	
   278  03C4                     	ds	1
   279  03C5                     _communicationControlTimer_En:	
   280  03C5                     	ds	1
   281                           
   282                           	psect	bssCOMMON
   283  0079                     __pbssCOMMON:	
   284  0079                     _bufferValue:	
   285  0079                     	ds	1
   286  007A                     _uartReceiveBufferR:	
   287  007A                     	ds	1
   288  007B                     _uartReceiveBufferW:	
   289  007B                     	ds	1
   290                           
   291                           	psect	dataCOMMON
   292  007C                     __pdataCOMMON:	
   293  007C                     _buffer_SM:	
   294  007C                     	ds	1
   295                           
   296                           	psect	bssBANK1
   297  00A0                     __pbssBANK1:	
   298  00A0                     _printBuffer:	
   299  00A0                     	ds	6
   300  00A6                     _communicationControlTimer:	
   301  00A6                     	ds	2
   302  00A8                     _currentTemperature:	
   303  00A8                     	ds	2
   304  00AA                     _dataConversionBuffer:	
   305  00AA                     	ds	2
   306  00AC                     _RELAY_1_Timer:	
   307  00AC                     	ds	1
   308  00AD                     _RELAY_2_Timer:	
   309  00AD                     	ds	1
   310  00AE                     _RELAY_3_Timer:	
   311  00AE                     	ds	1
   312  00AF                     _RELAY_4_Timer:	
   313  00AF                     	ds	1
   314  00B0                     _RELAY_5_Timer:	
   315  00B0                     	ds	1
   316  00B1                     _inputPort:	
   317  00B1                     	ds	1
   318  00B2                     _tim1min:	
   319  00B2                     	ds	1
   320  00B3                     _timer:	
   321  00B3                     	ds	1
   322  00B4                     _uartTransmitBufferR:	
   323  00B4                     	ds	1
   324  00B5                     _uartTransmitBufferW:	
   325  00B5                     	ds	1
   326  00B6                     _dataBuffer:	
   327  00B6                     	ds	10
   328  00C0                     _currentTemperatureBuffer:	
   329  00C0                     	ds	6
   330                           
   331                           	psect	bssBANK3
   332  0190                     __pbssBANK3:	
   333  0190                     _uartTransmitBuffer:	
   334  0190                     	ds	60
   335                           
   336                           	psect	bssBANK2
   337  0110                     __pbssBANK2:	
   338  0110                     _uartReceiveBuffer:	
   339  0110                     	ds	90
   340                           
   341                           	psect	clrtext
   342  0C43                     clear_ram:	
   343                           ;	Called with FSR containing the base address, and
   344                           ;	W with the last address+1
   345                           
   346  0C43  0064               	clrwdt	;clear the watchdog before getting into this loop
   347  0C44                     clrloop:	
   348  0C44  0180               	clrf	0	;clear RAM location pointed to by FSR
   349  0C45  0A84               	incf	4,f	;increment pointer
   350  0C46  0604               	xorwf	4,w	;XOR with final address
   351  0C47  1903               	btfsc	3,2	;have we reached the end yet?
   352  0C48  3400               	retlw	0	;all done for this memory range, return
   353  0C49  0604               	xorwf	4,w	;XOR again to restore value
   354  0C4A  2C44               	goto	clrloop	;do the next byte
   355                           
   356                           	psect	cstackBANK1
   357  00C9                     __pcstackBANK1:	
   358  00C9                     ??_main:	
   359                           
   360                           ; 0 bytes @ 0x0
   361  00C9                     	ds	2
   362                           
   363                           	psect	cstackCOMMON
   364  0070                     __pcstackCOMMON:	
   365  0070                     ?_vInitializeBoard:	
   366  0070                     ?_vInitializeUart:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_vInitializeADC:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ?_vAddToUartTransmitBuffer:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_vSendDataToUart:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_vResetPrintBuffer:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?_restartUSR_K2:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ?_vCheckError:	
   385                           ; 0 bytes @ 0x0
   386                           
   387  0070                     ??_vCheckError:	
   388                           ; 0 bytes @ 0x0
   389                           
   390  0070                     ?_vAddToUartReceiveBuffer:	
   391                           ; 0 bytes @ 0x0
   392                           
   393  0070                     ??_vAddToUartReceiveBuffer:	
   394                           ; 0 bytes @ 0x0
   395                           
   396  0070                     ??_cGetFromTxBuffer:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0070                     ?_erdem:	
   400                           ; 0 bytes @ 0x0
   401                           
   402  0070                     ?i1_setCommunicationTimeOut:	
   403                           ; 0 bytes @ 0x0
   404                           
   405  0070                     ?_cGetFromReceiveBuffer:	
   406                           ; 0 bytes @ 0x0
   407                           
   408  0070                     ?_cGetFromTxBuffer:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_main:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     vAddToUartReceiveBuffer@data:	
   415                           ; 2 bytes @ 0x0
   416                           
   417  0070                     cGetFromTxBuffer@value:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     i1setCommunicationTimeOut@value:	
   421                           ; 1 bytes @ 0x0
   422                           
   423                           
   424                           ; 2 bytes @ 0x0
   425  0070                     	ds	2
   426  0072                     ??_restartUSR_K2:	
   427  0072                     ??i1_setCommunicationTimeOut:	
   428                           ; 0 bytes @ 0x2
   429                           
   430                           
   431                           ; 0 bytes @ 0x2
   432  0072                     	ds	2
   433  0074                     ??_erdem:	
   434                           
   435                           ; 0 bytes @ 0x4
   436  0074                     	ds	3
   437  0077                     erdem@temp:	
   438                           
   439                           ; 1 bytes @ 0x7
   440  0077                     	ds	1
   441                           
   442                           	psect	cstackBANK0
   443  0020                     __pcstackBANK0:	
   444  0020                     ??_vInitializeBoard:	
   445  0020                     ??_vInitializeUart:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0020                     ??_vInitializeADC:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0020                     ?_setCommunicationTimeOut:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0020                     ??_vAddToUartTransmitBuffer:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0020                     ??_vSendDataToUart:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0020                     ??_cGetFromReceiveBuffer:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0020                     ?_vSetRelay:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0020                     ??_vResetPrintBuffer:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0020                     ?___bmul:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0020                     ?_read_ADC:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0020                     ?___lwdiv:	
   476                           ; 2 bytes @ 0x0
   477                           
   478  0020                     ?___lwmod:	
   479                           ; 2 bytes @ 0x0
   480                           
   481  0020                     ?___ftpack:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  0020                     vSetRelay@value:	
   485                           ; 3 bytes @ 0x0
   486                           
   487  0020                     cGetFromReceiveBuffer@value:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0020                     vAddToUartTransmitBuffer@data:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0020                     vResetPrintBuffer@i:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0020                     ___bmul@multiplicand:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0020                     setCommunicationTimeOut@value:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0020                     ___lwdiv@divisor:	
   503                           ; 2 bytes @ 0x0
   504                           
   505  0020                     ___lwmod@divisor:	
   506                           ; 2 bytes @ 0x0
   507                           
   508  0020                     ___ftpack@arg:	
   509                           ; 2 bytes @ 0x0
   510                           
   511                           
   512                           ; 3 bytes @ 0x0
   513  0020                     	ds	1
   514  0021                     ??_vSetRelay:	
   515  0021                     ??___bmul:	
   516                           ; 0 bytes @ 0x1
   517                           
   518  0021                     vSetRelay@relay:	
   519                           ; 0 bytes @ 0x1
   520                           
   521  0021                     ___bmul@product:	
   522                           ; 1 bytes @ 0x1
   523                           
   524                           
   525                           ; 1 bytes @ 0x1
   526  0021                     	ds	1
   527  0022                     ??_setCommunicationTimeOut:	
   528  0022                     ??_read_ADC:	
   529                           ; 0 bytes @ 0x2
   530                           
   531  0022                     ___bmul@multiplier:	
   532                           ; 0 bytes @ 0x2
   533                           
   534  0022                     ___lwdiv@dividend:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0022                     ___lwmod@dividend:	
   538                           ; 2 bytes @ 0x2
   539                           
   540                           
   541                           ; 2 bytes @ 0x2
   542  0022                     	ds	1
   543  0023                     ?_vPulseRelay:	
   544  0023                     vPulseRelay@timerValue:	
   545                           ; 0 bytes @ 0x3
   546                           
   547  0023                     read_ADC@analogChannel:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0023                     ___ftpack@exp:	
   551                           ; 1 bytes @ 0x3
   552                           
   553                           
   554                           ; 1 bytes @ 0x3
   555  0023                     	ds	1
   556  0024                     ??_vPulseRelay:	
   557  0024                     ??___lwdiv:	
   558                           ; 0 bytes @ 0x4
   559                           
   560  0024                     ??___lwmod:	
   561                           ; 0 bytes @ 0x4
   562                           
   563  0024                     vPulseRelay@relay:	
   564                           ; 0 bytes @ 0x4
   565                           
   566  0024                     ___lwmod@counter:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0024                     ___ftpack@sign:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0024                     read_ADC@adcResult:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0024                     ___lwdiv@quotient:	
   576                           ; 2 bytes @ 0x4
   577                           
   578                           
   579                           ; 2 bytes @ 0x4
   580  0024                     	ds	1
   581  0025                     ??___ftpack:	
   582                           
   583                           ; 0 bytes @ 0x5
   584  0025                     	ds	1
   585  0026                     ___lwdiv@counter:	
   586                           
   587                           ; 1 bytes @ 0x6
   588  0026                     	ds	1
   589  0027                     ?_utoa:	
   590  0027                     utoa@val:	
   591                           ; 1 bytes @ 0x7
   592                           
   593                           
   594                           ; 2 bytes @ 0x7
   595  0027                     	ds	1
   596  0028                     ?___lwtoft:	
   597  0028                     ?___fttol:	
   598                           ; 3 bytes @ 0x8
   599                           
   600  0028                     ___lwtoft@c:	
   601                           ; 4 bytes @ 0x8
   602                           
   603  0028                     ___fttol@f1:	
   604                           ; 2 bytes @ 0x8
   605                           
   606                           
   607                           ; 3 bytes @ 0x8
   608  0028                     	ds	1
   609  0029                     utoa@base:	
   610                           
   611                           ; 2 bytes @ 0x9
   612  0029                     	ds	2
   613  002B                     ??_utoa:	
   614  002B                     ??___lwtoft:	
   615                           ; 0 bytes @ 0xB
   616                           
   617  002B                     utoa@v:	
   618                           ; 0 bytes @ 0xB
   619                           
   620                           
   621                           ; 2 bytes @ 0xB
   622  002B                     	ds	1
   623  002C                     ??___fttol:	
   624                           
   625                           ; 0 bytes @ 0xC
   626  002C                     	ds	1
   627  002D                     utoa@c:	
   628                           
   629                           ; 1 bytes @ 0xD
   630  002D                     	ds	1
   631  002E                     utoa@buf:	
   632                           
   633                           ; 1 bytes @ 0xE
   634  002E                     	ds	1
   635  002F                     ?_itoa:	
   636  002F                     ___fttol@sign1:	
   637                           ; 1 bytes @ 0xF
   638                           
   639  002F                     itoa@val:	
   640                           ; 1 bytes @ 0xF
   641                           
   642                           
   643                           ; 2 bytes @ 0xF
   644  002F                     	ds	1
   645  0030                     ___fttol@lval:	
   646                           
   647                           ; 4 bytes @ 0x10
   648  0030                     	ds	1
   649  0031                     itoa@base:	
   650                           
   651                           ; 2 bytes @ 0x11
   652  0031                     	ds	2
   653  0033                     ??_itoa:	
   654                           
   655                           ; 0 bytes @ 0x13
   656  0033                     	ds	1
   657  0034                     itoa@buf:	
   658  0034                     ___fttol@exp1:	
   659                           ; 1 bytes @ 0x14
   660                           
   661                           
   662                           ; 1 bytes @ 0x14
   663  0034                     	ds	1
   664  0035                     ?_vSendTempToBuffer:	
   665  0035                     ?___awtoft:	
   666                           ; 0 bytes @ 0x15
   667                           
   668  0035                     vSendTempToBuffer@convData:	
   669                           ; 3 bytes @ 0x15
   670                           
   671  0035                     ___awtoft@c:	
   672                           ; 2 bytes @ 0x15
   673                           
   674                           
   675                           ; 2 bytes @ 0x15
   676  0035                     	ds	2
   677  0037                     ??_vSendTempToBuffer:	
   678                           
   679                           ; 0 bytes @ 0x17
   680  0037                     	ds	1
   681  0038                     ??___awtoft:	
   682  0038                     ___awtoft@sign:	
   683                           ; 0 bytes @ 0x18
   684                           
   685                           
   686                           ; 1 bytes @ 0x18
   687  0038                     	ds	1
   688  0039                     ?___ftdiv:	
   689  0039                     ___ftdiv@f2:	
   690                           ; 3 bytes @ 0x19
   691                           
   692                           
   693                           ; 3 bytes @ 0x19
   694  0039                     	ds	3
   695  003C                     ___ftdiv@f1:	
   696                           
   697                           ; 3 bytes @ 0x1C
   698  003C                     	ds	3
   699  003F                     ??___ftdiv:	
   700                           
   701                           ; 0 bytes @ 0x1F
   702  003F                     	ds	3
   703  0042                     ___ftdiv@cntr:	
   704                           
   705                           ; 1 bytes @ 0x22
   706  0042                     	ds	1
   707  0043                     ___ftdiv@f3:	
   708                           
   709                           ; 3 bytes @ 0x23
   710  0043                     	ds	3
   711  0046                     ___ftdiv@exp:	
   712                           
   713                           ; 1 bytes @ 0x26
   714  0046                     	ds	1
   715  0047                     ___ftdiv@sign:	
   716                           
   717                           ; 1 bytes @ 0x27
   718  0047                     	ds	1
   719  0048                     ?___ftmul:	
   720  0048                     ___ftmul@f1:	
   721                           ; 3 bytes @ 0x28
   722                           
   723                           
   724                           ; 3 bytes @ 0x28
   725  0048                     	ds	3
   726  004B                     ___ftmul@f2:	
   727                           
   728                           ; 3 bytes @ 0x2B
   729  004B                     	ds	3
   730  004E                     ??___ftmul:	
   731                           
   732                           ; 0 bytes @ 0x2E
   733  004E                     	ds	3
   734  0051                     ___ftmul@exp:	
   735                           
   736                           ; 1 bytes @ 0x31
   737  0051                     	ds	1
   738  0052                     ___ftmul@f3_as_product:	
   739                           
   740                           ; 3 bytes @ 0x32
   741  0052                     	ds	3
   742  0055                     ___ftmul@cntr:	
   743                           
   744                           ; 1 bytes @ 0x35
   745  0055                     	ds	1
   746  0056                     ___ftmul@sign:	
   747                           
   748                           ; 1 bytes @ 0x36
   749  0056                     	ds	1
   750  0057                     ?_getTemperature:	
   751  0057                     ?___ftadd:	
   752                           ; 2 bytes @ 0x37
   753                           
   754  0057                     ___ftadd@f1:	
   755                           ; 3 bytes @ 0x37
   756                           
   757                           
   758                           ; 3 bytes @ 0x37
   759  0057                     	ds	2
   760  0059                     ??_getTemperature:	
   761  0059                     getTemperature@milliVolt:	
   762                           ; 0 bytes @ 0x39
   763                           
   764                           
   765                           ; 3 bytes @ 0x39
   766  0059                     	ds	1
   767  005A                     ___ftadd@f2:	
   768                           
   769                           ; 3 bytes @ 0x3A
   770  005A                     	ds	2
   771  005C                     getTemperature@iTempP:	
   772                           
   773                           ; 2 bytes @ 0x3C
   774  005C                     	ds	1
   775  005D                     ??___ftadd:	
   776                           
   777                           ; 0 bytes @ 0x3D
   778  005D                     	ds	1
   779  005E                     getTemperature@m:	
   780                           
   781                           ; 2 bytes @ 0x3E
   782  005E                     	ds	2
   783  0060                     ___ftadd@sign:	
   784                           
   785                           ; 1 bytes @ 0x40
   786  0060                     	ds	1
   787  0061                     ___ftadd@exp2:	
   788                           
   789                           ; 1 bytes @ 0x41
   790  0061                     	ds	1
   791  0062                     ___ftadd@exp1:	
   792                           
   793                           ; 1 bytes @ 0x42
   794  0062                     	ds	1
   795  0063                     ?_calgulateTemp:	
   796  0063                     calgulateTemp@milliVolt:	
   797                           ; 2 bytes @ 0x43
   798                           
   799                           
   800                           ; 2 bytes @ 0x43
   801  0063                     	ds	2
   802  0065                     ??_calgulateTemp:	
   803  0065                     calgulateTemp@temperature:	
   804                           ; 0 bytes @ 0x45
   805                           
   806                           
   807                           ; 2 bytes @ 0x45
   808  0065                     	ds	2
   809  0067                     calgulateTemp@V2_:	
   810                           
   811                           ; 2 bytes @ 0x47
   812  0067                     	ds	2
   813  0069                     calgulateTemp@T2_:	
   814                           
   815                           ; 2 bytes @ 0x49
   816  0069                     	ds	2
   817  006B                     calgulateTemp@V1_:	
   818                           
   819                           ; 2 bytes @ 0x4B
   820  006B                     	ds	2
   821  006D                     calgulateTemp@T1_:	
   822                           
   823                           ; 2 bytes @ 0x4D
   824  006D                     	ds	2
   825  006F                     main@i:	
   826                           
   827                           ; 1 bytes @ 0x4F
   828  006F                     	ds	1
   829                           
   830                           	psect	maintext
   831  03E3                     __pmaintext:	
   832 ;;Data sizes: Strings 0, constant 88, data 1, bss 191, persistent 3 stack 0
   833 ;;Auto spaces:   Size  Autos    Used
   834 ;; COMMON          14      8      13
   835 ;; BANK0           80     80      80
   836 ;; BANK1           80      2      43
   837 ;; BANK3           96      0      60
   838 ;; BANK2           96      0      90
   839 ;;
   840 ;; Pointer list with targets:
   841 ;; ?___ftpack	float  size(1) Largest target is 0
   842 ;;
   843 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   844 ;;
   845 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   846 ;;
   847 ;; ?_utoa	PTR unsigned char  size(1) Largest target is 6
   848 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   849 ;;
   850 ;; ?_read_ADC	unsigned int  size(1) Largest target is 0
   851 ;;
   852 ;; ?___ftdiv	float  size(1) Largest target is 0
   853 ;;
   854 ;; ?___ftadd	float  size(1) Largest target is 0
   855 ;;
   856 ;; ?___awtoft	float  size(1) Largest target is 0
   857 ;;
   858 ;; ?_itoa	PTR unsigned char  size(1) Largest target is 6
   859 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   860 ;;
   861 ;; ?_getTemperature	unsigned int  size(1) Largest target is 0
   862 ;;
   863 ;; ?___fttol	long  size(1) Largest target is 0
   864 ;;
   865 ;; ?___ftmul	float  size(1) Largest target is 0
   866 ;;
   867 ;; ?___lwtoft	float  size(1) Largest target is 0
   868 ;;
   869 ;; ?_calgulateTemp	int  size(1) Largest target is 0
   870 ;;
   871 ;; utoa@buf	PTR unsigned char  size(1) Largest target is 6
   872 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   873 ;;
   874 ;; sp__utoa	PTR unsigned char  size(1) Largest target is 6
   875 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   876 ;;
   877 ;; itoa@buf	PTR unsigned char  size(1) Largest target is 6
   878 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   879 ;;
   880 ;; itoa@cp	PTR unsigned char  size(1) Largest target is 6
   881 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   882 ;;
   883 ;; sp__itoa	PTR unsigned char  size(1) Largest target is 6
   884 ;;		 -> currentTemperatureBuffer(BANK1[6]), 
   885 ;;
   886 ;;
   887 ;; Critical Paths under _main in COMMON
   888 ;;
   889 ;;   None.
   890 ;;
   891 ;; Critical Paths under _erdem in COMMON
   892 ;;
   893 ;;   _erdem->_restartUSR_K2
   894 ;;   _restartUSR_K2->i1_setCommunicationTimeOut
   895 ;;
   896 ;; Critical Paths under _main in BANK0
   897 ;;
   898 ;;   _main->_calgulateTemp
   899 ;;   _vSendTempToBuffer->_itoa
   900 ;;   _itoa->_utoa
   901 ;;   _calgulateTemp->___ftadd
   902 ;;   _getTemperature->___ftmul
   903 ;;   ___lwtoft->___ftpack
   904 ;;   ___awtoft->___fttol
   905 ;;   ___ftmul->___ftdiv
   906 ;;   ___ftdiv->___awtoft
   907 ;;   ___ftadd->___ftmul
   908 ;;   _utoa->___lwdiv
   909 ;;   ___fttol->___ftpack
   910 ;;   _vPulseRelay->___bmul
   911 ;;
   912 ;; Critical Paths under _erdem in BANK0
   913 ;;
   914 ;;   None.
   915 ;;
   916 ;; Critical Paths under _main in BANK1
   917 ;;
   918 ;;   None.
   919 ;;
   920 ;; Critical Paths under _erdem in BANK1
   921 ;;
   922 ;;   None.
   923 ;;
   924 ;; Critical Paths under _main in BANK3
   925 ;;
   926 ;;   None.
   927 ;;
   928 ;; Critical Paths under _erdem in BANK3
   929 ;;
   930 ;;   None.
   931 ;;
   932 ;; Critical Paths under _main in BANK2
   933 ;;
   934 ;;   None.
   935 ;;
   936 ;; Critical Paths under _erdem in BANK2
   937 ;;
   938 ;;   None.
   939 ;;
   940 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   941 ;;
   942 ;;
   943 ;;Call Graph Tables:
   944 ;;
   945 ;; ---------------------------------------------------------------------------------
   946 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (0) _main                                                 3     3      0    6235
   949 ;;                                             79 BANK0      1     1      0
   950 ;;                                              0 BANK1      2     2      0
   951 ;;                   _vInitializeBoard
   952 ;;                    _vInitializeUart
   953 ;;                     _vInitializeADC
   954 ;;            _setCommunicationTimeOut
   955 ;;           _vAddToUartTransmitBuffer
   956 ;;                    _vSendDataToUart
   957 ;;              _cGetFromReceiveBuffer
   958 ;;                          _vSetRelay
   959 ;;                        _vPulseRelay
   960 ;;                             ___bmul
   961 ;;                     _getTemperature
   962 ;;                      _calgulateTemp
   963 ;;                  _vResetPrintBuffer
   964 ;;                  _vSendTempToBuffer
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (1) _vSendTempToBuffer                                    2     0      2     961
   967 ;;                                             21 BANK0      2     0      2
   968 ;;                               _itoa
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (2) _itoa                                                 6     2      4     785
   971 ;;                                             15 BANK0      6     2      4
   972 ;;                               _utoa
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (1) _calgulateTemp                                       12    10      2    3133
   975 ;;                                             67 BANK0     12    10      2
   976 ;;                           ___awtoft
   977 ;;                            ___ftdiv
   978 ;;                            ___ftmul
   979 ;;                            ___ftadd
   980 ;;                            ___fttol
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (1) _getTemperature                                       9     7      2    1183
   983 ;;                                             55 BANK0      9     7      2
   984 ;;                           _read_ADC
   985 ;;                           ___lwtoft
   986 ;;                            ___ftmul
   987 ;;                            ___fttol
   988 ;; ---------------------------------------------------------------------------------
   989 ;; (2) ___lwtoft                                             3     0      3     231
   990 ;;                                              8 BANK0      3     0      3
   991 ;;                           ___ftpack
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) ___awtoft                                             4     1      3     300
   994 ;;                                             21 BANK0      4     1      3
   995 ;;                           ___ftpack
   996 ;;                            ___fttol (ARG)
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (2) ___ftmul                                             15     9      6     535
   999 ;;                                             40 BANK0     15     9      6
  1000 ;;                           ___ftpack
  1001 ;;                           ___awtoft (ARG)
  1002 ;;                            ___ftdiv (ARG)
  1003 ;;                            ___fttol (ARG)
  1004 ;;                           ___lwtoft (ARG)
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (2) ___ftdiv                                             15     9      6     489
  1007 ;;                                             25 BANK0     15     9      6
  1008 ;;                           ___ftpack
  1009 ;;                           ___awtoft (ARG)
  1010 ;;                            ___fttol (ARG)
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (2) ___ftadd                                             12     6      6    1049
  1013 ;;                                             55 BANK0     12     6      6
  1014 ;;                           ___ftpack
  1015 ;;                            ___ftmul (ARG)
  1016 ;;                           ___awtoft (ARG)
  1017 ;;                            ___ftdiv (ARG)
  1018 ;;                            ___fttol (ARG)
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (3) _utoa                                                 8     4      4     622
  1021 ;;                                              7 BANK0      8     4      4
  1022 ;;                            ___lwdiv
  1023 ;;                            ___lwmod
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (2) ___fttol                                             13     9      4     252
  1026 ;;                                              8 BANK0     13     9      4
  1027 ;;                           ___ftpack (ARG)
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (3) ___ftpack                                             8     3      5     209
  1030 ;;                                              0 BANK0      8     3      5
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (4) ___lwmod                                              5     1      4     159
  1033 ;;                                              0 BANK0      5     1      4
  1034 ;; ---------------------------------------------------------------------------------
  1035 ;; (4) ___lwdiv                                              7     3      4     162
  1036 ;;                                              0 BANK0      7     3      4
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (1) ___bmul                                               3     2      1      92
  1039 ;;                                              0 BANK0      3     2      1
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (2) _read_ADC                                             6     4      2      48
  1042 ;;                                              0 BANK0      6     4      2
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (1) _vResetPrintBuffer                                    1     1      0      68
  1045 ;;                                              0 BANK0      1     1      0
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (1) _vPulseRelay                                          2     1      1     132
  1048 ;;                                              3 BANK0      2     1      1
  1049 ;;                             ___bmul (ARG)
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (1) _vSetRelay                                            2     1      1     132
  1052 ;;                                              0 BANK0      2     1      1
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (1) _cGetFromReceiveBuffer                                1     1      0      23
  1055 ;;                                              0 BANK0      1     1      0
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (1) _vSendDataToUart                                      0     0      0       0
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (1) _vAddToUartTransmitBuffer                             1     1      0      22
  1060 ;;                                              0 BANK0      1     1      0
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (1) _setCommunicationTimeOut                              2     0      2      22
  1063 ;;                                              0 BANK0      2     0      2
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (1) _vInitializeADC                                       0     0      0       0
  1066 ;; ---------------------------------------------------------------------------------
  1067 ;; (1) _vInitializeUart                                      1     1      0      89
  1068 ;;                                              0 BANK0      1     1      0
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (1) _vInitializeBoard                                     0     0      0       0
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; Estimated maximum stack depth 4
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (5) _erdem                                                4     4      0     165
  1077 ;;                                              4 COMMON     4     4      0
  1078 ;;                      _restartUSR_K2
  1079 ;;                        _vCheckError
  1080 ;;            _vAddToUartReceiveBuffer
  1081 ;;                   _cGetFromTxBuffer
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (6) _restartUSR_K2                                        2     2      0      73
  1084 ;;                                              2 COMMON     2     2      0
  1085 ;;          i1_setCommunicationTimeOut
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (7) i1_setCommunicationTimeOut                            2     0      2      73
  1088 ;;                                              0 COMMON     2     0      2
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (6) _cGetFromTxBuffer                                     1     1      0      23
  1091 ;;                                              0 COMMON     1     1      0
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (6) _vAddToUartReceiveBuffer                              1     1      0      22
  1094 ;;                                              0 COMMON     1     1      0
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (6) _vCheckError                                          1     1      0       0
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; Estimated maximum stack depth 7
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; Call Graph Graphs:
  1101 ;; _main (ROOT)
  1102 ;;   _vInitializeBoard
  1103 ;;   _vInitializeUart
  1104 ;;   _vInitializeADC
  1105 ;;   _setCommunicationTimeOut
  1106 ;;   _vAddToUartTransmitBuffer
  1107 ;;   _vSendDataToUart
  1108 ;;   _cGetFromReceiveBuffer
  1109 ;;   _vSetRelay
  1110 ;;   _vPulseRelay
  1111 ;;     ___bmul (ARG)
  1112 ;;   ___bmul
  1113 ;;   _getTemperature
  1114 ;;     _read_ADC
  1115 ;;     ___lwtoft
  1116 ;;       ___ftpack
  1117 ;;     ___ftmul
  1118 ;;       ___ftpack
  1119 ;;       ___awtoft (ARG)
  1120 ;;         ___ftpack
  1121 ;;         ___fttol (ARG)
  1122 ;;           ___ftpack (ARG)
  1123 ;;       ___ftdiv (ARG)
  1124 ;;         ___ftpack
  1125 ;;         ___awtoft (ARG)
  1126 ;;           ___ftpack
  1127 ;;           ___fttol (ARG)
  1128 ;;             ___ftpack (ARG)
  1129 ;;         ___fttol (ARG)
  1130 ;;           ___ftpack (ARG)
  1131 ;;       ___fttol (ARG)
  1132 ;;         ___ftpack (ARG)
  1133 ;;       ___lwtoft (ARG)
  1134 ;;         ___ftpack
  1135 ;;     ___fttol
  1136 ;;       ___ftpack (ARG)
  1137 ;;   _calgulateTemp
  1138 ;;     ___awtoft
  1139 ;;       ___ftpack
  1140 ;;       ___fttol (ARG)
  1141 ;;         ___ftpack (ARG)
  1142 ;;     ___ftdiv
  1143 ;;       ___ftpack
  1144 ;;       ___awtoft (ARG)
  1145 ;;         ___ftpack
  1146 ;;         ___fttol (ARG)
  1147 ;;           ___ftpack (ARG)
  1148 ;;       ___fttol (ARG)
  1149 ;;         ___ftpack (ARG)
  1150 ;;     ___ftmul
  1151 ;;       ___ftpack
  1152 ;;       ___awtoft (ARG)
  1153 ;;         ___ftpack
  1154 ;;         ___fttol (ARG)
  1155 ;;           ___ftpack (ARG)
  1156 ;;       ___ftdiv (ARG)
  1157 ;;         ___ftpack
  1158 ;;         ___awtoft (ARG)
  1159 ;;           ___ftpack
  1160 ;;           ___fttol (ARG)
  1161 ;;             ___ftpack (ARG)
  1162 ;;         ___fttol (ARG)
  1163 ;;           ___ftpack (ARG)
  1164 ;;       ___fttol (ARG)
  1165 ;;         ___ftpack (ARG)
  1166 ;;       ___lwtoft (ARG)
  1167 ;;         ___ftpack
  1168 ;;     ___ftadd
  1169 ;;       ___ftpack
  1170 ;;       ___ftmul (ARG)
  1171 ;;         ___ftpack
  1172 ;;         ___awtoft (ARG)
  1173 ;;           ___ftpack
  1174 ;;           ___fttol (ARG)
  1175 ;;             ___ftpack (ARG)
  1176 ;;         ___ftdiv (ARG)
  1177 ;;           ___ftpack
  1178 ;;           ___awtoft (ARG)
  1179 ;;             ___ftpack
  1180 ;;             ___fttol (ARG)
  1181 ;;               ___ftpack (ARG)
  1182 ;;           ___fttol (ARG)
  1183 ;;             ___ftpack (ARG)
  1184 ;;         ___fttol (ARG)
  1185 ;;           ___ftpack (ARG)
  1186 ;;         ___lwtoft (ARG)
  1187 ;;           ___ftpack
  1188 ;;       ___awtoft (ARG)
  1189 ;;         ___ftpack
  1190 ;;         ___fttol (ARG)
  1191 ;;           ___ftpack (ARG)
  1192 ;;       ___ftdiv (ARG)
  1193 ;;         ___ftpack
  1194 ;;         ___awtoft (ARG)
  1195 ;;           ___ftpack
  1196 ;;           ___fttol (ARG)
  1197 ;;             ___ftpack (ARG)
  1198 ;;         ___fttol (ARG)
  1199 ;;           ___ftpack (ARG)
  1200 ;;       ___fttol (ARG)
  1201 ;;         ___ftpack (ARG)
  1202 ;;     ___fttol
  1203 ;;       ___ftpack (ARG)
  1204 ;;   _vResetPrintBuffer
  1205 ;;   _vSendTempToBuffer
  1206 ;;     _itoa
  1207 ;;       _utoa
  1208 ;;         ___lwdiv
  1209 ;;         ___lwmod
  1210 ;;
  1211 ;; _erdem (ROOT)
  1212 ;;   _restartUSR_K2
  1213 ;;     i1_setCommunicationTimeOut
  1214 ;;   _vCheckError
  1215 ;;   _vAddToUartReceiveBuffer
  1216 ;;   _cGetFromTxBuffer
  1217 ;;
  1218 ;; Address spaces:
  1219 ;;Name               Size   Autos  Total    Cost      Usage
  1220 ;;BANK3               60      0      3C       9       62.5%
  1221 ;;BITBANK3            60      0       0       8        0.0%
  1222 ;;SFR3                 0      0       0       4        0.0%
  1223 ;;BITSFR3              0      0       0       4        0.0%
  1224 ;;BANK2               60      0      5A      11       93.8%
  1225 ;;BITBANK2            60      0       0      10        0.0%
  1226 ;;SFR2                 0      0       0       5        0.0%
  1227 ;;BITSFR2              0      0       0       5        0.0%
  1228 ;;SFR1                 0      0       0       2        0.0%
  1229 ;;BITSFR1              0      0       0       2        0.0%
  1230 ;;BANK1               50      2      2B       7       53.8%
  1231 ;;BITBANK1            50      0       0       6        0.0%
  1232 ;;CODE                 0      0       0       0        0.0%
  1233 ;;DATA                 0      0     128      12        0.0%
  1234 ;;ABS                  0      0     11E       3        0.0%
  1235 ;;NULL                 0      0       0       0        0.0%
  1236 ;;STACK                0      0       A       2        0.0%
  1237 ;;BANK0               50     50      50       5      100.0%
  1238 ;;BITBANK0            50      0       0       4        0.0%
  1239 ;;SFR0                 0      0       0       1        0.0%
  1240 ;;BITSFR0              0      0       0       1        0.0%
  1241 ;;COMMON               E      8       D       1       92.9%
  1242 ;;BITCOMMON            E      0       1       0        7.1%
  1243 ;;EEDATA             100      0       0       0        0.0%
  1244                           
  1245                           
  1246 ;; *************** function _main *****************
  1247 ;; Defined at:
  1248 ;;		line 138 in file "../src/main.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  i               1   79[BANK0 ] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2  1136[COMMON] int 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 17F/0
  1259 ;;		On exit  : 160/100
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         0       0       0       0       0
  1263 ;;      Locals:         0       1       0       0       0
  1264 ;;      Temps:          0       0       2       0       0
  1265 ;;      Totals:         0       1       2       0       0
  1266 ;;Total ram usage:        3 bytes
  1267 ;; Hardware stack levels required when called:    7
  1268 ;; This function calls:
  1269 ;;		_vInitializeBoard
  1270 ;;		_vInitializeUart
  1271 ;;		_vInitializeADC
  1272 ;;		_setCommunicationTimeOut
  1273 ;;		_vAddToUartTransmitBuffer
  1274 ;;		_vSendDataToUart
  1275 ;;		_cGetFromReceiveBuffer
  1276 ;;		_vSetRelay
  1277 ;;		_vPulseRelay
  1278 ;;		___bmul
  1279 ;;		_getTemperature
  1280 ;;		_calgulateTemp
  1281 ;;		_vResetPrintBuffer
  1282 ;;		_vSendTempToBuffer
  1283 ;; This function is called by:
  1284 ;;		Startup code after reset
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287  03E3                     _main:	
  1288                           
  1289                           ;main.c: 139: unsigned char i;
  1290                           ;main.c: 140: vInitializeBoard();
  1291                           
  1292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1293  03E3  120A  158A  2518   	fcall	_vInitializeBoard
      +       120A  118A         
  1294                           
  1295                           ;main.c: 141: vInitializeUart();
  1296  03E8  120A  158A  249E   	fcall	_vInitializeUart
      +       120A  118A         
  1297                           
  1298                           ;main.c: 142: vInitializeADC();
  1299  03ED  120A  158A  2461   	fcall	_vInitializeADC
      +       120A  118A         
  1300                           
  1301                           ;main.c: 143: currentTemperature = 0;
  1302  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1303  03F3  01A8               	clrf	_currentTemperature^(0+128)	;volatile
  1304  03F4  01A9               	clrf	(_currentTemperature+1)^(0+128)	;volatile
  1305                           
  1306                           ;main.c: 144: PEIE = 1;
  1307  03F5  170B               	bsf	11,6
  1308                           
  1309                           ;main.c: 145: GIE = 1;
  1310  03F6  178B               	bsf	11,7
  1311                           
  1312                           ;main.c: 146: (GIE = 1);
  1313  03F7  178B               	bsf	11,7
  1314                           
  1315                           ;main.c: 147: uartReceiveBufferW = 0;
  1316  03F8  01FB               	clrf	_uartReceiveBufferW	;volatile
  1317                           
  1318                           ;main.c: 148: uartReceiveBufferR = 0;
  1319  03F9  01FA               	clrf	_uartReceiveBufferR	;volatile
  1320                           
  1321                           ;main.c: 149: inputPort = (PORTB & 0b00110111);
  1322  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1323  03FB  0806               	movf	6,w
  1324  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1325  03FD  00B1               	movwf	_inputPort^(0+128)
  1326  03FE  3037               	movlw	55
  1327  03FF  05B1               	andwf	_inputPort^(0+128),f
  1328  0400                     l6875:	
  1329                           
  1330                           ;main.c: 150: setCommunicationTimeOut(3000);
  1331  0400  30B8               	movlw	184
  1332  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0402  00A0               	movwf	?_setCommunicationTimeOut
  1334  0403  300B               	movlw	11
  1335  0404  00A1               	movwf	?_setCommunicationTimeOut+1
  1336  0405  120A  158A  244B   	fcall	_setCommunicationTimeOut
      +       120A  118A         
  1337  040A                     l6877:	
  1338  040A  0064               	clrwdt	;#
  1339                           
  1340                           ;main.c: 157: if (inputPort != (PORTB & 0b00010111)) {
  1341  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1342  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1343  040D  0806               	movf	6,w
  1344  040E  3917               	andlw	23
  1345  040F  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0410  0631               	xorwf	_inputPort^(0+128),w
  1347  0411  1903               	skipnz
  1348  0412  2C92               	goto	l6919
  1349                           
  1350                           ;main.c: 158: _delay((unsigned long)((40)*(8000000/4000.0)));
  1351  0413  3068               	movlw	104
  1352  0414  00CA               	movwf	(??_main^(0+128)+1)
  1353  0415  30E4               	movlw	228
  1354  0416  00C9               	movwf	??_main^(0+128)
  1355  0417                     u3017:	
  1356  0417  0BC9               	decfsz	??_main^(0+128),f
  1357  0418  2C17               	goto	u3017
  1358  0419  0BCA               	decfsz	(??_main^(0+128)+1),f
  1359  041A  2C17               	goto	u3017
  1360  041B  0064               	clrwdt
  1361                           
  1362                           ;main.c: 159: if (inputPort != (PORTB & 0b00010111)) {
  1363  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1364  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1365  041E  0806               	movf	6,w
  1366  041F  3917               	andlw	23
  1367  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0421  0631               	xorwf	_inputPort^(0+128),w
  1369  0422  1903               	skipnz
  1370  0423  2C92               	goto	l6919
  1371                           
  1372                           ;main.c: 160: inputPort = (PORTB & 0b00010111);
  1373  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0425  0806               	movf	6,w
  1375  0426  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0427  00B1               	movwf	_inputPort^(0+128)
  1377  0428  3017               	movlw	23
  1378  0429  05B1               	andwf	_inputPort^(0+128),f
  1379                           
  1380                           ;main.c: 162: vAddToUartTransmitBuffer('<');
  1381  042A  303C               	movlw	60
  1382  042B  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1383                           
  1384                           ;main.c: 163: vAddToUartTransmitBuffer('D');
  1385  0430  3044               	movlw	68
  1386  0431  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1387                           
  1388                           ;main.c: 164: vAddToUartTransmitBuffer('U');
  1389  0436  3055               	movlw	85
  1390  0437  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1391                           
  1392                           ;main.c: 165: vAddToUartTransmitBuffer('R');
  1393  043C  3052               	movlw	82
  1394  043D  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1395                           
  1396                           ;main.c: 166: vAddToUartTransmitBuffer('U');
  1397  0442  3055               	movlw	85
  1398  0443  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1399                           
  1400                           ;main.c: 167: vAddToUartTransmitBuffer('M');
  1401  0448  304D               	movlw	77
  1402  0449  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1403                           
  1404                           ;main.c: 168: vAddToUartTransmitBuffer(':');
  1405  044E  303A               	movlw	58
  1406  044F  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1407                           
  1408                           ;main.c: 169: vAddToUartTransmitBuffer((PORTBbits.RB0) + 48);
  1409  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0455  0806               	movf	6,w	;volatile
  1411  0456  3901               	andlw	1
  1412  0457  3E30               	addlw	48
  1413  0458  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1414                           
  1415                           ;main.c: 170: vAddToUartTransmitBuffer((PORTBbits.RB1) + 48);
  1416  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1417  045E  0C06               	rrf	6,w	;volatile
  1418  045F  3901               	andlw	1
  1419  0460  3E30               	addlw	48
  1420  0461  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1421                           
  1422                           ;main.c: 171: vAddToUartTransmitBuffer((PORTBbits.RB2) + 48);
  1423  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0467  0C06               	rrf	6,w	;volatile
  1425  0468  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0469  00C9               	movwf	??_main^(0+128)
  1427  046A  0C49               	rrf	??_main^(0+128),w
  1428  046B  3901               	andlw	1
  1429  046C  3E30               	addlw	48
  1430  046D  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1431                           
  1432                           ;main.c: 172: vAddToUartTransmitBuffer((PORTBbits.RB4) + 48);
  1433  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0473  0E06               	swapf	6,w	;volatile
  1435  0474  3901               	andlw	1
  1436  0475  3E30               	addlw	48
  1437  0476  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1438                           
  1439                           ;main.c: 173: vAddToUartTransmitBuffer('0');
  1440  047B  3030               	movlw	48
  1441  047C  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1442                           
  1443                           ;main.c: 174: vAddToUartTransmitBuffer('0');
  1444  0481  3030               	movlw	48
  1445  0482  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1446                           
  1447                           ;main.c: 175: vAddToUartTransmitBuffer('>');
  1448  0487  303E               	movlw	62
  1449  0488  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1450                           
  1451                           ;main.c: 176: vSendDataToUart();
  1452  048D  120A  158A  243E   	fcall	_vSendDataToUart
      +       120A  118A         
  1453  0492                     l6919:	
  1454                           
  1455                           ;main.c: 177: }
  1456                           ;main.c: 178: }
  1457                           ;main.c: 180: if (uartReceiveBufferW != uartReceiveBufferR) {
  1458  0492  087B               	movf	_uartReceiveBufferW,w	;volatile
  1459  0493  067A               	xorwf	_uartReceiveBufferR,w	;volatile
  1460  0494  1903               	skipnz
  1461  0495  2C0A               	goto	l6877
  1462                           
  1463                           ;main.c: 181: bufferValue = cGetFromReceiveBuffer();
  1464  0496  120A  158A  247D   	fcall	_cGetFromReceiveBuffer
      +       120A  118A         
  1465  049B  00F9               	movwf	_bufferValue
  1466                           
  1467                           ;main.c: 182: if (buffer_SM == 1) {
  1468  049C  0B7C               	decfsz	_buffer_SM,w	;volatile
  1469  049D  2CA4               	goto	l6929
  1470                           
  1471                           ;main.c: 183: if (bufferValue == '<') {
  1472  049E  0879               	movf	_bufferValue,w
  1473  049F  3A3C               	xorlw	60
  1474  04A0  1D03               	skipz
  1475  04A1  2C0A               	goto	l6877
  1476                           
  1477                           ;main.c: 184: buffer_SM = 10;
  1478  04A2  300A               	movlw	10
  1479  04A3  2DCD               	goto	L10
  1480  04A4                     l6929:	
  1481  04A4  087C               	movf	_buffer_SM,w	;volatile
  1482  04A5  3A0A               	xorlw	10
  1483  04A6  1D03               	skipz
  1484  04A7  2CB7               	goto	l6939
  1485                           
  1486                           ;main.c: 187: if (bufferValue == 'R') {
  1487  04A8  0879               	movf	_bufferValue,w
  1488  04A9  3A52               	xorlw	82
  1489  04AA  1D03               	skipz
  1490  04AB  2CAE               	goto	l6935
  1491                           
  1492                           ;main.c: 188: buffer_SM = 3;
  1493  04AC  3003               	movlw	3
  1494  04AD  2DCD               	goto	L10
  1495  04AE                     l6935:	
  1496                           ;main.c: 189: } else if (bufferValue == 'I') {
  1497                           
  1498  04AE  0879               	movf	_bufferValue,w
  1499  04AF  3A49               	xorlw	73
  1500  04B0  1D03               	skipz
  1501  04B1  2CB4               	goto	l1147
  1502                           
  1503                           ;main.c: 190: buffer_SM = 12;
  1504  04B2  300C               	movlw	12
  1505  04B3  2DCD               	goto	L10
  1506  04B4                     l1147:	
  1507                           ;main.c: 191: } else {
  1508                           
  1509                           
  1510                           ;main.c: 192: buffer_SM = 1;
  1511  04B4  01FC               	clrf	_buffer_SM	;volatile
  1512  04B5  0AFC               	incf	_buffer_SM,f	;volatile
  1513  04B6  2C0A               	goto	l6877
  1514  04B7                     l6939:	
  1515  04B7  087C               	movf	_buffer_SM,w	;volatile
  1516  04B8  3A03               	xorlw	3
  1517  04B9  1D03               	skipz
  1518  04BA  2CC1               	goto	l6945
  1519                           
  1520                           ;main.c: 195: if (bufferValue == 'O') {
  1521  04BB  0879               	movf	_bufferValue,w
  1522  04BC  3A4F               	xorlw	79
  1523  04BD  1D03               	skipz
  1524  04BE  2CB4               	goto	l1147
  1525                           
  1526                           ;main.c: 196: buffer_SM = 4;
  1527  04BF  3004               	movlw	4
  1528  04C0  2DCD               	goto	L10
  1529  04C1                     l6945:	
  1530                           ;main.c: 197: } else {
  1531                           
  1532  04C1  087C               	movf	_buffer_SM,w	;volatile
  1533  04C2  3A04               	xorlw	4
  1534  04C3  1D03               	skipz
  1535  04C4  2CCB               	goto	l6951
  1536                           
  1537                           ;main.c: 201: if (bufferValue == 'L') {
  1538  04C5  0879               	movf	_bufferValue,w
  1539  04C6  3A4C               	xorlw	76
  1540  04C7  1D03               	skipz
  1541  04C8  2CB4               	goto	l1147
  1542                           
  1543                           ;main.c: 202: buffer_SM = 5;
  1544  04C9  3005               	movlw	5
  1545  04CA  2DCD               	goto	L10
  1546  04CB                     l6951:	
  1547                           ;main.c: 203: } else {
  1548                           
  1549  04CB  087C               	movf	_buffer_SM,w	;volatile
  1550  04CC  3A05               	xorlw	5
  1551  04CD  1D03               	skipz
  1552  04CE  2CD5               	goto	l6957
  1553                           
  1554                           ;main.c: 207: if (bufferValue == 'E') {
  1555  04CF  0879               	movf	_bufferValue,w
  1556  04D0  3A45               	xorlw	69
  1557  04D1  1D03               	skipz
  1558  04D2  2CB4               	goto	l1147
  1559                           
  1560                           ;main.c: 208: buffer_SM = 6;
  1561  04D3  3006               	movlw	6
  1562  04D4  2DCD               	goto	L10
  1563  04D5                     l6957:	
  1564                           ;main.c: 209: } else {
  1565                           
  1566  04D5  087C               	movf	_buffer_SM,w	;volatile
  1567  04D6  3A06               	xorlw	6
  1568  04D7  1D03               	skipz
  1569  04D8  2CDF               	goto	l6963
  1570                           
  1571                           ;main.c: 213: if (bufferValue == ':') {
  1572  04D9  0879               	movf	_bufferValue,w
  1573  04DA  3A3A               	xorlw	58
  1574  04DB  1D03               	skipz
  1575  04DC  2CB4               	goto	l1147
  1576                           
  1577                           ;main.c: 214: buffer_SM = 7;
  1578  04DD  3007               	movlw	7
  1579  04DE  2DCD               	goto	L10
  1580  04DF                     l6963:	
  1581                           ;main.c: 215: } else {
  1582                           
  1583  04DF  087C               	movf	_buffer_SM,w	;volatile
  1584  04E0  3A07               	xorlw	7
  1585  04E1  1D03               	skipz
  1586  04E2  2D1A               	goto	l6993
  1587                           
  1588                           ;main.c: 219: dataBuffer[0] = bufferValue;
  1589  04E3  0879               	movf	_bufferValue,w
  1590  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  1591  04E5  00B6               	movwf	_dataBuffer^(0+128)
  1592                           
  1593                           ;main.c: 220: for (i = 0; i < 5; ++i) {
  1594  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1595  04E7  01EF               	clrf	main@i
  1596  04E8                     l6973:	
  1597                           
  1598                           ;main.c: 221: _delay((unsigned long)((1)*(8000000/4000.0)));
  1599  04E8  3003               	movlw	3
  1600  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1601  04EA  00CA               	movwf	(??_main^(0+128)+1)
  1602  04EB  3097               	movlw	151
  1603  04EC  00C9               	movwf	??_main^(0+128)
  1604  04ED                     u3027:	
  1605  04ED  0BC9               	decfsz	??_main^(0+128),f
  1606  04EE  2CED               	goto	u3027
  1607  04EF  0BCA               	decfsz	(??_main^(0+128)+1),f
  1608  04F0  2CED               	goto	u3027
  1609  04F1  2CF2               	nop2
  1610                           
  1611                           ;main.c: 222: dataBuffer[i + 1] = cGetFromReceiveBuffer();
  1612  04F2  120A  158A  247D   	fcall	_cGetFromReceiveBuffer
      +       120A  118A         
  1613  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1614  04F8  00C9               	movwf	??_main^(0+128)
  1615  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1616  04FA  086F               	movf	main@i,w
  1617  04FB  3EB7               	addlw	(_dataBuffer+1)& (0+255)
  1618  04FC  0084               	movwf	4
  1619  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1620  04FE  0849               	movf	??_main^(0+128),w
  1621  04FF  1383               	bcf	3,7	;select IRP bank1
  1622  0500  0080               	movwf	0
  1623                           
  1624                           ;main.c: 223: if (dataBuffer[i + 1] == '<') {
  1625  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0502  086F               	movf	main@i,w
  1627  0503  3EB7               	addlw	(_dataBuffer+1)& (0+255)
  1628  0504  0084               	movwf	4
  1629  0505  0800               	movf	0,w
  1630  0506  3A3C               	xorlw	60
  1631  0507  1D03               	skipz
  1632  0508  2D0B               	goto	l6983
  1633                           
  1634                           ;main.c: 224: buffer_SM = 2;
  1635  0509  3002               	movlw	2
  1636  050A  2DCD               	goto	L10
  1637  050B                     l6983:	
  1638                           ;main.c: 225: break;
  1639                           
  1640  050B  086F               	movf	main@i,w
  1641  050C  3EB7               	addlw	(_dataBuffer+1)& (0+255)
  1642  050D  0084               	movwf	4
  1643  050E  0800               	movf	0,w
  1644  050F  3A3E               	xorlw	62
  1645  0510  1903               	btfsc	3,2
  1646  0511  2CB4               	goto	l1147
  1647                           
  1648                           ;main.c: 229: }
  1649                           ;main.c: 230: buffer_SM = 8;
  1650  0512  3008               	movlw	8
  1651  0513  00FC               	movwf	_buffer_SM	;volatile
  1652  0514  3005               	movlw	5
  1653  0515  0AEF               	incf	main@i,f
  1654  0516  026F               	subwf	main@i,w
  1655  0517  1803               	btfsc	3,0
  1656  0518  2C0A               	goto	l6877
  1657  0519  2CE8               	goto	l6973
  1658  051A                     l6993:	
  1659  051A  087C               	movf	_buffer_SM,w	;volatile
  1660  051B  3A08               	xorlw	8
  1661  051C  1D03               	skipz
  1662  051D  2DBA               	goto	l7035
  1663                           
  1664                           ;main.c: 233: if (bufferValue == '>') {
  1665  051E  0879               	movf	_bufferValue,w
  1666  051F  3A3E               	xorlw	62
  1667  0520  1D03               	skipz
  1668  0521  2DB8               	goto	l7033
  1669                           
  1670                           ;main.c: 234: for (i = 0; i < 6; ++i) {
  1671  0522  01EF               	clrf	main@i
  1672  0523                     l7003:	
  1673                           
  1674                           ;main.c: 235: if (dataBuffer[i] == 'A')
  1675  0523  086F               	movf	main@i,w
  1676  0524  3EB6               	addlw	_dataBuffer& (0+255)
  1677  0525  0084               	movwf	4
  1678  0526  1383               	bcf	3,7	;select IRP bank1
  1679  0527  0800               	movf	0,w
  1680  0528  3A41               	xorlw	65
  1681  0529  1D03               	skipz
  1682  052A  2D34               	goto	l7007
  1683                           
  1684                           ;main.c: 236: vSetRelay(i + 1, 1);
  1685  052B  01A0               	clrf	?_vSetRelay
  1686  052C  0AA0               	incf	?_vSetRelay,f
  1687  052D  0A6F               	incf	main@i,w
  1688  052E  120A  158A  24B4   	fcall	_vSetRelay
      +       120A  118A         
  1689  0533  2D91               	goto	l7021
  1690  0534                     l7007:	
  1691                           
  1692                           ;main.c: 237: else if (dataBuffer[i] == 'K')
  1693  0534  086F               	movf	main@i,w
  1694  0535  3EB6               	addlw	_dataBuffer& (0+255)
  1695  0536  0084               	movwf	4
  1696  0537  0800               	movf	0,w
  1697  0538  3A4B               	xorlw	75
  1698  0539  1D03               	skipz
  1699  053A  2D43               	goto	l7011
  1700                           
  1701                           ;main.c: 238: vSetRelay(i + 1, 0);
  1702  053B  01A0               	clrf	?_vSetRelay
  1703  053C  0A6F               	incf	main@i,w
  1704  053D  120A  158A  24B4   	fcall	_vSetRelay
      +       120A  118A         
  1705  0542  2D91               	goto	l7021
  1706  0543                     l7011:	
  1707                           
  1708                           ;main.c: 239: else if (dataBuffer[i] == '0') {
  1709  0543  086F               	movf	main@i,w
  1710  0544  3EB6               	addlw	_dataBuffer& (0+255)
  1711  0545  0084               	movwf	4
  1712  0546  0800               	movf	0,w
  1713  0547  3A30               	xorlw	48
  1714  0548  1D03               	skipz
  1715  0549  2D4C               	goto	l7015
  1716                           
  1717                           ;main.c: 240: vPulseRelay(i + 1, 50);
  1718  054A  3032               	movlw	50
  1719  054B  2D8A               	goto	L12
  1720  054C                     l7015:	
  1721                           ;main.c: 241: } else if (((dataBuffer[i] - 48) > 0) && ((dataBuffer[i] - 48) <= 9)) {
  1722                           
  1723  054C  086F               	movf	main@i,w
  1724  054D  3EB6               	addlw	_dataBuffer& (0+255)
  1725  054E  0084               	movwf	4
  1726  054F  0800               	movf	0,w
  1727  0550  3ED0               	addlw	208
  1728  0551  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0552  00C9               	movwf	??_main^(0+128)
  1730  0553  30FF               	movlw	255
  1731  0554  1803               	skipnc
  1732  0555  3000               	movlw	0
  1733  0556  00CA               	movwf	(??_main^(0+128)+1)
  1734  0557  084A               	movf	(??_main+1)^(0+128),w
  1735  0558  3A80               	xorlw	128
  1736  0559  00FF               	movwf	127
  1737  055A  3080               	movlw	128
  1738  055B  027F               	subwf	127,w
  1739  055C  1D03               	skipz
  1740  055D  2D60               	goto	u2925
  1741  055E  3001               	movlw	1
  1742  055F  0249               	subwf	??_main^(0+128),w
  1743  0560                     u2925:	
  1744  0560  1C03               	skipc
  1745  0561  2D91               	goto	l7021
  1746  0562  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0563  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0564  086F               	movf	main@i,w
  1749  0565  3EB6               	addlw	_dataBuffer& (0+255)
  1750  0566  0084               	movwf	4
  1751  0567  1383               	bcf	3,7	;select IRP bank1
  1752  0568  0800               	movf	0,w
  1753  0569  3ED0               	addlw	208
  1754  056A  1683               	bsf	3,5	;RP0=1, select bank1
  1755  056B  00C9               	movwf	??_main^(0+128)
  1756  056C  30FF               	movlw	255
  1757  056D  1803               	skipnc
  1758  056E  3000               	movlw	0
  1759  056F  00CA               	movwf	(??_main^(0+128)+1)
  1760  0570  084A               	movf	(??_main+1)^(0+128),w
  1761  0571  3A80               	xorlw	128
  1762  0572  00FF               	movwf	127
  1763  0573  3080               	movlw	128
  1764  0574  027F               	subwf	127,w
  1765  0575  1D03               	skipz
  1766  0576  2D79               	goto	u2935
  1767  0577  300A               	movlw	10
  1768  0578  0249               	subwf	??_main^(0+128),w
  1769  0579                     u2935:	
  1770  0579  1803               	skipnc
  1771  057A  2D91               	goto	l7021
  1772                           
  1773                           ;main.c: 242: vPulseRelay(i + 1, (dataBuffer[i] - 48)*5);
  1774  057B  3005               	movlw	5
  1775  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1776  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1777  057E  00A0               	movwf	?___bmul
  1778  057F  086F               	movf	main@i,w
  1779  0580  3EB6               	addlw	_dataBuffer& (0+255)
  1780  0581  0084               	movwf	4
  1781  0582  1383               	bcf	3,7	;select IRP bank1
  1782  0583  0800               	movf	0,w
  1783  0584  3ED0               	addlw	208
  1784  0585  120A  158A  246F   	fcall	___bmul
      +       120A  118A         
  1785  058A                     L12:	
  1786  058A  00A3               	movwf	?_vPulseRelay
  1787  058B  0A6F               	incf	main@i,w
  1788  058C  120A  158A  24E6   	fcall	_vPulseRelay
      +       120A  118A         
  1789  0591                     l7021:	
  1790  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0593  3006               	movlw	6
  1793  0594  0AEF               	incf	main@i,f
  1794  0595  026F               	subwf	main@i,w
  1795  0596  1C03               	skipc
  1796  0597  2D23               	goto	l7003
  1797                           
  1798                           ;main.c: 243: }
  1799                           ;main.c: 244: }
  1800                           ;main.c: 245: vAddToUartTransmitBuffer('<');
  1801  0598  303C               	movlw	60
  1802  0599  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1803                           
  1804                           ;main.c: 246: vAddToUartTransmitBuffer('O');
  1805  059E  304F               	movlw	79
  1806  059F  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1807                           
  1808                           ;main.c: 247: vAddToUartTransmitBuffer('K');
  1809  05A4  304B               	movlw	75
  1810  05A5                     L11:	
  1811  05A5  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1812                           
  1813                           ;main.c: 248: vAddToUartTransmitBuffer('>');
  1814  05AA  303E               	movlw	62
  1815  05AB  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1816                           
  1817                           ;main.c: 249: buffer_SM = 1;
  1818  05B0  01FC               	clrf	_buffer_SM	;volatile
  1819  05B1  0AFC               	incf	_buffer_SM,f	;volatile
  1820                           
  1821                           ;main.c: 250: vSendDataToUart();
  1822  05B2  120A  158A  243E   	fcall	_vSendDataToUart
      +       120A  118A         
  1823  05B7  2C00               	goto	l6875
  1824  05B8                     l7033:	
  1825                           
  1826                           ;main.c: 253: buffer_SM = 8;
  1827  05B8  3008               	movlw	8
  1828  05B9  2DCD               	goto	L10
  1829  05BA                     l7035:	
  1830  05BA  087C               	movf	_buffer_SM,w	;volatile
  1831  05BB  3A0C               	xorlw	12
  1832  05BC  1D03               	skipz
  1833  05BD  2DC4               	goto	l7041
  1834                           
  1835                           ;main.c: 256: if (bufferValue == 'S') {
  1836  05BE  0879               	movf	_bufferValue,w
  1837  05BF  3A53               	xorlw	83
  1838  05C0  1D03               	skipz
  1839  05C1  2CB4               	goto	l1147
  1840                           
  1841                           ;main.c: 257: buffer_SM = 13;
  1842  05C2  300D               	movlw	13
  1843  05C3  2DCD               	goto	L10
  1844  05C4                     l7041:	
  1845                           ;main.c: 258: } else {
  1846                           
  1847  05C4  087C               	movf	_buffer_SM,w	;volatile
  1848  05C5  3A0D               	xorlw	13
  1849  05C6  1D03               	skipz
  1850  05C7  2DCF               	goto	l7047
  1851                           
  1852                           ;main.c: 262: if (bufferValue == 'I') {
  1853  05C8  0879               	movf	_bufferValue,w
  1854  05C9  3A49               	xorlw	73
  1855  05CA  1D03               	skipz
  1856  05CB  2CB4               	goto	l1147
  1857                           
  1858                           ;main.c: 263: buffer_SM = 15;
  1859  05CC  300F               	movlw	15
  1860  05CD                     L10:	
  1861  05CD  00FC               	movwf	_buffer_SM	;volatile
  1862                           
  1863                           ;main.c: 264: } else {
  1864  05CE  2C0A               	goto	l6877
  1865  05CF                     l7047:	
  1866  05CF  087C               	movf	_buffer_SM,w	;volatile
  1867  05D0  3A0F               	xorlw	15
  1868  05D1  1D03               	skipz
  1869  05D2  2C0A               	goto	l6877
  1870                           
  1871                           ;main.c: 268: if (bufferValue == '>') {
  1872  05D3  0879               	movf	_bufferValue,w
  1873  05D4  3A3E               	xorlw	62
  1874  05D5  1D03               	skipz
  1875  05D6  2CB4               	goto	l1147
  1876                           
  1877                           ;main.c: 269: currentTemperature = getTemperature();
  1878  05D7  120A  158A  260E   	fcall	_getTemperature
      +       120A  118A         
  1879  05DC  0858               	movf	?_getTemperature+1,w
  1880  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  1881  05DE  00A9               	movwf	(_currentTemperature+1)^(0+128)
  1882  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1883  05E0  0857               	movf	?_getTemperature,w
  1884  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  1885  05E2  00A8               	movwf	_currentTemperature^(0+128)
  1886                           
  1887                           ;main.c: 270: dataConversionBuffer = calgulateTemp(currentTemperature);
  1888  05E3  0829               	movf	(_currentTemperature+1)^(0+128),w	;volatile
  1889  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1890  05E5  00E4               	movwf	?_calgulateTemp+1
  1891  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  1892  05E7  0828               	movf	_currentTemperature^(0+128),w	;volatile
  1893  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1894  05E9  00E3               	movwf	?_calgulateTemp
  1895  05EA  120A  118A  2011   	fcall	_calgulateTemp
      +       120A  118A         
  1896  05EF  0864               	movf	?_calgulateTemp+1,w
  1897  05F0  1683               	bsf	3,5	;RP0=1, select bank1
  1898  05F1  00AB               	movwf	(_dataConversionBuffer+1)^(0+128)
  1899  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1900  05F3  0863               	movf	?_calgulateTemp,w
  1901  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  1902  05F5  00AA               	movwf	_dataConversionBuffer^(0+128)
  1903                           
  1904                           ;main.c: 271: vResetPrintBuffer();
  1905  05F6  120A  158A  2454   	fcall	_vResetPrintBuffer
      +       120A  118A         
  1906                           
  1907                           ;main.c: 272: vSendTempToBuffer(dataConversionBuffer);
  1908  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  1909  05FC  082B               	movf	(_dataConversionBuffer+1)^(0+128),w
  1910  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1911  05FE  00B6               	movwf	?_vSendTempToBuffer+1
  1912  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0600  082A               	movf	_dataConversionBuffer^(0+128),w
  1914  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0602  00B5               	movwf	?_vSendTempToBuffer
  1916  0603  120A  118A  2628   	fcall	_vSendTempToBuffer
      +       120A  118A         
  1917                           
  1918                           ;main.c: 273: vAddToUartTransmitBuffer('<');
  1919  0608  303C               	movlw	60
  1920  0609  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1921                           
  1922                           ;main.c: 274: vAddToUartTransmitBuffer(printBuffer[0]);
  1923  060E  0820               	movf	_printBuffer^(0+128),w
  1924  060F  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1925                           
  1926                           ;main.c: 275: vAddToUartTransmitBuffer(printBuffer[1]);
  1927  0614  0821               	movf	(_printBuffer^(0+128)+1),w
  1928  0615  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1929                           
  1930                           ;main.c: 276: vAddToUartTransmitBuffer(printBuffer[2]);
  1931  061A  0822               	movf	(_printBuffer^(0+128)+2),w
  1932  061B  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1933                           
  1934                           ;main.c: 277: vAddToUartTransmitBuffer(printBuffer[3]);
  1935  0620  0823               	movf	(_printBuffer^(0+128)+3),w
  1936  0621  120A  158A  248C   	fcall	_vAddToUartTransmitBuffer
      +       120A  118A         
  1937                           
  1938                           ;main.c: 278: vAddToUartTransmitBuffer(printBuffer[4]);
  1939  0626  0824               	movf	(_printBuffer^(0+128)+4),w
  1940  0627  2DA5               	goto	L11
  1941  0628                     __end_of_main:	
  1942                           ;main.c: 279: vAddToUartTransmitBuffer('>');
  1943                           
  1944                           
  1945                           	psect	text619
  1946  0628                     __ptext619:	
  1947 ;; =============== function _main ends ============
  1948                           
  1949                           
  1950 ;; *************** function _vSendTempToBuffer *****************
  1951 ;; Defined at:
  1952 ;;		line 677 in file "../src/main.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  convData        2   21[BANK0 ] int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;		None               void
  1959 ;; Registers used:
  1960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 160/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: FFE00/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         0       2       0       0       0
  1967 ;;      Locals:         0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         0       2       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    6
  1973 ;; This function calls:
  1974 ;;		_itoa
  1975 ;; This function is called by:
  1976 ;;		_main
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979  0628                     _vSendTempToBuffer:	
  1980                           
  1981                           ;main.c: 678: itoa(currentTemperatureBuffer, convData, 10);
  1982                           
  1983                           ; Regs used in _vSendTempToBuffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1984  0628  0836               	movf	vSendTempToBuffer@convData+1,w
  1985  0629  00B0               	movwf	?_itoa+1
  1986  062A  0835               	movf	vSendTempToBuffer@convData,w
  1987  062B  00AF               	movwf	?_itoa
  1988  062C  300A               	movlw	10
  1989  062D  00B1               	movwf	?_itoa+2
  1990  062E  30C0               	movlw	_currentTemperatureBuffer& (0+255)
  1991  062F  01B2               	clrf	?_itoa+3
  1992  0630  26A4  120A  118A   	fcall	_itoa
  1993                           
  1994                           ;main.c: 680: printBuffer[0] = '+';
  1995  0633  302B               	movlw	43
  1996  0634  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0635  00A0               	movwf	_printBuffer^(0+128)
  1998                           
  1999                           ;main.c: 681: printBuffer[1] = currentTemperatureBuffer[0];
  2000  0636  0840               	movf	_currentTemperatureBuffer^(0+128),w
  2001                           
  2002                           ;main.c: 682: printBuffer[2] = currentTemperatureBuffer[1];
  2003                           
  2004                           ;main.c: 683: printBuffer[3] = currentTemperatureBuffer[2];
  2005                           
  2006                           ;main.c: 684: printBuffer[4] = 'C';
  2007                           
  2008                           ;main.c: 685: printBuffer[5] = '\0';
  2009  0637  2753  120A  118A   	fcall	PL3	;call to abstracted procedure
  2010                           
  2011                           ;main.c: 687: if (convData < 100) {
  2012  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2013  063B  0836               	movf	vSendTempToBuffer@convData+1,w
  2014  063C  3A80               	xorlw	128
  2015  063D  00FF               	movwf	127
  2016  063E  3080               	movlw	128
  2017  063F  027F               	subwf	127,w
  2018  0640  1D03               	skipz
  2019  0641  2E44               	goto	u2605
  2020  0642  3064               	movlw	100
  2021  0643  0235               	subwf	vSendTempToBuffer@convData,w
  2022  0644                     u2605:	
  2023  0644  1803               	skipnc
  2024  0645  2E50               	goto	l6827
  2025                           
  2026                           ;main.c: 688: printBuffer[0] = '+';
  2027  0646  302B               	movlw	43
  2028  0647  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0648  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0649  00A0               	movwf	_printBuffer^(0+128)
  2031                           
  2032                           ;main.c: 689: printBuffer[1] = '0';
  2033  064A  3030               	movlw	48
  2034  064B  00A1               	movwf	(_printBuffer^(0+128)+1)
  2035                           
  2036                           ;main.c: 690: printBuffer[2] = currentTemperatureBuffer[0];
  2037  064C  0840               	movf	_currentTemperatureBuffer^(0+128),w
  2038                           
  2039                           ;main.c: 691: printBuffer[3] = currentTemperatureBuffer[1];
  2040                           
  2041                           ;main.c: 692: printBuffer[4] = 'C';
  2042                           
  2043                           ;main.c: 693: printBuffer[5] = '\0';
  2044  064D  276B  120A  118A   	fcall	PL13	;call to abstracted procedure
  2045  0650                     l6827:	
  2046                           
  2047                           ;main.c: 694: }
  2048                           ;main.c: 695: if (convData < 10) {
  2049  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0652  0836               	movf	vSendTempToBuffer@convData+1,w
  2052  0653  3A80               	xorlw	128
  2053  0654  00FF               	movwf	127
  2054  0655  3080               	movlw	128
  2055  0656  027F               	subwf	127,w
  2056  0657  1D03               	skipz
  2057  0658  2E5B               	goto	u2615
  2058  0659  300A               	movlw	10
  2059  065A  0235               	subwf	vSendTempToBuffer@convData,w
  2060  065B                     u2615:	
  2061  065B  1803               	skipnc
  2062  065C  2E65               	goto	l6833
  2063                           
  2064                           ;main.c: 696: printBuffer[0] = '+';
  2065  065D  302B               	movlw	43
  2066  065E  1683               	bsf	3,5	;RP0=1, select bank1
  2067  065F  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0660  00A0               	movwf	_printBuffer^(0+128)
  2069                           
  2070                           ;main.c: 697: printBuffer[1] = '0';
  2071  0661  3030               	movlw	48
  2072                           
  2073                           ;main.c: 698: printBuffer[2] = '0';
  2074                           
  2075                           ;main.c: 699: printBuffer[3] = currentTemperatureBuffer[0];
  2076                           
  2077                           ;main.c: 700: printBuffer[4] = 'C';
  2078                           
  2079                           ;main.c: 701: printBuffer[5] = '\0';
  2080  0662  275C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2081  0665                     l6833:	
  2082                           
  2083                           ;main.c: 702: }
  2084                           ;main.c: 703: if (convData == 0) {
  2085  0665  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0666  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0667  0836               	movf	vSendTempToBuffer@convData+1,w
  2088  0668  0435               	iorwf	vSendTempToBuffer@convData,w
  2089  0669  1D03               	skipz
  2090  066A  2E71               	goto	l6839
  2091                           
  2092                           ;main.c: 704: printBuffer[0] = '0';
  2093  066B  3030               	movlw	48
  2094  066C  1683               	bsf	3,5	;RP0=1, select bank1
  2095  066D  00A0               	movwf	_printBuffer^(0+128)
  2096                           
  2097                           ;main.c: 705: printBuffer[1] = '0';
  2098                           
  2099                           ;main.c: 706: printBuffer[2] = '0';
  2100                           
  2101                           ;main.c: 707: printBuffer[3] = currentTemperatureBuffer[0];
  2102                           
  2103                           ;main.c: 708: printBuffer[4] = 'C';
  2104                           
  2105                           ;main.c: 709: printBuffer[5] = '\0';
  2106  066E  275C  120A  118A   	fcall	PL5	;call to abstracted procedure
  2107  0671                     l6839:	
  2108                           
  2109                           ;main.c: 710: }
  2110                           ;main.c: 711: if ((convData > -10) && (convData < 0)) {
  2111  0671  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0672  0836               	movf	vSendTempToBuffer@convData+1,w
  2113  0673  3A80               	xorlw	128
  2114  0674  00FF               	movwf	127
  2115  0675  307F               	movlw	127
  2116  0676  027F               	subwf	127,w
  2117  0677  1D03               	skipz
  2118  0678  2E7B               	goto	u2635
  2119  0679  30F7               	movlw	247
  2120  067A  0235               	subwf	vSendTempToBuffer@convData,w
  2121  067B                     u2635:	
  2122  067B  1C03               	skipc
  2123  067C  2E89               	goto	l6847
  2124  067D  1283               	bcf	3,5	;RP0=0, select bank0
  2125  067E  1303               	bcf	3,6	;RP1=0, select bank0
  2126  067F  1FB6               	btfss	vSendTempToBuffer@convData+1,7
  2127  0680  2E89               	goto	l6847
  2128                           
  2129                           ;main.c: 712: printBuffer[0] = currentTemperatureBuffer[0];
  2130  0681  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0682  0840               	movf	_currentTemperatureBuffer^(0+128),w
  2132  0683  00A0               	movwf	_printBuffer^(0+128)
  2133                           
  2134                           ;main.c: 713: printBuffer[1] = '0';
  2135  0684  3030               	movlw	48
  2136  0685  00A1               	movwf	(_printBuffer^(0+128)+1)
  2137                           
  2138                           ;main.c: 714: printBuffer[2] = '0';
  2139                           
  2140                           ;main.c: 715: printBuffer[3] = currentTemperatureBuffer[1];
  2141                           
  2142                           ;main.c: 716: printBuffer[4] = 'C';
  2143                           
  2144                           ;main.c: 717: printBuffer[5] = '\0';
  2145  0686  276B  120A  118A   	fcall	PL13	;call to abstracted procedure
  2146  0689                     l6847:	
  2147                           
  2148                           ;main.c: 718: }
  2149                           ;main.c: 719: if ((convData > -51) && (convData <= -10)) {
  2150  0689  1283               	bcf	3,5	;RP0=0, select bank0
  2151  068A  2764  120A  118A   	fcall	PL12	;call to abstracted procedure
  2152  068D  1D03               	skipz
  2153  068E  2E91               	goto	u2655
  2154  068F  30CE               	movlw	206
  2155  0690  0235               	subwf	vSendTempToBuffer@convData,w
  2156  0691                     u2655:	
  2157  0691  1C03               	skipc
  2158  0692  0008               	return
  2159  0693  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0694  2764  120A  118A   	fcall	PL12	;call to abstracted procedure
  2161  0697  1D03               	skipz
  2162  0698  2E9B               	goto	u2665
  2163  0699  30F7               	movlw	247
  2164  069A  0235               	subwf	vSendTempToBuffer@convData,w
  2165  069B                     u2665:	
  2166  069B  1803               	skipnc
  2167  069C  0008               	return
  2168                           
  2169                           ;main.c: 720: printBuffer[0] = currentTemperatureBuffer[0];
  2170  069D  1683               	bsf	3,5	;RP0=1, select bank1
  2171  069E  1303               	bcf	3,6	;RP1=0, select bank1
  2172  069F  0840               	movf	_currentTemperatureBuffer^(0+128),w
  2173  06A0  00A0               	movwf	_printBuffer^(0+128)
  2174                           
  2175                           ;main.c: 721: printBuffer[1] = '0';
  2176  06A1  3030               	movlw	48
  2177                           
  2178                           ;main.c: 722: printBuffer[2] = currentTemperatureBuffer[1];
  2179                           
  2180                           ;main.c: 723: printBuffer[3] = currentTemperatureBuffer[2];
  2181                           
  2182                           ;main.c: 724: printBuffer[4] = 'C';
  2183                           
  2184                           ;main.c: 725: printBuffer[5] = '\0';
  2185  06A2  2753               	fcall	PL3	;call to abstracted procedure
  2186  06A3  0008               	return
  2187  06A4                     __end_of_vSendTempToBuffer:	
  2188  06A4                     __ptext620:	
  2189 ;; =============== function _vSendTempToBuffer ends ============
  2190                           
  2191                           
  2192 ;; *************** function _itoa *****************
  2193 ;; Defined at:
  2194 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  buf             1    wreg     PTR unsigned char 
  2197 ;;		 -> currentTemperatureBuffer(6), 
  2198 ;;  val             2   15[BANK0 ] int 
  2199 ;;  base            2   17[BANK0 ] int 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  2202 ;;		 -> currentTemperatureBuffer(6), 
  2203 ;;  cp              1    0        PTR unsigned char 
  2204 ;;		 -> currentTemperatureBuffer(6), 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      PTR unsigned char 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 160/0
  2211 ;;		On exit  : 160/0
  2212 ;;		Unchanged: FFE9F/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       4       0       0       0
  2215 ;;      Locals:         0       2       0       0       0
  2216 ;;      Temps:          0       0       0       0       0
  2217 ;;      Totals:         0       6       0       0       0
  2218 ;;Total ram usage:        6 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    5
  2221 ;; This function calls:
  2222 ;;		_utoa
  2223 ;; This function is called by:
  2224 ;;		_vSendTempToBuffer
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227  06A4                     _itoa:	
  2228                           
  2229                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2230                           ;itoa@buf stored from wreg
  2231  06A4  00B4               	movwf	itoa@buf
  2232  06A5  1FB0               	btfss	itoa@val+1,7
  2233  06A6  2EB1               	goto	l6803
  2234  06A7  0834               	movf	itoa@buf,w
  2235  06A8  0084               	movwf	4
  2236  06A9  302D               	movlw	45
  2237  06AA  0080               	movwf	0
  2238  06AB  0AB4               	incf	itoa@buf,f
  2239  06AC  09AF               	comf	itoa@val,f
  2240  06AD  09B0               	comf	itoa@val+1,f
  2241  06AE  0AAF               	incf	itoa@val,f
  2242  06AF  1903               	skipnz
  2243  06B0  0AB0               	incf	itoa@val+1,f
  2244  06B1                     l6803:	
  2245  06B1  0830               	movf	itoa@val+1,w
  2246  06B2  00A8               	movwf	?_utoa+1
  2247  06B3  082F               	movf	itoa@val,w
  2248  06B4  00A7               	movwf	?_utoa
  2249  06B5  0832               	movf	itoa@base+1,w
  2250  06B6  00AA               	movwf	?_utoa+3
  2251  06B7  0831               	movf	itoa@base,w
  2252  06B8  00A9               	movwf	?_utoa+2
  2253  06B9  0834               	movf	itoa@buf,w
  2254  06BA  2EBB               	ljmp	_utoa
  2255  06BB                     __end_of_itoa:	
  2256  06BB                     __ptext628:	
  2257 ;; =============== function ___ftadd ends ============
  2258                           
  2259                           
  2260 ;; *************** function _utoa *****************
  2261 ;; Defined at:
  2262 ;;		line 18 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\itoa.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  buf             1    wreg     PTR unsigned char 
  2265 ;;		 -> currentTemperatureBuffer(6), 
  2266 ;;  val             2    7[BANK0 ] unsigned int 
  2267 ;;  base            2    9[BANK0 ] int 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  buf             1   14[BANK0 ] PTR unsigned char 
  2270 ;;		 -> currentTemperatureBuffer(6), 
  2271 ;;  v               2   11[BANK0 ] unsigned int 
  2272 ;;  c               1   13[BANK0 ] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      PTR unsigned char 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 160/0
  2279 ;;		On exit  : 160/0
  2280 ;;		Unchanged: FFE9F/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       4       0       0       0
  2283 ;;      Locals:         0       4       0       0       0
  2284 ;;      Temps:          0       0       0       0       0
  2285 ;;      Totals:         0       8       0       0       0
  2286 ;;Total ram usage:        8 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		___lwdiv
  2291 ;;		___lwmod
  2292 ;; This function is called by:
  2293 ;;		_itoa
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296  06BB                     _utoa:	
  2297                           
  2298                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2299                           ;utoa@buf stored from wreg
  2300  06BB  00AE               	movwf	utoa@buf
  2301  06BC  0828               	movf	utoa@val+1,w
  2302  06BD  00AC               	movwf	utoa@v+1
  2303  06BE  0827               	movf	utoa@val,w
  2304  06BF  00AB               	movwf	utoa@v
  2305  06C0                     l6501:	
  2306  06C0  082A               	movf	utoa@base+1,w
  2307  06C1  00A1               	movwf	?___lwdiv+1
  2308  06C2  0829               	movf	utoa@base,w
  2309  06C3  00A0               	movwf	?___lwdiv
  2310  06C4  082C               	movf	utoa@v+1,w
  2311  06C5  00A3               	movwf	?___lwdiv+3
  2312  06C6  082B               	movf	utoa@v,w
  2313  06C7  00A2               	movwf	?___lwdiv+2
  2314  06C8  2705  120A  118A   	fcall	___lwdiv
  2315  06CB  0821               	movf	?___lwdiv+1,w
  2316  06CC  00AC               	movwf	utoa@v+1
  2317  06CD  0820               	movf	?___lwdiv,w
  2318  06CE  00AB               	movwf	utoa@v
  2319  06CF  0AAE               	incf	utoa@buf,f
  2320  06D0  042C               	iorwf	utoa@v+1,w
  2321  06D1  1D03               	skipz
  2322  06D2  2EC0               	goto	l6501
  2323  06D3  082E               	movf	utoa@buf,w
  2324  06D4  0084               	movwf	4
  2325  06D5  0180               	clrf	0
  2326  06D6  03AE               	decf	utoa@buf,f
  2327  06D7                     l6511:	
  2328  06D7  082A               	movf	utoa@base+1,w
  2329  06D8  00A1               	movwf	?___lwmod+1
  2330  06D9  0829               	movf	utoa@base,w
  2331  06DA  00A0               	movwf	?___lwmod
  2332  06DB  0828               	movf	utoa@val+1,w
  2333  06DC  00A3               	movwf	?___lwmod+3
  2334  06DD  0827               	movf	utoa@val,w
  2335  06DE  00A2               	movwf	?___lwmod+2
  2336  06DF  272F  120A  118A   	fcall	___lwmod
  2337  06E2  0820               	movf	?___lwmod,w
  2338  06E3  00AD               	movwf	utoa@c
  2339  06E4  082A               	movf	utoa@base+1,w
  2340  06E5  00A1               	movwf	?___lwdiv+1
  2341  06E6  0829               	movf	utoa@base,w
  2342  06E7  00A0               	movwf	?___lwdiv
  2343  06E8  0828               	movf	utoa@val+1,w
  2344  06E9  00A3               	movwf	?___lwdiv+3
  2345  06EA  0827               	movf	utoa@val,w
  2346  06EB  00A2               	movwf	?___lwdiv+2
  2347  06EC  2705  120A  118A   	fcall	___lwdiv
  2348  06EF  0821               	movf	?___lwdiv+1,w
  2349  06F0  00A8               	movwf	utoa@val+1
  2350  06F1  0820               	movf	?___lwdiv,w
  2351  06F2  00A7               	movwf	utoa@val
  2352  06F3  300A               	movlw	10
  2353  06F4  022D               	subwf	utoa@c,w
  2354  06F5  1C03               	skipc
  2355  06F6  2EF9               	goto	l4382
  2356  06F7  3007               	movlw	7
  2357  06F8  07AD               	addwf	utoa@c,f
  2358  06F9                     l4382:	
  2359  06F9  3030               	movlw	48
  2360  06FA  07AD               	addwf	utoa@c,f
  2361  06FB  082E               	movf	utoa@buf,w
  2362  06FC  0084               	movwf	4
  2363  06FD  082D               	movf	utoa@c,w
  2364  06FE  0080               	movwf	0
  2365  06FF  03AE               	decf	utoa@buf,f
  2366  0700  0828               	movf	utoa@val+1,w
  2367  0701  0427               	iorwf	utoa@val,w
  2368  0702  1903               	btfsc	3,2
  2369  0703  0008               	return
  2370  0704  2ED7               	goto	l6511
  2371  0705                     __end_of_utoa:	
  2372  0705                     __ptext632:	
  2373 ;; =============== function ___lwmod ends ============
  2374                           
  2375                           
  2376 ;; *************** function ___lwdiv *****************
  2377 ;; Defined at:
  2378 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  divisor         2    0[BANK0 ] unsigned int 
  2381 ;;  dividend        2    2[BANK0 ] unsigned int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  quotient        2    4[BANK0 ] unsigned int 
  2384 ;;  counter         1    6[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  2    0[BANK0 ] unsigned int 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 160/0
  2391 ;;		On exit  : 160/0
  2392 ;;		Unchanged: FFE9F/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       4       0       0       0
  2395 ;;      Locals:         0       3       0       0       0
  2396 ;;      Temps:          0       0       0       0       0
  2397 ;;      Totals:         0       7       0       0       0
  2398 ;;Total ram usage:        7 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    3
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_utoa
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407  0705                     ___lwdiv:	
  2408                           
  2409                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2410  0705  01A4               	clrf	___lwdiv@quotient
  2411  0706  01A5               	clrf	___lwdiv@quotient+1
  2412  0707  0821               	movf	___lwdiv@divisor+1,w
  2413  0708  0420               	iorwf	___lwdiv@divisor,w
  2414  0709  1903               	skipnz
  2415  070A  2F2A               	goto	l6405
  2416  070B  01A6               	clrf	___lwdiv@counter
  2417  070C                     L28:	
  2418  070C  0AA6               	incf	___lwdiv@counter,f
  2419  070D  1BA1               	btfsc	___lwdiv@divisor+1,7
  2420  070E  2F13               	goto	l6393
  2421  070F  1003               	clrc
  2422  0710  0DA0               	rlf	___lwdiv@divisor,f
  2423  0711  0DA1               	rlf	___lwdiv@divisor+1,f
  2424  0712  2F0C               	goto	L28
  2425  0713                     l6393:	
  2426  0713  1003               	clrc
  2427  0714  0DA4               	rlf	___lwdiv@quotient,f
  2428  0715  0DA5               	rlf	___lwdiv@quotient+1,f
  2429  0716  0821               	movf	___lwdiv@divisor+1,w
  2430  0717  0223               	subwf	___lwdiv@dividend+1,w
  2431  0718  1D03               	skipz
  2432  0719  2F1C               	goto	u1885
  2433  071A  0820               	movf	___lwdiv@divisor,w
  2434  071B  0222               	subwf	___lwdiv@dividend,w
  2435  071C                     u1885:	
  2436  071C  1C03               	skipc
  2437  071D  2F26               	goto	L29
  2438  071E  0820               	movf	___lwdiv@divisor,w
  2439  071F  02A2               	subwf	___lwdiv@dividend,f
  2440  0720  0821               	movf	___lwdiv@divisor+1,w
  2441  0721  1C03               	skipc
  2442  0722  03A3               	decf	___lwdiv@dividend+1,f
  2443  0723  02A3               	subwf	___lwdiv@dividend+1,f
  2444  0724  1424               	bsf	___lwdiv@quotient,0
  2445  0725  1003               	clrc
  2446  0726                     L29:	
  2447  0726  0CA1               	rrf	___lwdiv@divisor+1,f
  2448  0727  0CA0               	rrf	___lwdiv@divisor,f
  2449  0728  0BA6               	decfsz	___lwdiv@counter,f
  2450  0729  2F13               	goto	l6393
  2451  072A                     l6405:	
  2452  072A  0825               	movf	___lwdiv@quotient+1,w
  2453  072B  00A1               	movwf	?___lwdiv+1
  2454  072C  0824               	movf	___lwdiv@quotient,w
  2455  072D  00A0               	movwf	?___lwdiv
  2456  072E  0008               	return
  2457  072F                     __end_of___lwdiv:	
  2458  072F                     __ptext631:	
  2459 ;; =============== function ___ftpack ends ============
  2460                           
  2461                           
  2462 ;; *************** function ___lwmod *****************
  2463 ;; Defined at:
  2464 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  divisor         2    0[BANK0 ] unsigned int 
  2467 ;;  dividend        2    2[BANK0 ] unsigned int 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  counter         1    4[BANK0 ] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  2    0[BANK0 ] unsigned int 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 160/0
  2476 ;;		On exit  : 160/0
  2477 ;;		Unchanged: FFE9F/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2479 ;;      Params:         0       4       0       0       0
  2480 ;;      Locals:         0       1       0       0       0
  2481 ;;      Temps:          0       0       0       0       0
  2482 ;;      Totals:         0       5       0       0       0
  2483 ;;Total ram usage:        5 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    3
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_utoa
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492  072F                     ___lwmod:	
  2493                           
  2494                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2495  072F  0821               	movf	___lwmod@divisor+1,w
  2496  0730  0420               	iorwf	___lwmod@divisor,w
  2497  0731  1903               	skipnz
  2498  0732  2F4E               	goto	l6425
  2499  0733  01A4               	clrf	___lwmod@counter
  2500  0734                     L26:	
  2501  0734  0AA4               	incf	___lwmod@counter,f
  2502  0735  1BA1               	btfsc	___lwmod@divisor+1,7
  2503  0736  2F3B               	goto	l6417
  2504  0737  1003               	clrc
  2505  0738  0DA0               	rlf	___lwmod@divisor,f
  2506  0739  0DA1               	rlf	___lwmod@divisor+1,f
  2507  073A  2F34               	goto	L26
  2508  073B                     l6417:	
  2509  073B  0821               	movf	___lwmod@divisor+1,w
  2510  073C  0223               	subwf	___lwmod@dividend+1,w
  2511  073D  1D03               	skipz
  2512  073E  2F41               	goto	u1925
  2513  073F  0820               	movf	___lwmod@divisor,w
  2514  0740  0222               	subwf	___lwmod@dividend,w
  2515  0741                     u1925:	
  2516  0741  1C03               	skipc
  2517  0742  2F4A               	goto	L27
  2518  0743  0820               	movf	___lwmod@divisor,w
  2519  0744  02A2               	subwf	___lwmod@dividend,f
  2520  0745  0821               	movf	___lwmod@divisor+1,w
  2521  0746  1C03               	skipc
  2522  0747  03A3               	decf	___lwmod@dividend+1,f
  2523  0748  02A3               	subwf	___lwmod@dividend+1,f
  2524  0749  1003               	clrc
  2525  074A                     L27:	
  2526  074A  0CA1               	rrf	___lwmod@divisor+1,f
  2527  074B  0CA0               	rrf	___lwmod@divisor,f
  2528  074C  0BA4               	decfsz	___lwmod@counter,f
  2529  074D  2F3B               	goto	l6417
  2530  074E                     l6425:	
  2531  074E  0823               	movf	___lwmod@dividend+1,w
  2532  074F  00A1               	movwf	?___lwmod+1
  2533  0750  0822               	movf	___lwmod@dividend,w
  2534  0751  00A0               	movwf	?___lwmod
  2535  0752  0008               	return
  2536  0753                     __end_of___lwmod:	
  2537  0753                     PL3:	
  2538  0753  00A1               	movwf	(_printBuffer^(0+128)+1)
  2539  0754  0841               	movf	(_currentTemperatureBuffer^(0+128)+1),w
  2540  0755  00A2               	movwf	(_printBuffer^(0+128)+2)
  2541  0756  0842               	movf	(_currentTemperatureBuffer^(0+128)+2),w
  2542  0757  00A3               	movwf	(_printBuffer^(0+128)+3)
  2543  0758  3043               	movlw	67
  2544  0759  00A4               	movwf	(_printBuffer^(0+128)+4)
  2545  075A  01A5               	clrf	(_printBuffer^(0+128)+5)
  2546  075B  0008               	return
  2547  075C                     PL5:	
  2548  075C  00A1               	movwf	(_printBuffer^(0+128)+1)
  2549  075D  00A2               	movwf	(_printBuffer^(0+128)+2)
  2550  075E  0840               	movf	_currentTemperatureBuffer^(0+128),w
  2551  075F  00A3               	movwf	(_printBuffer^(0+128)+3)
  2552  0760  3043               	movlw	67
  2553  0761  00A4               	movwf	(_printBuffer^(0+128)+4)
  2554  0762  01A5               	clrf	(_printBuffer^(0+128)+5)
  2555  0763  0008               	return
  2556  0764                     PL12:	
  2557  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0765  0836               	movf	vSendTempToBuffer@convData+1,w
  2559  0766  3A80               	xorlw	128
  2560  0767  00FF               	movwf	127
  2561  0768  307F               	movlw	127
  2562  0769  027F               	subwf	127,w
  2563  076A  0008               	return
  2564  076B                     PL13:	
  2565  076B  00A2               	movwf	(_printBuffer^(0+128)+2)
  2566  076C  0841               	movf	(_currentTemperatureBuffer^(0+128)+1),w
  2567  076D  00A3               	movwf	(_printBuffer^(0+128)+3)
  2568  076E  3043               	movlw	67
  2569  076F  00A4               	movwf	(_printBuffer^(0+128)+4)
  2570  0770  01A5               	clrf	(_printBuffer^(0+128)+5)
  2571  0771  0008               	return
  2572                           
  2573                           	psect	text621
  2574  0011                     __ptext621:	
  2575 ;; =============== function _itoa ends ============
  2576                           
  2577                           
  2578 ;; *************** function _calgulateTemp *****************
  2579 ;; Defined at:
  2580 ;;		line 729 in file "../src/main.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  milliVolt       2   67[BANK0 ] int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  T1_             2   77[BANK0 ] int 
  2585 ;;  V1_             2   75[BANK0 ] int 
  2586 ;;  T2_             2   73[BANK0 ] int 
  2587 ;;  V2_             2   71[BANK0 ] int 
  2588 ;;  temperature     2   69[BANK0 ] int 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2   67[BANK0 ] int 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 160/100
  2595 ;;		On exit  : 60/0
  2596 ;;		Unchanged: FFE00/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       2       0       0       0
  2599 ;;      Locals:         0      10       0       0       0
  2600 ;;      Temps:          0       0       0       0       0
  2601 ;;      Totals:         0      12       0       0       0
  2602 ;;Total ram usage:       12 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    5
  2605 ;; This function calls:
  2606 ;;		___awtoft
  2607 ;;		___ftdiv
  2608 ;;		___ftmul
  2609 ;;		___ftadd
  2610 ;;		___fttol
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615  0011                     _calgulateTemp:	
  2616                           
  2617                           ;main.c: 730: signed int V1_, V2_, T1_, T2_;
  2618                           ;main.c: 731: signed int temperature;
  2619                           ;main.c: 732: if (milliVolt > 1247) {
  2620                           
  2621                           ; Regs used in _calgulateTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2622  0011  0864               	movf	calgulateTemp@milliVolt+1,w
  2623  0012  3A80               	xorlw	128
  2624  0013  00FF               	movwf	127
  2625  0014  3084               	movlw	132
  2626  0015  027F               	subwf	127,w
  2627  0016  1D03               	skipz
  2628  0017  281A               	goto	u2465
  2629  0018  30E0               	movlw	224
  2630  0019  0263               	subwf	calgulateTemp@milliVolt,w
  2631  001A                     u2465:	
  2632  001A  1C03               	skipc
  2633  001B  2849               	goto	l6743
  2634                           
  2635                           ;main.c: 733: V1_ = V1[0];
  2636  001C  302D               	movlw	_V1-__stringbase
  2637  001D  0084               	movwf	4
  2638  001E  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2639  0023  23E0               	call	PL14	;select bank 0
  2640  0024  00EB               	movwf	calgulateTemp@V1_
  2641  0025  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2642  002A  00EC               	movwf	calgulateTemp@V1_+1
  2643                           
  2644                           ;main.c: 734: V2_ = V2[0];
  2645  002B  3043               	movlw	_V2-__stringbase
  2646  002C  0084               	movwf	4
  2647  002D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2648  0032  00E7               	movwf	calgulateTemp@V2_
  2649  0033  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2650  0038  00E8               	movwf	calgulateTemp@V2_+1
  2651                           
  2652                           ;main.c: 735: T1_ = T1[0];
  2653  0039  3001               	movlw	_T1-__stringbase
  2654  003A  0084               	movwf	4
  2655  003B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2656  0040  00ED               	movwf	calgulateTemp@T1_
  2657  0041  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2658  0046  00EE               	movwf	calgulateTemp@T1_+1
  2659                           
  2660                           ;main.c: 736: T2_ = T2[0];
  2661  0047  3017               	movlw	_T2-__stringbase
  2662  0048  2A64               	goto	L23
  2663  0049                     l6743:	
  2664                           ;main.c: 737: } else if (milliVolt > 1141) {
  2665                           
  2666  0049  23C1  120A  118A   	fcall	PL8	;call to abstracted procedure
  2667  004C  1D03               	skipz
  2668  004D  2850               	goto	u2475
  2669  004E  3076               	movlw	118
  2670  004F  0263               	subwf	calgulateTemp@milliVolt,w
  2671  0050                     u2475:	
  2672  0050  1C03               	skipc
  2673  0051  287F               	goto	l6747
  2674                           
  2675                           ;main.c: 738: V1_ = V1[1];
  2676  0052  302F               	movlw	(_V1-__stringbase+2)
  2677  0053  0084               	movwf	4
  2678  0054  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2679  0059  23E0               	call	PL14	;select bank 0
  2680  005A  00EB               	movwf	calgulateTemp@V1_
  2681  005B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2682  0060  00EC               	movwf	calgulateTemp@V1_+1
  2683                           
  2684                           ;main.c: 739: V2_ = V2[1];
  2685  0061  3045               	movlw	(_V2-__stringbase+2)
  2686  0062  0084               	movwf	4
  2687  0063  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2688  0068  00E7               	movwf	calgulateTemp@V2_
  2689  0069  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2690  006E  00E8               	movwf	calgulateTemp@V2_+1
  2691                           
  2692                           ;main.c: 740: T1_ = T1[1];
  2693  006F  3003               	movlw	(_T1-__stringbase+2)
  2694  0070  0084               	movwf	4
  2695  0071  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2696  0076  00ED               	movwf	calgulateTemp@T1_
  2697  0077  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2698  007C  00EE               	movwf	calgulateTemp@T1_+1
  2699                           
  2700                           ;main.c: 741: T2_ = T2[1];
  2701  007D  3019               	movlw	(_T2-__stringbase+2)
  2702  007E  2A64               	goto	L23
  2703  007F                     l6747:	
  2704                           ;main.c: 742: } else if (milliVolt > 1034) {
  2705                           
  2706  007F  23C1  120A  118A   	fcall	PL8	;call to abstracted procedure
  2707  0082  1D03               	skipz
  2708  0083  2886               	goto	u2485
  2709  0084  300B               	movlw	11
  2710  0085  0263               	subwf	calgulateTemp@milliVolt,w
  2711  0086                     u2485:	
  2712  0086  1C03               	skipc
  2713  0087  28B5               	goto	l6751
  2714                           
  2715                           ;main.c: 743: V1_ = V1[2];
  2716  0088  3031               	movlw	(_V1-__stringbase+4)
  2717  0089  0084               	movwf	4
  2718  008A  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2719  008F  23E0               	call	PL14	;select bank 0
  2720  0090  00EB               	movwf	calgulateTemp@V1_
  2721  0091  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2722  0096  00EC               	movwf	calgulateTemp@V1_+1
  2723                           
  2724                           ;main.c: 744: V2_ = V2[2];
  2725  0097  3047               	movlw	(_V2-__stringbase+4)
  2726  0098  0084               	movwf	4
  2727  0099  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2728  009E  00E7               	movwf	calgulateTemp@V2_
  2729  009F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2730  00A4  00E8               	movwf	calgulateTemp@V2_+1
  2731                           
  2732                           ;main.c: 745: T1_ = T1[2];
  2733  00A5  3005               	movlw	(_T1-__stringbase+4)
  2734  00A6  0084               	movwf	4
  2735  00A7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2736  00AC  00ED               	movwf	calgulateTemp@T1_
  2737  00AD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2738  00B2  00EE               	movwf	calgulateTemp@T1_+1
  2739                           
  2740                           ;main.c: 746: T2_ = T2[2];
  2741  00B3  301B               	movlw	(_T2-__stringbase+4)
  2742  00B4  2A64               	goto	L23
  2743  00B5                     l6751:	
  2744                           ;main.c: 747: } else if (milliVolt > 925) {
  2745                           
  2746  00B5  23B1  120A  118A   	fcall	PL6	;call to abstracted procedure
  2747  00B8  1D03               	skipz
  2748  00B9  28BC               	goto	u2495
  2749  00BA  309E               	movlw	158
  2750  00BB  0263               	subwf	calgulateTemp@milliVolt,w
  2751  00BC                     u2495:	
  2752  00BC  1C03               	skipc
  2753  00BD  28EB               	goto	l6755
  2754                           
  2755                           ;main.c: 748: V1_ = V1[3];
  2756  00BE  3033               	movlw	(_V1-__stringbase+6)
  2757  00BF  0084               	movwf	4
  2758  00C0  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2759  00C5  23E0               	call	PL14	;select bank 0
  2760  00C6  00EB               	movwf	calgulateTemp@V1_
  2761  00C7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2762  00CC  00EC               	movwf	calgulateTemp@V1_+1
  2763                           
  2764                           ;main.c: 749: V2_ = V2[3];
  2765  00CD  3049               	movlw	(_V2-__stringbase+6)
  2766  00CE  0084               	movwf	4
  2767  00CF  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2768  00D4  00E7               	movwf	calgulateTemp@V2_
  2769  00D5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2770  00DA  00E8               	movwf	calgulateTemp@V2_+1
  2771                           
  2772                           ;main.c: 750: T1_ = T1[3];
  2773  00DB  3007               	movlw	(_T1-__stringbase+6)
  2774  00DC  0084               	movwf	4
  2775  00DD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2776  00E2  00ED               	movwf	calgulateTemp@T1_
  2777  00E3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2778  00E8  00EE               	movwf	calgulateTemp@T1_+1
  2779                           
  2780                           ;main.c: 751: T2_ = T2[3];
  2781  00E9  301D               	movlw	(_T2-__stringbase+6)
  2782  00EA  2A64               	goto	L23
  2783  00EB                     l6755:	
  2784                           ;main.c: 752: } else if (milliVolt > 816) {
  2785                           
  2786  00EB  23B1  120A  118A   	fcall	PL6	;call to abstracted procedure
  2787  00EE  1D03               	skipz
  2788  00EF  28F2               	goto	u2505
  2789  00F0  3031               	movlw	49
  2790  00F1  0263               	subwf	calgulateTemp@milliVolt,w
  2791  00F2                     u2505:	
  2792  00F2  1C03               	skipc
  2793  00F3  2921               	goto	l6759
  2794                           
  2795                           ;main.c: 753: V1_ = V1[4];
  2796  00F4  3035               	movlw	(_V1-__stringbase+8)
  2797  00F5  0084               	movwf	4
  2798  00F6  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2799  00FB  23E0               	call	PL14	;select bank 0
  2800  00FC  00EB               	movwf	calgulateTemp@V1_
  2801  00FD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2802  0102  00EC               	movwf	calgulateTemp@V1_+1
  2803                           
  2804                           ;main.c: 754: V2_ = V2[4];
  2805  0103  304B               	movlw	(_V2-__stringbase+8)
  2806  0104  0084               	movwf	4
  2807  0105  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2808  010A  00E7               	movwf	calgulateTemp@V2_
  2809  010B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2810  0110  00E8               	movwf	calgulateTemp@V2_+1
  2811                           
  2812                           ;main.c: 755: T1_ = T1[4];
  2813  0111  3009               	movlw	(_T1-__stringbase+8)
  2814  0112  0084               	movwf	4
  2815  0113  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2816  0118  00ED               	movwf	calgulateTemp@T1_
  2817  0119  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2818  011E  00EE               	movwf	calgulateTemp@T1_+1
  2819                           
  2820                           ;main.c: 756: T2_ = T2[4];
  2821  011F  301F               	movlw	(_T2-__stringbase+8)
  2822  0120  2A64               	goto	L23
  2823  0121                     l6759:	
  2824                           ;main.c: 757: } else if (milliVolt > 704) {
  2825                           
  2826  0121  23B9  120A  118A   	fcall	PL7	;call to abstracted procedure
  2827  0124  1D03               	skipz
  2828  0125  2928               	goto	u2515
  2829  0126  30C1               	movlw	193
  2830  0127  0263               	subwf	calgulateTemp@milliVolt,w
  2831  0128                     u2515:	
  2832  0128  1C03               	skipc
  2833  0129  2957               	goto	l6763
  2834                           
  2835                           ;main.c: 758: V1_ = V1[5];
  2836  012A  3037               	movlw	(_V1-__stringbase+10)
  2837  012B  0084               	movwf	4
  2838  012C  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2839  0131  23E0               	call	PL14	;select bank 0
  2840  0132  00EB               	movwf	calgulateTemp@V1_
  2841  0133  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2842  0138  00EC               	movwf	calgulateTemp@V1_+1
  2843                           
  2844                           ;main.c: 759: V2_ = V2[5];
  2845  0139  304D               	movlw	(_V2-__stringbase+10)
  2846  013A  0084               	movwf	4
  2847  013B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2848  0140  00E7               	movwf	calgulateTemp@V2_
  2849  0141  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2850  0146  00E8               	movwf	calgulateTemp@V2_+1
  2851                           
  2852                           ;main.c: 760: T1_ = T1[5];
  2853  0147  300B               	movlw	(_T1-__stringbase+10)
  2854  0148  0084               	movwf	4
  2855  0149  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2856  014E  00ED               	movwf	calgulateTemp@T1_
  2857  014F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2858  0154  00EE               	movwf	calgulateTemp@T1_+1
  2859                           
  2860                           ;main.c: 761: T2_ = T2[5];
  2861  0155  3021               	movlw	(_T2-__stringbase+10)
  2862  0156  2A64               	goto	L23
  2863  0157                     l6763:	
  2864                           ;main.c: 762: } else if (milliVolt > 591) {
  2865                           
  2866  0157  23B9  120A  118A   	fcall	PL7	;call to abstracted procedure
  2867  015A  1D03               	skipz
  2868  015B  295E               	goto	u2525
  2869  015C  3050               	movlw	80
  2870  015D  0263               	subwf	calgulateTemp@milliVolt,w
  2871  015E                     u2525:	
  2872  015E  1C03               	skipc
  2873  015F  298D               	goto	l6767
  2874                           
  2875                           ;main.c: 763: V1_ = V1[6];
  2876  0160  3039               	movlw	(_V1-__stringbase+12)
  2877  0161  0084               	movwf	4
  2878  0162  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2879  0167  23E0               	call	PL14	;select bank 0
  2880  0168  00EB               	movwf	calgulateTemp@V1_
  2881  0169  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2882  016E  00EC               	movwf	calgulateTemp@V1_+1
  2883                           
  2884                           ;main.c: 764: V2_ = V2[6];
  2885  016F  304F               	movlw	(_V2-__stringbase+12)
  2886  0170  0084               	movwf	4
  2887  0171  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2888  0176  00E7               	movwf	calgulateTemp@V2_
  2889  0177  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2890  017C  00E8               	movwf	calgulateTemp@V2_+1
  2891                           
  2892                           ;main.c: 765: T1_ = T1[6];
  2893  017D  300D               	movlw	(_T1-__stringbase+12)
  2894  017E  0084               	movwf	4
  2895  017F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2896  0184  00ED               	movwf	calgulateTemp@T1_
  2897  0185  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2898  018A  00EE               	movwf	calgulateTemp@T1_+1
  2899                           
  2900                           ;main.c: 766: T2_ = T2[6];
  2901  018B  3023               	movlw	(_T2-__stringbase+12)
  2902  018C  2A64               	goto	L23
  2903  018D                     l6767:	
  2904                           ;main.c: 767: } else if (milliVolt > 476) {
  2905                           
  2906  018D  23C9  120A  118A   	fcall	PL9	;call to abstracted procedure
  2907  0190  1D03               	skipz
  2908  0191  2994               	goto	u2535
  2909  0192  30DD               	movlw	221
  2910  0193  0263               	subwf	calgulateTemp@milliVolt,w
  2911  0194                     u2535:	
  2912  0194  1C03               	skipc
  2913  0195  29C3               	goto	l6771
  2914                           
  2915                           ;main.c: 768: V1_ = V1[7];
  2916  0196  303B               	movlw	(_V1-__stringbase+14)
  2917  0197  0084               	movwf	4
  2918  0198  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2919  019D  23E0               	call	PL14	;select bank 0
  2920  019E  00EB               	movwf	calgulateTemp@V1_
  2921  019F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2922  01A4  00EC               	movwf	calgulateTemp@V1_+1
  2923                           
  2924                           ;main.c: 769: V2_ = V2[7];
  2925  01A5  3051               	movlw	(_V2-__stringbase+14)
  2926  01A6  0084               	movwf	4
  2927  01A7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2928  01AC  00E7               	movwf	calgulateTemp@V2_
  2929  01AD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2930  01B2  00E8               	movwf	calgulateTemp@V2_+1
  2931                           
  2932                           ;main.c: 770: T1_ = T1[7];
  2933  01B3  300F               	movlw	(_T1-__stringbase+14)
  2934  01B4  0084               	movwf	4
  2935  01B5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2936  01BA  00ED               	movwf	calgulateTemp@T1_
  2937  01BB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2938  01C0  00EE               	movwf	calgulateTemp@T1_+1
  2939                           
  2940                           ;main.c: 771: T2_ = T2[7];
  2941  01C1  3025               	movlw	(_T2-__stringbase+14)
  2942  01C2  2A64               	goto	L23
  2943  01C3                     l6771:	
  2944                           ;main.c: 772: } else if (milliVolt > 361) {
  2945                           
  2946  01C3  23C9  120A  118A   	fcall	PL9	;call to abstracted procedure
  2947  01C6  1D03               	skipz
  2948  01C7  29CA               	goto	u2545
  2949  01C8  306A               	movlw	106
  2950  01C9  0263               	subwf	calgulateTemp@milliVolt,w
  2951  01CA                     u2545:	
  2952  01CA  1C03               	skipc
  2953  01CB  29F9               	goto	l6775
  2954                           
  2955                           ;main.c: 773: V1_ = V1[8];
  2956  01CC  303D               	movlw	(_V1-__stringbase+16)
  2957  01CD  0084               	movwf	4
  2958  01CE  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2959  01D3  23E0               	call	PL14	;select bank 0
  2960  01D4  00EB               	movwf	calgulateTemp@V1_
  2961  01D5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2962  01DA  00EC               	movwf	calgulateTemp@V1_+1
  2963                           
  2964                           ;main.c: 774: V2_ = V2[8];
  2965  01DB  3053               	movlw	(_V2-__stringbase+16)
  2966  01DC  0084               	movwf	4
  2967  01DD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2968  01E2  00E7               	movwf	calgulateTemp@V2_
  2969  01E3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2970  01E8  00E8               	movwf	calgulateTemp@V2_+1
  2971                           
  2972                           ;main.c: 775: T1_ = T1[8];
  2973  01E9  3011               	movlw	(_T1-__stringbase+16)
  2974  01EA  0084               	movwf	4
  2975  01EB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2976  01F0  00ED               	movwf	calgulateTemp@T1_
  2977  01F1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2978  01F6  00EE               	movwf	calgulateTemp@T1_+1
  2979                           
  2980                           ;main.c: 776: T2_ = T2[8];
  2981  01F7  3027               	movlw	(_T2-__stringbase+16)
  2982  01F8  2A64               	goto	L23
  2983  01F9                     l6775:	
  2984                           ;main.c: 777: } else if (milliVolt > 243) {
  2985                           
  2986  01F9  23D1  120A  118A   	fcall	PL10	;call to abstracted procedure
  2987  01FC  1D03               	skipz
  2988  01FD  2A00               	goto	u2555
  2989  01FE  30F4               	movlw	244
  2990  01FF  0263               	subwf	calgulateTemp@milliVolt,w
  2991  0200                     u2555:	
  2992  0200  1C03               	skipc
  2993  0201  2A2F               	goto	l6779
  2994                           
  2995                           ;main.c: 778: V1_ = V1[9];
  2996  0202  303F               	movlw	(_V1-__stringbase+18)
  2997  0203  0084               	movwf	4
  2998  0204  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2999  0209  23E0               	call	PL14	;select bank 0
  3000  020A  00EB               	movwf	calgulateTemp@V1_
  3001  020B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3002  0210  00EC               	movwf	calgulateTemp@V1_+1
  3003                           
  3004                           ;main.c: 779: V2_ = V2[9];
  3005  0211  3055               	movlw	(_V2-__stringbase+18)
  3006  0212  0084               	movwf	4
  3007  0213  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3008  0218  00E7               	movwf	calgulateTemp@V2_
  3009  0219  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3010  021E  00E8               	movwf	calgulateTemp@V2_+1
  3011                           
  3012                           ;main.c: 780: T1_ = T1[9];
  3013  021F  3013               	movlw	(_T1-__stringbase+18)
  3014  0220  0084               	movwf	4
  3015  0221  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3016  0226  00ED               	movwf	calgulateTemp@T1_
  3017  0227  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3018  022C  00EE               	movwf	calgulateTemp@T1_+1
  3019                           
  3020                           ;main.c: 781: T2_ = T2[9];
  3021  022D  3029               	movlw	(_T2-__stringbase+18)
  3022  022E  2A64               	goto	L23
  3023  022F                     l6779:	
  3024                           ;main.c: 782: } else if (milliVolt > 182) {
  3025                           
  3026  022F  23D1  120A  118A   	fcall	PL10	;call to abstracted procedure
  3027  0232  1D03               	skipz
  3028  0233  2A36               	goto	u2565
  3029  0234  30B7               	movlw	183
  3030  0235  0263               	subwf	calgulateTemp@milliVolt,w
  3031  0236                     u2565:	
  3032  0236  1C03               	skipc
  3033  0237  2A71               	goto	l6783
  3034                           
  3035                           ;main.c: 783: V1_ = V1[10];
  3036  0238  3041               	movlw	(_V1-__stringbase+20)
  3037  0239  0084               	movwf	4
  3038  023A  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3039  023F  23E0               	call	PL14	;select bank 0
  3040  0240  00EB               	movwf	calgulateTemp@V1_
  3041  0241  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3042  0246  00EC               	movwf	calgulateTemp@V1_+1
  3043                           
  3044                           ;main.c: 784: V2_ = V2[10];
  3045  0247  3057               	movlw	(_V2-__stringbase+20)
  3046  0248  0084               	movwf	4
  3047  0249  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3048  024E  00E7               	movwf	calgulateTemp@V2_
  3049  024F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3050  0254  00E8               	movwf	calgulateTemp@V2_+1
  3051                           
  3052                           ;main.c: 785: T1_ = T1[10];
  3053  0255  3015               	movlw	(_T1-__stringbase+20)
  3054  0256  0084               	movwf	4
  3055  0257  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3056  025C  00ED               	movwf	calgulateTemp@T1_
  3057  025D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3058  0262  00EE               	movwf	calgulateTemp@T1_+1
  3059                           
  3060                           ;main.c: 786: T2_ = T2[10];
  3061  0263  302B               	movlw	(_T2-__stringbase+20)
  3062  0264                     L23:	
  3063  0264  0084               	movwf	4
  3064  0265  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3065  026A  00E9               	movwf	calgulateTemp@T2_
  3066  026B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  3067  0270  00EA               	movwf	calgulateTemp@T2_+1
  3068  0271                     l6783:	
  3069  0271  23E0               	call	PL14	;select bank 0
  3070                           
  3071                           ;main.c: 787: }
  3072                           ;main.c: 789: temperature = (int) ((milliVolt - V1_)*((float) (T2_ - T1_) / (float) (V2_
      +                           - V1_)) + T1_);
  3073  0272  0864               	movf	calgulateTemp@milliVolt+1,w
  3074  0273  00B6               	movwf	?___awtoft+1
  3075  0274  0863               	movf	calgulateTemp@milliVolt,w
  3076  0275  23A9  120A  118A   	fcall	PL4	;call to abstracted procedure
  3077  0278  22F5  120A  118A   	fcall	___awtoft
  3078  027B  0835               	movf	?___awtoft,w
  3079  027C  00CB               	movwf	?___ftmul+3
  3080  027D  0836               	movf	?___awtoft+1,w
  3081  027E  00CC               	movwf	?___ftmul+4
  3082  027F  0837               	movf	?___awtoft+2,w
  3083  0280  00CD               	movwf	?___ftmul+5
  3084  0281  086A               	movf	calgulateTemp@T2_+1,w
  3085  0282  00B6               	movwf	?___awtoft+1
  3086  0283  0869               	movf	calgulateTemp@T2_,w
  3087  0284  00B5               	movwf	?___awtoft
  3088  0285  086D               	movf	calgulateTemp@T1_,w
  3089  0286  02B5               	subwf	?___awtoft,f
  3090  0287  086E               	movf	calgulateTemp@T1_+1,w
  3091  0288  1C03               	skipc
  3092  0289  03B6               	decf	?___awtoft+1,f
  3093  028A  02B6               	subwf	?___awtoft+1,f
  3094  028B  22F5  120A  118A   	fcall	___awtoft
  3095  028E  0835               	movf	?___awtoft,w
  3096  028F  00BC               	movwf	?___ftdiv+3
  3097  0290  0836               	movf	?___awtoft+1,w
  3098  0291  00BD               	movwf	?___ftdiv+4
  3099  0292  0837               	movf	?___awtoft+2,w
  3100  0293  00BE               	movwf	?___ftdiv+5
  3101  0294  0868               	movf	calgulateTemp@V2_+1,w
  3102  0295  00B6               	movwf	?___awtoft+1
  3103  0296  0867               	movf	calgulateTemp@V2_,w
  3104  0297  23A9  120A  118A   	fcall	PL4	;call to abstracted procedure
  3105  029A  22F5               	fcall	___awtoft
  3106  029B  0835               	movf	?___awtoft,w
  3107  029C  00B9               	movwf	?___ftdiv
  3108  029D  0836               	movf	?___awtoft+1,w
  3109  029E  00BA               	movwf	?___ftdiv+1
  3110  029F  0837               	movf	?___awtoft+2,w
  3111  02A0  00BB               	movwf	?___ftdiv+2
  3112  02A1  120A  118A  2772   	fcall	___ftdiv
      +       120A  118A         
  3113  02A6  0839               	movf	?___ftdiv,w
  3114  02A7  00C8               	movwf	?___ftmul
  3115  02A8  083A               	movf	?___ftdiv+1,w
  3116  02A9  00C9               	movwf	?___ftmul+1
  3117  02AA  083B               	movf	?___ftdiv+2,w
  3118  02AB  00CA               	movwf	?___ftmul+2
  3119  02AC  120A  158A  2675   	fcall	___ftmul
      +       120A  118A         
  3120  02B1  0848               	movf	?___ftmul,w
  3121  02B2  00DA               	movwf	?___ftadd+3
  3122  02B3  0849               	movf	?___ftmul+1,w
  3123  02B4  00DB               	movwf	?___ftadd+4
  3124  02B5  084A               	movf	?___ftmul+2,w
  3125  02B6  00DC               	movwf	?___ftadd+5
  3126  02B7  086E               	movf	calgulateTemp@T1_+1,w
  3127  02B8  00B6               	movwf	?___awtoft+1
  3128  02B9  086D               	movf	calgulateTemp@T1_,w
  3129  02BA  00B5               	movwf	?___awtoft
  3130  02BB  22F5               	fcall	___awtoft
  3131  02BC  0835               	movf	?___awtoft,w
  3132  02BD  00D7               	movwf	?___ftadd
  3133  02BE  0836               	movf	?___awtoft+1,w
  3134  02BF  00D8               	movwf	?___ftadd+1
  3135  02C0  0837               	movf	?___awtoft+2,w
  3136  02C1  00D9               	movwf	?___ftadd+2
  3137  02C2  120A  158A  254C   	fcall	___ftadd
      +       120A  118A         
  3138  02C7  0857               	movf	?___ftadd,w
  3139  02C8  00A8               	movwf	?___fttol
  3140  02C9  0858               	movf	?___ftadd+1,w
  3141  02CA  00A9               	movwf	?___fttol+1
  3142  02CB  0859               	movf	?___ftadd+2,w
  3143  02CC  00AA               	movwf	?___fttol+2
  3144  02CD  2310  120A  118A   	fcall	___fttol
  3145  02D0  0829               	movf	?___fttol+1,w
  3146  02D1  00E6               	movwf	calgulateTemp@temperature+1
  3147  02D2  0828               	movf	?___fttol,w
  3148  02D3  00E5               	movwf	calgulateTemp@temperature
  3149                           
  3150                           ;main.c: 790: if ((milliVolt < 183) || (milliVolt > 1299)) {
  3151  02D4  0864               	movf	calgulateTemp@milliVolt+1,w
  3152  02D5  3A80               	xorlw	128
  3153  02D6  00FF               	movwf	127
  3154  02D7  3080               	movlw	128
  3155  02D8  027F               	subwf	127,w
  3156  02D9  1D03               	skipz
  3157  02DA  2ADD               	goto	u2575
  3158  02DB  30B7               	movlw	183
  3159  02DC  0263               	subwf	calgulateTemp@milliVolt,w
  3160  02DD                     u2575:	
  3161  02DD  1C03               	skipc
  3162  02DE  2AEB               	goto	l6789
  3163  02DF  23E0               	call	PL14	;select bank 0
  3164  02E0  0864               	movf	calgulateTemp@milliVolt+1,w
  3165  02E1  3A80               	xorlw	128
  3166  02E2  00FF               	movwf	127
  3167  02E3  3085               	movlw	133
  3168  02E4  027F               	subwf	127,w
  3169  02E5  1D03               	skipz
  3170  02E6  2AE9               	goto	u2585
  3171  02E7  3014               	movlw	20
  3172  02E8  0263               	subwf	calgulateTemp@milliVolt,w
  3173  02E9                     u2585:	
  3174  02E9  1C03               	skipc
  3175  02EA  2AEF               	goto	l1313
  3176  02EB                     l6789:	
  3177                           
  3178                           ;main.c: 791: temperature = 255;
  3179  02EB  30FF               	movlw	255
  3180  02EC  23E0               	call	PL14	;select bank 0
  3181  02ED  00E5               	movwf	calgulateTemp@temperature
  3182  02EE  01E6               	clrf	calgulateTemp@temperature+1
  3183  02EF                     l1313:	
  3184  02EF  23E0               	call	PL14	;select bank 0
  3185                           
  3186                           ;main.c: 792: }
  3187                           ;main.c: 793: return temperature;
  3188  02F0  0866               	movf	calgulateTemp@temperature+1,w
  3189  02F1  00E4               	movwf	?_calgulateTemp+1
  3190  02F2  0865               	movf	calgulateTemp@temperature,w
  3191  02F3  00E3               	movwf	?_calgulateTemp
  3192  02F4  0008               	return
  3193  02F5                     __end_of_calgulateTemp:	
  3194  02F5                     __ptext624:	
  3195 ;; =============== function ___lwtoft ends ============
  3196                           
  3197                           
  3198 ;; *************** function ___awtoft *****************
  3199 ;; Defined at:
  3200 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  c               2   21[BANK0 ] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  sign            1   24[BANK0 ] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  3   21[BANK0 ] float 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, pclath, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 60/100
  3211 ;;		On exit  : 60/100
  3212 ;;		Unchanged: FFF9F/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3214 ;;      Params:         0       3       0       0       0
  3215 ;;      Locals:         0       1       0       0       0
  3216 ;;      Temps:          0       0       0       0       0
  3217 ;;      Totals:         0       4       0       0       0
  3218 ;;Total ram usage:        4 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    4
  3221 ;; This function calls:
  3222 ;;		___ftpack
  3223 ;; This function is called by:
  3224 ;;		_calgulateTemp
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227  02F5                     ___awtoft:	
  3228                           
  3229                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3230  02F5  01B8               	clrf	___awtoft@sign
  3231  02F6  1FB6               	btfss	___awtoft@c+1,7
  3232  02F7  2AFF               	goto	l6711
  3233  02F8  09B5               	comf	___awtoft@c,f
  3234  02F9  09B6               	comf	___awtoft@c+1,f
  3235  02FA  0AB5               	incf	___awtoft@c,f
  3236  02FB  1903               	skipnz
  3237  02FC  0AB6               	incf	___awtoft@c+1,f
  3238  02FD  01B8               	clrf	___awtoft@sign
  3239  02FE  0AB8               	incf	___awtoft@sign,f
  3240  02FF                     l6711:	
  3241  02FF  0835               	movf	___awtoft@c,w
  3242  0300  00A0               	movwf	?___ftpack
  3243  0301  0836               	movf	___awtoft@c+1,w
  3244  0302  00A1               	movwf	?___ftpack+1
  3245  0303  308E               	movlw	142
  3246  0304  01A2               	clrf	?___ftpack+2
  3247  0305  00A3               	movwf	?___ftpack+3
  3248  0306  0838               	movf	___awtoft@sign,w
  3249  0307  00A4               	movwf	?___ftpack+4
  3250  0308  236B               	fcall	___ftpack
  3251  0309  0820               	movf	?___ftpack,w
  3252  030A  00B5               	movwf	?___awtoft
  3253  030B  0821               	movf	?___ftpack+1,w
  3254  030C  00B6               	movwf	?___awtoft+1
  3255  030D  0822               	movf	?___ftpack+2,w
  3256  030E  00B7               	movwf	?___awtoft+2
  3257  030F  0008               	return
  3258  0310                     __end_of___awtoft:	
  3259  0310                     __ptext629:	
  3260 ;; =============== function _utoa ends ============
  3261                           
  3262                           
  3263 ;; *************** function ___fttol *****************
  3264 ;; Defined at:
  3265 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  f1              3    8[BANK0 ] float 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  lval            4   16[BANK0 ] unsigned long 
  3270 ;;  exp1            1   20[BANK0 ] unsigned char 
  3271 ;;  sign1           1   15[BANK0 ] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  4    8[BANK0 ] long 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 60/100
  3278 ;;		On exit  : 60/100
  3279 ;;		Unchanged: FFF9F/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       4       0       0       0
  3282 ;;      Locals:         0       6       0       0       0
  3283 ;;      Temps:          0       3       0       0       0
  3284 ;;      Totals:         0      13       0       0       0
  3285 ;;Total ram usage:       13 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    3
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_getTemperature
  3292 ;;		_calgulateTemp
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295  0310                     ___fttol:	
  3296                           
  3297                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3298  0310  23D9  120A  118A   	fcall	PL11	;call to abstracted procedure
  3299  0313  1003               	clrc
  3300  0314  0D2D               	rlf	??___fttol+1,w
  3301  0315  0D2E               	rlf	??___fttol+2,w
  3302  0316  00B4               	movwf	___fttol@exp1
  3303  0317  08B4               	movf	___fttol@exp1,f
  3304  0318  1D03               	skipz
  3305  0319  2B1F               	goto	l6461
  3306  031A                     l6459:	
  3307  031A  01A8               	clrf	?___fttol
  3308  031B  01A9               	clrf	?___fttol+1
  3309  031C  01AA               	clrf	?___fttol+2
  3310  031D  01AB               	clrf	?___fttol+3
  3311  031E  0008               	return
  3312  031F                     l6461:	
  3313  031F  23D9  120A  118A   	fcall	PL11	;call to abstracted procedure
  3314  0322  3017               	movlw	23
  3315  0323                     u2025:	
  3316  0323  1003               	clrc
  3317  0324  0CAE               	rrf	??___fttol+2,f
  3318  0325  0CAD               	rrf	??___fttol+1,f
  3319  0326  0CAC               	rrf	??___fttol,f
  3320  0327  3EFF               	addlw	-1
  3321  0328  1D03               	skipz
  3322  0329  2B23               	goto	u2025
  3323  032A  082C               	movf	??___fttol,w
  3324  032B  00AF               	movwf	___fttol@sign1
  3325  032C  17A9               	bsf	___fttol@f1+1,7
  3326  032D  01AA               	clrf	___fttol@f1+2
  3327  032E  0828               	movf	___fttol@f1,w
  3328  032F  00B0               	movwf	___fttol@lval
  3329  0330  0829               	movf	___fttol@f1+1,w
  3330  0331  00B1               	movwf	___fttol@lval+1
  3331  0332  082A               	movf	___fttol@f1+2,w
  3332  0333  00B2               	movwf	___fttol@lval+2
  3333  0334  308E               	movlw	142
  3334  0335  01B3               	clrf	___fttol@lval+3
  3335  0336  02B4               	subwf	___fttol@exp1,f
  3336  0337  1FB4               	btfss	___fttol@exp1,7
  3337  0338  2B46               	goto	l6481
  3338  0339  0834               	movf	___fttol@exp1,w
  3339  033A  3A80               	xorlw	128
  3340  033B  3E8F               	addlw	143
  3341  033C  1C03               	btfss	3,0
  3342  033D  2B1A               	goto	l6459
  3343  033E                     l6477:	
  3344  033E  1003               	clrc
  3345  033F  0CB3               	rrf	___fttol@lval+3,f
  3346  0340  0CB2               	rrf	___fttol@lval+2,f
  3347  0341  0CB1               	rrf	___fttol@lval+1,f
  3348  0342  0CB0               	rrf	___fttol@lval,f
  3349  0343  0FB4               	incfsz	___fttol@exp1,f
  3350  0344  2B3E               	goto	l6477
  3351  0345  2B54               	goto	l6487
  3352  0346                     l6481:	
  3353  0346  3018               	movlw	24
  3354  0347  0234               	subwf	___fttol@exp1,w
  3355  0348  1803               	btfsc	3,0
  3356  0349  2B1A               	goto	l6459
  3357  034A                     l4510:	
  3358  034A  08B4               	movf	___fttol@exp1,f
  3359  034B  1903               	btfsc	3,2
  3360  034C  2B54               	goto	l6487
  3361  034D  1003               	clrc
  3362  034E  0DB0               	rlf	___fttol@lval,f
  3363  034F  0DB1               	rlf	___fttol@lval+1,f
  3364  0350  0DB2               	rlf	___fttol@lval+2,f
  3365  0351  0DB3               	rlf	___fttol@lval+3,f
  3366  0352  03B4               	decf	___fttol@exp1,f
  3367  0353  2B4A               	goto	l4510
  3368  0354                     l6487:	
  3369  0354  082F               	movf	___fttol@sign1,w
  3370  0355  1903               	btfsc	3,2
  3371  0356  2B62               	goto	l6491
  3372  0357  09B0               	comf	___fttol@lval,f
  3373  0358  09B1               	comf	___fttol@lval+1,f
  3374  0359  09B2               	comf	___fttol@lval+2,f
  3375  035A  09B3               	comf	___fttol@lval+3,f
  3376  035B  0AB0               	incf	___fttol@lval,f
  3377  035C  1903               	skipnz
  3378  035D  0AB1               	incf	___fttol@lval+1,f
  3379  035E  1903               	skipnz
  3380  035F  0AB2               	incf	___fttol@lval+2,f
  3381  0360  1903               	skipnz
  3382  0361  0AB3               	incf	___fttol@lval+3,f
  3383  0362                     l6491:	
  3384  0362  0833               	movf	___fttol@lval+3,w
  3385  0363  00AB               	movwf	?___fttol+3
  3386  0364  0832               	movf	___fttol@lval+2,w
  3387  0365  00AA               	movwf	?___fttol+2
  3388  0366  0831               	movf	___fttol@lval+1,w
  3389  0367  00A9               	movwf	?___fttol+1
  3390  0368  0830               	movf	___fttol@lval,w
  3391  0369  00A8               	movwf	?___fttol
  3392  036A  0008               	return
  3393  036B                     __end_of___fttol:	
  3394  036B                     __ptext630:	
  3395 ;; =============== function ___fttol ends ============
  3396                           
  3397                           
  3398 ;; *************** function ___ftpack *****************
  3399 ;; Defined at:
  3400 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  arg             3    0[BANK0 ] unsigned um
  3403 ;;  exp             1    3[BANK0 ] unsigned char 
  3404 ;;  sign            1    4[BANK0 ] unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  3    0[BANK0 ] float 
  3409 ;; Registers used:
  3410 ;;		wreg, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 60/100
  3413 ;;		On exit  : 60/100
  3414 ;;		Unchanged: FFF9F/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3416 ;;      Params:         0       5       0       0       0
  3417 ;;      Locals:         0       0       0       0       0
  3418 ;;      Temps:          0       3       0       0       0
  3419 ;;      Totals:         0       8       0       0       0
  3420 ;;Total ram usage:        8 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    3
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		___ftadd
  3427 ;;		___ftdiv
  3428 ;;		___ftmul
  3429 ;;		___awtoft
  3430 ;;		___lwtoft
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433  036B                     ___ftpack:	
  3434                           
  3435                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3436  036B  0823               	movf	___ftpack@exp,w
  3437  036C  1903               	btfsc	3,2
  3438  036D  2B73               	goto	l6433
  3439  036E  0822               	movf	___ftpack@arg+2,w
  3440  036F  0421               	iorwf	___ftpack@arg+1,w
  3441  0370  0420               	iorwf	___ftpack@arg,w
  3442  0371  1D03               	skipz
  3443  0372  2B7C               	goto	l6439
  3444  0373                     l6433:	
  3445  0373  01A0               	clrf	?___ftpack
  3446  0374  01A1               	clrf	?___ftpack+1
  3447  0375  01A2               	clrf	?___ftpack+2
  3448  0376  0008               	return
  3449  0377                     l6437:	
  3450  0377  0AA3               	incf	___ftpack@exp,f
  3451  0378  1003               	clrc
  3452  0379  0CA2               	rrf	___ftpack@arg+2,f
  3453  037A  0CA1               	rrf	___ftpack@arg+1,f
  3454  037B  0CA0               	rrf	___ftpack@arg,f
  3455  037C                     l6439:	
  3456  037C  30FE               	movlw	254
  3457  037D  0522               	andwf	___ftpack@arg+2,w
  3458  037E  1903               	btfsc	3,2
  3459  037F  2B8B               	goto	l6443
  3460  0380  2B77               	goto	l6437
  3461  0381                     l6441:	
  3462  0381  0AA3               	incf	___ftpack@exp,f
  3463  0382  0AA0               	incf	___ftpack@arg,f
  3464  0383  1903               	skipnz
  3465  0384  0AA1               	incf	___ftpack@arg+1,f
  3466  0385  1903               	skipnz
  3467  0386  0AA2               	incf	___ftpack@arg+2,f
  3468  0387  1003               	clrc
  3469  0388  0CA2               	rrf	___ftpack@arg+2,f
  3470  0389  0CA1               	rrf	___ftpack@arg+1,f
  3471  038A  0CA0               	rrf	___ftpack@arg,f
  3472  038B                     l6443:	
  3473  038B  30FF               	movlw	255
  3474  038C  0522               	andwf	___ftpack@arg+2,w
  3475  038D  1903               	btfsc	3,2
  3476  038E  2B95               	goto	l6447
  3477  038F  2B81               	goto	l6441
  3478  0390                     l6445:	
  3479  0390  03A3               	decf	___ftpack@exp,f
  3480  0391  1003               	clrc
  3481  0392  0DA0               	rlf	___ftpack@arg,f
  3482  0393  0DA1               	rlf	___ftpack@arg+1,f
  3483  0394  0DA2               	rlf	___ftpack@arg+2,f
  3484  0395                     l6447:	
  3485  0395  1FA1               	btfss	___ftpack@arg+1,7
  3486  0396  2B90               	goto	l6445
  3487  0397  1C23               	btfss	___ftpack@exp,0
  3488  0398  13A1               	bcf	___ftpack@arg+1,7
  3489  0399  1003               	clrc
  3490  039A  0CA3               	rrf	___ftpack@exp,f
  3491  039B  0823               	movf	___ftpack@exp,w
  3492  039C  00A7               	movwf	??___ftpack+2
  3493  039D  01A6               	clrf	??___ftpack+1
  3494  039E  01A5               	clrf	??___ftpack
  3495  039F  0825               	movf	??___ftpack,w
  3496  03A0  04A0               	iorwf	___ftpack@arg,f
  3497  03A1  0826               	movf	??___ftpack+1,w
  3498  03A2  04A1               	iorwf	___ftpack@arg+1,f
  3499  03A3  0827               	movf	??___ftpack+2,w
  3500  03A4  04A2               	iorwf	___ftpack@arg+2,f
  3501  03A5  0824               	movf	___ftpack@sign,w
  3502  03A6  1D03               	skipz
  3503  03A7  17A2               	bsf	___ftpack@arg+2,7
  3504  03A8  0008               	return
  3505  03A9                     __end_of___ftpack:	
  3506  03A9                     PL4:	
  3507  03A9  00B5               	movwf	?___awtoft
  3508  03AA  086B               	movf	calgulateTemp@V1_,w
  3509  03AB  02B5               	subwf	?___awtoft,f
  3510  03AC  086C               	movf	calgulateTemp@V1_+1,w
  3511  03AD  1C03               	skipc
  3512  03AE  03B6               	decf	?___awtoft+1,f
  3513  03AF  02B6               	subwf	?___awtoft+1,f
  3514  03B0  0008               	return
  3515  03B1                     PL6:	
  3516  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3517  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3518  03B3  0864               	movf	calgulateTemp@milliVolt+1,w
  3519  03B4  3A80               	xorlw	128
  3520  03B5  00FF               	movwf	127
  3521  03B6  3083               	movlw	131
  3522  03B7  027F               	subwf	127,w
  3523  03B8  0008               	return
  3524  03B9                     PL7:	
  3525  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3526  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3527  03BB  0864               	movf	calgulateTemp@milliVolt+1,w
  3528  03BC  3A80               	xorlw	128
  3529  03BD  00FF               	movwf	127
  3530  03BE  3082               	movlw	130
  3531  03BF  027F               	subwf	127,w
  3532  03C0  0008               	return
  3533  03C1                     PL8:	
  3534  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3535  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  3536  03C3  0864               	movf	calgulateTemp@milliVolt+1,w
  3537  03C4  3A80               	xorlw	128
  3538  03C5  00FF               	movwf	127
  3539  03C6  3084               	movlw	132
  3540  03C7  027F               	subwf	127,w
  3541  03C8  0008               	return
  3542  03C9                     PL9:	
  3543  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3544  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3545  03CB  0864               	movf	calgulateTemp@milliVolt+1,w
  3546  03CC  3A80               	xorlw	128
  3547  03CD  00FF               	movwf	127
  3548  03CE  3081               	movlw	129
  3549  03CF  027F               	subwf	127,w
  3550  03D0  0008               	return
  3551  03D1                     PL10:	
  3552  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3553  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3554  03D3  0864               	movf	calgulateTemp@milliVolt+1,w
  3555  03D4  3A80               	xorlw	128
  3556  03D5  00FF               	movwf	127
  3557  03D6  3080               	movlw	128
  3558  03D7  027F               	subwf	127,w
  3559  03D8  0008               	return
  3560  03D9                     PL11:	
  3561  03D9  0828               	movf	___fttol@f1,w
  3562  03DA  00AC               	movwf	??___fttol
  3563  03DB  0829               	movf	___fttol@f1+1,w
  3564  03DC  00AD               	movwf	??___fttol+1
  3565  03DD  082A               	movf	___fttol@f1+2,w
  3566  03DE  00AE               	movwf	??___fttol+2
  3567  03DF  0008               	return
  3568  03E0                     PL14:	
  3569  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3570  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3571  03E2  0008               	return
  3572                           
  3573                           	psect	text622
  3574  0E0E                     __ptext622:	
  3575 ;; =============== function _calgulateTemp ends ============
  3576                           
  3577                           
  3578 ;; *************** function _getTemperature *****************
  3579 ;; Defined at:
  3580 ;;		line 641 in file "../src/main.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  milliVolt       3   57[BANK0 ] float 
  3585 ;;  m               2   62[BANK0 ] unsigned int 
  3586 ;;  iTempP          2   60[BANK0 ] unsigned int 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  2   55[BANK0 ] unsigned int 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0, pclath, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 160/100
  3593 ;;		On exit  : 160/100
  3594 ;;		Unchanged: FFE9F/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       2       0       0       0
  3597 ;;      Locals:         0       7       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         0       9       0       0       0
  3600 ;;Total ram usage:        9 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    5
  3603 ;; This function calls:
  3604 ;;		_read_ADC
  3605 ;;		___lwtoft
  3606 ;;		___ftmul
  3607 ;;		___fttol
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612  0E0E                     _getTemperature:	
  3613                           
  3614                           ;main.c: 642: unsigned int iTempP;
  3615                           ;main.c: 643: float milliVolt;
  3616                           ;main.c: 644: unsigned int m;
  3617                           ;main.c: 646: iTempP = 0;
  3618                           
  3619                           ; Regs used in _getTemperature: [wreg+status,2+status,0+pclath+cstack]
  3620  0E0E  01DC               	clrf	getTemperature@iTempP
  3621  0E0F  01DD               	clrf	getTemperature@iTempP+1
  3622                           
  3623                           ;main.c: 647: for (m = 0; m < 16; m++) {
  3624  0E10  01DE               	clrf	getTemperature@m
  3625  0E11  01DF               	clrf	getTemperature@m+1
  3626  0E12                     l6725:	
  3627                           
  3628                           ;main.c: 648: iTempP += read_ADC((13));
  3629  0E12  300D               	movlw	13
  3630  0E13  265B  120A  158A   	fcall	_read_ADC
  3631  0E16  0820               	movf	?_read_ADC,w
  3632  0E17  07DC               	addwf	getTemperature@iTempP,f
  3633  0E18  1803               	skipnc
  3634  0E19  0ADD               	incf	getTemperature@iTempP+1,f
  3635  0E1A  0821               	movf	?_read_ADC+1,w
  3636  0E1B  07DD               	addwf	getTemperature@iTempP+1,f
  3637  0E1C  0ADE               	incf	getTemperature@m,f
  3638  0E1D  1903               	skipnz
  3639  0E1E  0ADF               	incf	getTemperature@m+1,f
  3640  0E1F  3000               	movlw	0
  3641  0E20  025F               	subwf	getTemperature@m+1,w
  3642  0E21  3010               	movlw	16
  3643  0E22  1903               	skipnz
  3644  0E23  025E               	subwf	getTemperature@m,w
  3645  0E24  1C03               	skipc
  3646  0E25  2E12               	goto	l6725
  3647  0E26  300F               	movlw	15
  3648                           
  3649                           ;main.c: 649: }
  3650                           ;main.c: 650: iTempP /= 16;
  3651  0E27  0EDC               	swapf	getTemperature@iTempP,f
  3652  0E28  0EDD               	swapf	getTemperature@iTempP+1,f
  3653  0E29  05DC               	andwf	getTemperature@iTempP,f
  3654  0E2A  085D               	movf	getTemperature@iTempP+1,w
  3655  0E2B  39F0               	andlw	240
  3656  0E2C  04DC               	iorwf	getTemperature@iTempP,f
  3657  0E2D  300F               	movlw	15
  3658  0E2E  05DD               	andwf	getTemperature@iTempP+1,f
  3659                           
  3660                           ;main.c: 653: milliVolt = iTempP * a;
  3661  0E2F  3040               	movlw	64
  3662  0E30  00C8               	movwf	?___ftmul
  3663  0E31  304E               	movlw	78
  3664  0E32  00C9               	movwf	?___ftmul+1
  3665  0E33  3040               	movlw	64
  3666  0E34  00CA               	movwf	?___ftmul+2
  3667  0E35  085D               	movf	getTemperature@iTempP+1,w
  3668  0E36  00A9               	movwf	?___lwtoft+1
  3669  0E37  085C               	movf	getTemperature@iTempP,w
  3670  0E38  00A8               	movwf	?___lwtoft
  3671  0E39  26E6  120A  158A   	fcall	___lwtoft
  3672  0E3C  0828               	movf	?___lwtoft,w
  3673  0E3D  00CB               	movwf	?___ftmul+3
  3674  0E3E  0829               	movf	?___lwtoft+1,w
  3675  0E3F  00CC               	movwf	?___ftmul+4
  3676  0E40  082A               	movf	?___lwtoft+2,w
  3677  0E41  00CD               	movwf	?___ftmul+5
  3678  0E42  2675               	fcall	___ftmul
  3679  0E43  0848               	movf	?___ftmul,w
  3680  0E44  00D9               	movwf	getTemperature@milliVolt
  3681  0E45  0849               	movf	?___ftmul+1,w
  3682  0E46  00DA               	movwf	getTemperature@milliVolt+1
  3683  0E47  084A               	movf	?___ftmul+2,w
  3684  0E48  00DB               	movwf	getTemperature@milliVolt+2
  3685                           
  3686                           ;main.c: 654: m = (int) milliVolt;
  3687  0E49  0859               	movf	getTemperature@milliVolt,w
  3688  0E4A  00A8               	movwf	?___fttol
  3689  0E4B  085A               	movf	getTemperature@milliVolt+1,w
  3690  0E4C  00A9               	movwf	?___fttol+1
  3691  0E4D  085B               	movf	getTemperature@milliVolt+2,w
  3692  0E4E  00AA               	movwf	?___fttol+2
  3693  0E4F  120A  118A  2310   	fcall	___fttol
  3694  0E52  0829               	movf	?___fttol+1,w
  3695  0E53  00DF               	movwf	getTemperature@m+1
  3696  0E54  0828               	movf	?___fttol,w
  3697  0E55  00DE               	movwf	getTemperature@m
  3698                           
  3699                           ;main.c: 655: return m;
  3700  0E56  085F               	movf	getTemperature@m+1,w
  3701  0E57  00D8               	movwf	?_getTemperature+1
  3702  0E58  085E               	movf	getTemperature@m,w
  3703  0E59  00D7               	movwf	?_getTemperature
  3704  0E5A  0008               	return
  3705  0E5B                     __end_of_getTemperature:	
  3706  0E5B                     __ptext634:	
  3707 ;; =============== function ___bmul ends ============
  3708                           
  3709                           
  3710 ;; *************** function _read_ADC *****************
  3711 ;; Defined at:
  3712 ;;		line 67 in file "../src/adc.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  analogChanne    1    wreg     unsigned char 
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;  analogChanne    1    3[BANK0 ] unsigned char 
  3717 ;;  adcResult       2    4[BANK0 ] unsigned int 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  2    0[BANK0 ] unsigned int 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 160/100
  3724 ;;		On exit  : 160/100
  3725 ;;		Unchanged: FFE9F/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3727 ;;      Params:         0       2       0       0       0
  3728 ;;      Locals:         0       3       0       0       0
  3729 ;;      Temps:          0       1       0       0       0
  3730 ;;      Totals:         0       6       0       0       0
  3731 ;;Total ram usage:        6 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    3
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_getTemperature
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740  0E5B                     _read_ADC:	
  3741                           
  3742                           ; Regs used in _read_ADC: [wreg+status,2+status,0]
  3743                           ;read_ADC@analogChannel stored from wreg
  3744  0E5B  00A3               	movwf	read_ADC@analogChannel
  3745                           
  3746                           ;adc.c: 70: ADCON0bits.CHS = analogChannel;
  3747  0E5C  00A2               	movwf	??_read_ADC
  3748  0E5D  0DA2               	rlf	??_read_ADC,f
  3749  0E5E  0DA2               	rlf	??_read_ADC,f
  3750  0E5F  081F               	movf	31,w	;volatile
  3751  0E60  0622               	xorwf	??_read_ADC,w
  3752  0E61  39C3               	andlw	-61
  3753  0E62  0622               	xorwf	??_read_ADC,w
  3754  0E63  009F               	movwf	31	;volatile
  3755                           
  3756                           ;adc.c: 71: ADCON0bits.GO_DONE = 1;
  3757  0E64  149F               	bsf	31,1	;volatile
  3758  0E65                     l3387:	
  3759                           ;adc.c: 72: while(ADCON0bits.GO_DONE) continue;
  3760                           
  3761  0E65  189F               	btfsc	31,1	;volatile
  3762  0E66  2E65               	goto	l3387
  3763                           
  3764                           ;adc.c: 73: adcResult = ADRESH;
  3765  0E67  081E               	movf	30,w	;volatile
  3766  0E68  00A4               	movwf	read_ADC@adcResult
  3767  0E69  01A5               	clrf	read_ADC@adcResult+1
  3768                           
  3769                           ;adc.c: 74: adcResult <<= 8;
  3770  0E6A  00A5               	movwf	read_ADC@adcResult+1
  3771  0E6B  01A4               	clrf	read_ADC@adcResult
  3772                           
  3773                           ;adc.c: 75: adcResult |= ADRESL;
  3774  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  3775  0E6D  081E               	movf	30,w	;volatile
  3776  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0E6F  04A4               	iorwf	read_ADC@adcResult,f
  3778                           
  3779                           ;adc.c: 77: return adcResult;
  3780  0E70  0825               	movf	read_ADC@adcResult+1,w
  3781  0E71  00A1               	movwf	?_read_ADC+1
  3782  0E72  0824               	movf	read_ADC@adcResult,w
  3783  0E73  00A0               	movwf	?_read_ADC
  3784  0E74  0008               	return
  3785  0E75                     __end_of_read_ADC:	
  3786  0E75                     __ptext625:	
  3787 ;; =============== function ___awtoft ends ============
  3788                           
  3789                           
  3790 ;; *************** function ___ftmul *****************
  3791 ;; Defined at:
  3792 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  f1              3   40[BANK0 ] float 
  3795 ;;  f2              3   43[BANK0 ] float 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  f3_as_produc    3   50[BANK0 ] unsigned um
  3798 ;;  sign            1   54[BANK0 ] unsigned char 
  3799 ;;  cntr            1   53[BANK0 ] unsigned char 
  3800 ;;  exp             1   49[BANK0 ] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  3   40[BANK0 ] float 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 60/100
  3807 ;;		On exit  : 60/100
  3808 ;;		Unchanged: FFF9F/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         0       6       0       0       0
  3811 ;;      Locals:         0       6       0       0       0
  3812 ;;      Temps:          0       3       0       0       0
  3813 ;;      Totals:         0      15       0       0       0
  3814 ;;Total ram usage:       15 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    4
  3817 ;; This function calls:
  3818 ;;		___ftpack
  3819 ;; This function is called by:
  3820 ;;		_getTemperature
  3821 ;;		_calgulateTemp
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824  0E75                     ___ftmul:	
  3825                           
  3826                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3827  0E75  0848               	movf	___ftmul@f1,w
  3828  0E76  00CE               	movwf	??___ftmul
  3829  0E77  0849               	movf	___ftmul@f1+1,w
  3830  0E78  00CF               	movwf	??___ftmul+1
  3831  0E79  084A               	movf	___ftmul@f1+2,w
  3832  0E7A  00D0               	movwf	??___ftmul+2
  3833  0E7B  1003               	clrc
  3834  0E7C  0D4F               	rlf	??___ftmul+1,w
  3835  0E7D  0D50               	rlf	??___ftmul+2,w
  3836  0E7E  00D1               	movwf	___ftmul@exp
  3837  0E7F  08D1               	movf	___ftmul@exp,f
  3838  0E80  1D03               	skipz
  3839  0E81  2E86               	goto	l6653
  3840  0E82  01C8               	clrf	?___ftmul
  3841  0E83  01C9               	clrf	?___ftmul+1
  3842  0E84  01CA               	clrf	?___ftmul+2
  3843  0E85  0008               	return
  3844  0E86                     l6653:	
  3845  0E86  084B               	movf	___ftmul@f2,w
  3846  0E87  00CE               	movwf	??___ftmul
  3847  0E88  084C               	movf	___ftmul@f2+1,w
  3848  0E89  00CF               	movwf	??___ftmul+1
  3849  0E8A  084D               	movf	___ftmul@f2+2,w
  3850  0E8B  00D0               	movwf	??___ftmul+2
  3851  0E8C  1003               	clrc
  3852  0E8D  0D4F               	rlf	??___ftmul+1,w
  3853  0E8E  0D50               	rlf	??___ftmul+2,w
  3854  0E8F  00D6               	movwf	___ftmul@sign
  3855  0E90  08D6               	movf	___ftmul@sign,f
  3856  0E91  1D03               	skipz
  3857  0E92  2E97               	goto	l6659
  3858  0E93  01C8               	clrf	?___ftmul
  3859  0E94  01C9               	clrf	?___ftmul+1
  3860  0E95  01CA               	clrf	?___ftmul+2
  3861  0E96  0008               	return
  3862  0E97                     l6659:	
  3863  0E97  0856               	movf	___ftmul@sign,w
  3864  0E98  3E7B               	addlw	123
  3865  0E99  07D1               	addwf	___ftmul@exp,f
  3866  0E9A  084A               	movf	___ftmul@f1+2,w
  3867  0E9B  00D6               	movwf	___ftmul@sign
  3868  0E9C  084D               	movf	___ftmul@f2+2,w
  3869  0E9D  06D6               	xorwf	___ftmul@sign,f
  3870  0E9E  3080               	movlw	128
  3871  0E9F  05D6               	andwf	___ftmul@sign,f
  3872  0EA0  3007               	movlw	7
  3873  0EA1  17C9               	bsf	___ftmul@f1+1,7
  3874  0EA2  17CC               	bsf	___ftmul@f2+1,7
  3875  0EA3  01CD               	clrf	___ftmul@f2+2
  3876  0EA4  01D2               	clrf	___ftmul@f3_as_product
  3877  0EA5  01D3               	clrf	___ftmul@f3_as_product+1
  3878  0EA6  01D4               	clrf	___ftmul@f3_as_product+2
  3879  0EA7  00D5               	movwf	___ftmul@cntr
  3880  0EA8                     l6677:	
  3881  0EA8  1C48               	btfss	___ftmul@f1,0
  3882  0EA9  2EB2               	goto	l6681
  3883  0EAA  084B               	movf	___ftmul@f2,w
  3884  0EAB  26F8  120A  158A   	fcall	PL2	;call to abstracted procedure
  3885  0EAE  1803               	skipnc
  3886  0EAF  0A4D               	incf	___ftmul@f2+2,w
  3887  0EB0  1D03               	btfss	3,2
  3888  0EB1  07D4               	addwf	___ftmul@f3_as_product+2,f
  3889  0EB2                     l6681:	
  3890  0EB2  1003               	clrc
  3891  0EB3  0CCA               	rrf	___ftmul@f1+2,f
  3892  0EB4  0CC9               	rrf	___ftmul@f1+1,f
  3893  0EB5  0CC8               	rrf	___ftmul@f1,f
  3894  0EB6  1003               	clrc
  3895  0EB7  0DCB               	rlf	___ftmul@f2,f
  3896  0EB8  0DCC               	rlf	___ftmul@f2+1,f
  3897  0EB9  0DCD               	rlf	___ftmul@f2+2,f
  3898  0EBA  0BD5               	decfsz	___ftmul@cntr,f
  3899  0EBB  2EA8               	goto	l6677
  3900  0EBC  3009               	movlw	9
  3901  0EBD  00D5               	movwf	___ftmul@cntr
  3902  0EBE                     l6689:	
  3903  0EBE  1C48               	btfss	___ftmul@f1,0
  3904  0EBF  2EC8               	goto	l6693
  3905  0EC0  084B               	movf	___ftmul@f2,w
  3906  0EC1  26F8  120A  158A   	fcall	PL2	;call to abstracted procedure
  3907  0EC4  1803               	skipnc
  3908  0EC5  0A4D               	incf	___ftmul@f2+2,w
  3909  0EC6  1D03               	btfss	3,2
  3910  0EC7  07D4               	addwf	___ftmul@f3_as_product+2,f
  3911  0EC8                     l6693:	
  3912  0EC8  1003               	clrc
  3913  0EC9  0CCA               	rrf	___ftmul@f1+2,f
  3914  0ECA  0CC9               	rrf	___ftmul@f1+1,f
  3915  0ECB  0CC8               	rrf	___ftmul@f1,f
  3916  0ECC  1003               	clrc
  3917  0ECD  0CD4               	rrf	___ftmul@f3_as_product+2,f
  3918  0ECE  0CD3               	rrf	___ftmul@f3_as_product+1,f
  3919  0ECF  0CD2               	rrf	___ftmul@f3_as_product,f
  3920  0ED0  0BD5               	decfsz	___ftmul@cntr,f
  3921  0ED1  2EBE               	goto	l6689
  3922  0ED2  0852               	movf	___ftmul@f3_as_product,w
  3923  0ED3  00A0               	movwf	?___ftpack
  3924  0ED4  0853               	movf	___ftmul@f3_as_product+1,w
  3925  0ED5  00A1               	movwf	?___ftpack+1
  3926  0ED6  0854               	movf	___ftmul@f3_as_product+2,w
  3927  0ED7  00A2               	movwf	?___ftpack+2
  3928  0ED8  0851               	movf	___ftmul@exp,w
  3929  0ED9  00A3               	movwf	?___ftpack+3
  3930  0EDA  0856               	movf	___ftmul@sign,w
  3931  0EDB  00A4               	movwf	?___ftpack+4
  3932  0EDC  120A  118A  236B   	fcall	___ftpack
  3933  0EDF  0820               	movf	?___ftpack,w
  3934  0EE0  00C8               	movwf	?___ftmul
  3935  0EE1  0821               	movf	?___ftpack+1,w
  3936  0EE2  00C9               	movwf	?___ftmul+1
  3937  0EE3  0822               	movf	?___ftpack+2,w
  3938  0EE4  00CA               	movwf	?___ftmul+2
  3939  0EE5  0008               	return
  3940  0EE6                     __end_of___ftmul:	
  3941  0EE6                     __ptext623:	
  3942 ;; =============== function _getTemperature ends ============
  3943                           
  3944                           
  3945 ;; *************** function ___lwtoft *****************
  3946 ;; Defined at:
  3947 ;;		line 29 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwtoft.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  c               2    8[BANK0 ] unsigned int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  3    8[BANK0 ] float 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2, status,0, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 160/100
  3958 ;;		On exit  : 160/100
  3959 ;;		Unchanged: FFE9F/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       3       0       0       0
  3962 ;;      Locals:         0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0
  3964 ;;      Totals:         0       3       0       0       0
  3965 ;;Total ram usage:        3 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    4
  3968 ;; This function calls:
  3969 ;;		___ftpack
  3970 ;; This function is called by:
  3971 ;;		_getTemperature
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974  0EE6                     ___lwtoft:	
  3975                           
  3976                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3977  0EE6  0828               	movf	___lwtoft@c,w
  3978  0EE7  00A0               	movwf	?___ftpack
  3979  0EE8  0829               	movf	___lwtoft@c+1,w
  3980  0EE9  00A1               	movwf	?___ftpack+1
  3981  0EEA  308E               	movlw	142
  3982  0EEB  01A2               	clrf	?___ftpack+2
  3983  0EEC  00A3               	movwf	?___ftpack+3
  3984  0EED  01A4               	clrf	?___ftpack+4
  3985  0EEE  120A  118A  236B   	fcall	___ftpack
  3986  0EF1  0820               	movf	?___ftpack,w
  3987  0EF2  00A8               	movwf	?___lwtoft
  3988  0EF3  0821               	movf	?___ftpack+1,w
  3989  0EF4  00A9               	movwf	?___lwtoft+1
  3990  0EF5  0822               	movf	?___ftpack+2,w
  3991  0EF6  00AA               	movwf	?___lwtoft+2
  3992  0EF7  0008               	return
  3993  0EF8                     __end_of___lwtoft:	
  3994  0EF8                     PL2:	
  3995  0EF8  07D2               	addwf	___ftmul@f3_as_product,f
  3996  0EF9  084C               	movf	___ftmul@f2+1,w
  3997  0EFA  1103               	clrz
  3998  0EFB  1803               	skipnc
  3999  0EFC  0A4C               	incf	___ftmul@f2+1,w
  4000  0EFD  1D03               	btfss	3,2
  4001  0EFE  07D3               	addwf	___ftmul@f3_as_product+1,f
  4002  0EFF  084D               	movf	___ftmul@f2+2,w
  4003  0F00  1103               	clrz
  4004  0F01  0008               	return
  4005                           
  4006                           	psect	text626
  4007  0772                     __ptext626:	
  4008 ;; =============== function ___ftmul ends ============
  4009                           
  4010                           
  4011 ;; *************** function ___ftdiv *****************
  4012 ;; Defined at:
  4013 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  f2              3   25[BANK0 ] float 
  4016 ;;  f1              3   28[BANK0 ] float 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  f3              3   35[BANK0 ] float 
  4019 ;;  sign            1   39[BANK0 ] unsigned char 
  4020 ;;  exp             1   38[BANK0 ] unsigned char 
  4021 ;;  cntr            1   34[BANK0 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  3   25[BANK0 ] float 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 60/100
  4028 ;;		On exit  : 60/100
  4029 ;;		Unchanged: FFF9F/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4031 ;;      Params:         0       6       0       0       0
  4032 ;;      Locals:         0       6       0       0       0
  4033 ;;      Temps:          0       3       0       0       0
  4034 ;;      Totals:         0      15       0       0       0
  4035 ;;Total ram usage:       15 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    4
  4038 ;; This function calls:
  4039 ;;		___ftpack
  4040 ;; This function is called by:
  4041 ;;		_calgulateTemp
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044  0772                     ___ftdiv:	
  4045                           
  4046                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4047  0772  083C               	movf	___ftdiv@f1,w
  4048  0773  00BF               	movwf	??___ftdiv
  4049  0774  083D               	movf	___ftdiv@f1+1,w
  4050  0775  00C0               	movwf	??___ftdiv+1
  4051  0776  083E               	movf	___ftdiv@f1+2,w
  4052  0777  00C1               	movwf	??___ftdiv+2
  4053  0778  1003               	clrc
  4054  0779  0D40               	rlf	??___ftdiv+1,w
  4055  077A  0D41               	rlf	??___ftdiv+2,w
  4056  077B  00C6               	movwf	___ftdiv@exp
  4057  077C  08C6               	movf	___ftdiv@exp,f
  4058  077D  1D03               	skipz
  4059  077E  2F83               	goto	l6609
  4060  077F  01B9               	clrf	?___ftdiv
  4061  0780  01BA               	clrf	?___ftdiv+1
  4062  0781  01BB               	clrf	?___ftdiv+2
  4063  0782  0008               	return
  4064  0783                     l6609:	
  4065  0783  0839               	movf	___ftdiv@f2,w
  4066  0784  00BF               	movwf	??___ftdiv
  4067  0785  083A               	movf	___ftdiv@f2+1,w
  4068  0786  00C0               	movwf	??___ftdiv+1
  4069  0787  083B               	movf	___ftdiv@f2+2,w
  4070  0788  00C1               	movwf	??___ftdiv+2
  4071  0789  1003               	clrc
  4072  078A  0D40               	rlf	??___ftdiv+1,w
  4073  078B  0D41               	rlf	??___ftdiv+2,w
  4074  078C  00C7               	movwf	___ftdiv@sign
  4075  078D  08C7               	movf	___ftdiv@sign,f
  4076  078E  1D03               	skipz
  4077  078F  2F94               	goto	l4483
  4078  0790  01B9               	clrf	?___ftdiv
  4079  0791  01BA               	clrf	?___ftdiv+1
  4080  0792  01BB               	clrf	?___ftdiv+2
  4081  0793  0008               	return
  4082  0794                     l4483:	
  4083  0794  3089               	movlw	137
  4084  0795  01C3               	clrf	___ftdiv@f3
  4085  0796  01C4               	clrf	___ftdiv@f3+1
  4086  0797  01C5               	clrf	___ftdiv@f3+2
  4087  0798  0747               	addwf	___ftdiv@sign,w
  4088  0799  00BF               	movwf	??___ftdiv
  4089  079A  02C6               	subwf	___ftdiv@exp,f
  4090  079B  083E               	movf	___ftdiv@f1+2,w
  4091  079C  00C7               	movwf	___ftdiv@sign
  4092  079D  083B               	movf	___ftdiv@f2+2,w
  4093  079E  06C7               	xorwf	___ftdiv@sign,f
  4094  079F  3080               	movlw	128
  4095  07A0  05C7               	andwf	___ftdiv@sign,f
  4096  07A1  3018               	movlw	24
  4097  07A2  17BD               	bsf	___ftdiv@f1+1,7
  4098  07A3  01BE               	clrf	___ftdiv@f1+2
  4099  07A4  17BA               	bsf	___ftdiv@f2+1,7
  4100  07A5  01BB               	clrf	___ftdiv@f2+2
  4101  07A6  00C2               	movwf	___ftdiv@cntr
  4102  07A7                     l6633:	
  4103  07A7  1003               	clrc
  4104  07A8  0DC3               	rlf	___ftdiv@f3,f
  4105  07A9  0DC4               	rlf	___ftdiv@f3+1,f
  4106  07AA  0DC5               	rlf	___ftdiv@f3+2,f
  4107  07AB  083B               	movf	___ftdiv@f2+2,w
  4108  07AC  023E               	subwf	___ftdiv@f1+2,w
  4109  07AD  1D03               	skipz
  4110  07AE  2FB5               	goto	u2345
  4111  07AF  083A               	movf	___ftdiv@f2+1,w
  4112  07B0  023D               	subwf	___ftdiv@f1+1,w
  4113  07B1  1D03               	skipz
  4114  07B2  2FB5               	goto	u2345
  4115  07B3  0839               	movf	___ftdiv@f2,w
  4116  07B4  023C               	subwf	___ftdiv@f1,w
  4117  07B5                     u2345:	
  4118  07B5  1C03               	skipc
  4119  07B6  2FC3               	goto	L24
  4120  07B7  0839               	movf	___ftdiv@f2,w
  4121  07B8  02BC               	subwf	___ftdiv@f1,f
  4122  07B9  083A               	movf	___ftdiv@f2+1,w
  4123  07BA  1C03               	skipc
  4124  07BB  0F3A               	incfsz	___ftdiv@f2+1,w
  4125  07BC  02BD               	subwf	___ftdiv@f1+1,f
  4126  07BD  083B               	movf	___ftdiv@f2+2,w
  4127  07BE  1C03               	skipc
  4128  07BF  0A3B               	incf	___ftdiv@f2+2,w
  4129  07C0  02BE               	subwf	___ftdiv@f1+2,f
  4130  07C1  1443               	bsf	___ftdiv@f3,0
  4131  07C2  1003               	clrc
  4132  07C3                     L24:	
  4133  07C3  0DBC               	rlf	___ftdiv@f1,f
  4134  07C4  0DBD               	rlf	___ftdiv@f1+1,f
  4135  07C5  0DBE               	rlf	___ftdiv@f1+2,f
  4136  07C6  0BC2               	decfsz	___ftdiv@cntr,f
  4137  07C7  2FA7               	goto	l6633
  4138  07C8  0843               	movf	___ftdiv@f3,w
  4139  07C9  00A0               	movwf	?___ftpack
  4140  07CA  0844               	movf	___ftdiv@f3+1,w
  4141  07CB  00A1               	movwf	?___ftpack+1
  4142  07CC  0845               	movf	___ftdiv@f3+2,w
  4143  07CD  00A2               	movwf	?___ftpack+2
  4144  07CE  0846               	movf	___ftdiv@exp,w
  4145  07CF  00A3               	movwf	?___ftpack+3
  4146  07D0  0847               	movf	___ftdiv@sign,w
  4147  07D1  00A4               	movwf	?___ftpack+4
  4148  07D2  120A  118A  236B   	fcall	___ftpack
  4149  07D5  0820               	movf	?___ftpack,w
  4150  07D6  00B9               	movwf	?___ftdiv
  4151  07D7  0821               	movf	?___ftpack+1,w
  4152  07D8  00BA               	movwf	?___ftdiv+1
  4153  07D9  0822               	movf	?___ftpack+2,w
  4154  07DA  00BB               	movwf	?___ftdiv+2
  4155  07DB  0008               	return
  4156  07DC                     __end_of___ftdiv:	
  4157                           
  4158                           	psect	text627
  4159  0D4C                     __ptext627:	
  4160 ;; =============== function ___ftdiv ends ============
  4161                           
  4162                           
  4163 ;; *************** function ___ftadd *****************
  4164 ;; Defined at:
  4165 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  f1              3   55[BANK0 ] float 
  4168 ;;  f2              3   58[BANK0 ] float 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  exp1            1   66[BANK0 ] unsigned char 
  4171 ;;  exp2            1   65[BANK0 ] unsigned char 
  4172 ;;  sign            1   64[BANK0 ] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  3   55[BANK0 ] float 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 60/100
  4179 ;;		On exit  : 60/100
  4180 ;;		Unchanged: FFF9F/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         0       6       0       0       0
  4183 ;;      Locals:         0       3       0       0       0
  4184 ;;      Temps:          0       3       0       0       0
  4185 ;;      Totals:         0      12       0       0       0
  4186 ;;Total ram usage:       12 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    4
  4189 ;; This function calls:
  4190 ;;		___ftpack
  4191 ;; This function is called by:
  4192 ;;		_calgulateTemp
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195  0D4C                     ___ftadd:	
  4196                           
  4197                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4198  0D4C  0857               	movf	___ftadd@f1,w
  4199  0D4D  00DD               	movwf	??___ftadd
  4200  0D4E  0858               	movf	___ftadd@f1+1,w
  4201  0D4F  00DE               	movwf	??___ftadd+1
  4202  0D50  0859               	movf	___ftadd@f1+2,w
  4203  0D51  00DF               	movwf	??___ftadd+2
  4204  0D52  1003               	clrc
  4205  0D53  0D5E               	rlf	??___ftadd+1,w
  4206  0D54  0D5F               	rlf	??___ftadd+2,w
  4207  0D55  00E2               	movwf	___ftadd@exp1
  4208  0D56  085A               	movf	___ftadd@f2,w
  4209  0D57  00DD               	movwf	??___ftadd
  4210  0D58  085B               	movf	___ftadd@f2+1,w
  4211  0D59  00DE               	movwf	??___ftadd+1
  4212  0D5A  085C               	movf	___ftadd@f2+2,w
  4213  0D5B  00DF               	movwf	??___ftadd+2
  4214  0D5C  1003               	clrc
  4215  0D5D  0D5E               	rlf	??___ftadd+1,w
  4216  0D5E  0D5F               	rlf	??___ftadd+2,w
  4217  0D5F  00E1               	movwf	___ftadd@exp2
  4218  0D60  0862               	movf	___ftadd@exp1,w
  4219  0D61  1903               	btfsc	3,2
  4220  0D62  2D6F               	goto	l6533
  4221  0D63  0861               	movf	___ftadd@exp2,w
  4222  0D64  0262               	subwf	___ftadd@exp1,w
  4223  0D65  0861               	movf	___ftadd@exp2,w
  4224  0D66  1803               	skipnc
  4225  0D67  2D77               	goto	L25
  4226  0D68  00DD               	movwf	??___ftadd
  4227  0D69  0862               	movf	___ftadd@exp1,w
  4228  0D6A  02DD               	subwf	??___ftadd,f
  4229  0D6B  3019               	movlw	25
  4230  0D6C  025D               	subwf	??___ftadd,w
  4231  0D6D  1C03               	skipc
  4232  0D6E  2D76               	goto	l6537
  4233  0D6F                     l6533:	
  4234  0D6F  085A               	movf	___ftadd@f2,w
  4235  0D70  00D7               	movwf	?___ftadd
  4236  0D71  085B               	movf	___ftadd@f2+1,w
  4237  0D72  00D8               	movwf	?___ftadd+1
  4238  0D73  085C               	movf	___ftadd@f2+2,w
  4239  0D74  00D9               	movwf	?___ftadd+2
  4240  0D75  0008               	return
  4241  0D76                     l6537:	
  4242  0D76  0861               	movf	___ftadd@exp2,w
  4243  0D77                     L25:	
  4244  0D77  1903               	btfsc	3,2
  4245  0D78  0008               	return
  4246  0D79  0862               	movf	___ftadd@exp1,w
  4247  0D7A  0261               	subwf	___ftadd@exp2,w
  4248  0D7B  1803               	skipnc
  4249  0D7C  2D85               	goto	l6543
  4250  0D7D  0862               	movf	___ftadd@exp1,w
  4251  0D7E  00DD               	movwf	??___ftadd
  4252  0D7F  0861               	movf	___ftadd@exp2,w
  4253  0D80  02DD               	subwf	??___ftadd,f
  4254  0D81  3019               	movlw	25
  4255  0D82  025D               	subwf	??___ftadd,w
  4256  0D83  1803               	btfsc	3,0
  4257  0D84  0008               	return
  4258  0D85                     l6543:	
  4259  0D85  3006               	movlw	6
  4260  0D86  00E0               	movwf	___ftadd@sign
  4261  0D87  1BD9               	btfsc	___ftadd@f1+2,7
  4262  0D88  17E0               	bsf	___ftadd@sign,7
  4263  0D89  1BDC               	btfsc	___ftadd@f2+2,7
  4264  0D8A  1760               	bsf	___ftadd@sign,6
  4265  0D8B  17D8               	bsf	___ftadd@f1+1,7
  4266  0D8C  01D9               	clrf	___ftadd@f1+2
  4267  0D8D  17DB               	bsf	___ftadd@f2+1,7
  4268  0D8E  01DC               	clrf	___ftadd@f2+2
  4269  0D8F  0861               	movf	___ftadd@exp2,w
  4270  0D90  0262               	subwf	___ftadd@exp1,w
  4271  0D91  1803               	skipnc
  4272  0D92  2DAC               	goto	l6565
  4273  0D93                     l6555:	
  4274  0D93  1003               	clrc
  4275  0D94  0DDA               	rlf	___ftadd@f2,f
  4276  0D95  0DDB               	rlf	___ftadd@f2+1,f
  4277  0D96  0DDC               	rlf	___ftadd@f2+2,f
  4278  0D97  03E1               	decf	___ftadd@exp2,f
  4279  0D98  0861               	movf	___ftadd@exp2,w
  4280  0D99  0662               	xorwf	___ftadd@exp1,w
  4281  0D9A  1903               	skipnz
  4282  0D9B  2DA7               	goto	l6563
  4283  0D9C  03E0               	decf	___ftadd@sign,f
  4284  0D9D  0860               	movf	___ftadd@sign,w
  4285  0D9E  3907               	andlw	7
  4286  0D9F  1903               	btfsc	3,2
  4287  0DA0  2DA7               	goto	l6563
  4288  0DA1  2D93               	goto	l6555
  4289  0DA2                     l6561:	
  4290  0DA2  1003               	clrc
  4291  0DA3  0CD9               	rrf	___ftadd@f1+2,f
  4292  0DA4  0CD8               	rrf	___ftadd@f1+1,f
  4293  0DA5  0CD7               	rrf	___ftadd@f1,f
  4294  0DA6  0AE2               	incf	___ftadd@exp1,f
  4295  0DA7                     l6563:	
  4296  0DA7  0862               	movf	___ftadd@exp1,w
  4297  0DA8  0661               	xorwf	___ftadd@exp2,w
  4298  0DA9  1903               	btfsc	3,2
  4299  0DAA  2DC8               	goto	l4454
  4300  0DAB  2DA2               	goto	l6561
  4301  0DAC                     l6565:	
  4302  0DAC  0862               	movf	___ftadd@exp1,w
  4303  0DAD  0261               	subwf	___ftadd@exp2,w
  4304  0DAE  1803               	skipnc
  4305  0DAF  2DC8               	goto	l4454
  4306  0DB0                     l6567:	
  4307  0DB0  1003               	clrc
  4308  0DB1  0DD7               	rlf	___ftadd@f1,f
  4309  0DB2  0DD8               	rlf	___ftadd@f1+1,f
  4310  0DB3  0DD9               	rlf	___ftadd@f1+2,f
  4311  0DB4  03E2               	decf	___ftadd@exp1,f
  4312  0DB5  0861               	movf	___ftadd@exp2,w
  4313  0DB6  0662               	xorwf	___ftadd@exp1,w
  4314  0DB7  1903               	skipnz
  4315  0DB8  2DC4               	goto	l6575
  4316  0DB9  03E0               	decf	___ftadd@sign,f
  4317  0DBA  0860               	movf	___ftadd@sign,w
  4318  0DBB  3907               	andlw	7
  4319  0DBC  1903               	btfsc	3,2
  4320  0DBD  2DC4               	goto	l6575
  4321  0DBE  2DB0               	goto	l6567
  4322  0DBF                     l6573:	
  4323  0DBF  1003               	clrc
  4324  0DC0  0CDC               	rrf	___ftadd@f2+2,f
  4325  0DC1  0CDB               	rrf	___ftadd@f2+1,f
  4326  0DC2  0CDA               	rrf	___ftadd@f2,f
  4327  0DC3  0AE1               	incf	___ftadd@exp2,f
  4328  0DC4                     l6575:	
  4329  0DC4  0862               	movf	___ftadd@exp1,w
  4330  0DC5  0661               	xorwf	___ftadd@exp2,w
  4331  0DC6  1D03               	skipz
  4332  0DC7  2DBF               	goto	l6573
  4333  0DC8                     l4454:	
  4334  0DC8  1FE0               	btfss	___ftadd@sign,7
  4335  0DC9  2DD3               	goto	l6581
  4336  0DCA  30FF               	movlw	255
  4337  0DCB  06D7               	xorwf	___ftadd@f1,f
  4338  0DCC  06D8               	xorwf	___ftadd@f1+1,f
  4339  0DCD  06D9               	xorwf	___ftadd@f1+2,f
  4340  0DCE  0AD7               	incf	___ftadd@f1,f
  4341  0DCF  1903               	skipnz
  4342  0DD0  0AD8               	incf	___ftadd@f1+1,f
  4343  0DD1  1903               	skipnz
  4344  0DD2  0AD9               	incf	___ftadd@f1+2,f
  4345  0DD3                     l6581:	
  4346  0DD3  1F60               	btfss	___ftadd@sign,6
  4347  0DD4  2DDE               	goto	l6587
  4348  0DD5  30FF               	movlw	255
  4349  0DD6  06DA               	xorwf	___ftadd@f2,f
  4350  0DD7  06DB               	xorwf	___ftadd@f2+1,f
  4351  0DD8  06DC               	xorwf	___ftadd@f2+2,f
  4352  0DD9  0ADA               	incf	___ftadd@f2,f
  4353  0DDA  1903               	skipnz
  4354  0DDB  0ADB               	incf	___ftadd@f2+1,f
  4355  0DDC  1903               	skipnz
  4356  0DDD  0ADC               	incf	___ftadd@f2+2,f
  4357  0DDE                     l6587:	
  4358  0DDE  01E0               	clrf	___ftadd@sign
  4359  0DDF  0857               	movf	___ftadd@f1,w
  4360  0DE0  07DA               	addwf	___ftadd@f2,f
  4361  0DE1  0858               	movf	___ftadd@f1+1,w
  4362  0DE2  1103               	clrz
  4363  0DE3  1803               	skipnc
  4364  0DE4  0A58               	incf	___ftadd@f1+1,w
  4365  0DE5  1D03               	btfss	3,2
  4366  0DE6  07DB               	addwf	___ftadd@f2+1,f
  4367  0DE7  0859               	movf	___ftadd@f1+2,w
  4368  0DE8  1103               	clrz
  4369  0DE9  1803               	skipnc
  4370  0DEA  0A59               	incf	___ftadd@f1+2,w
  4371  0DEB  1D03               	btfss	3,2
  4372  0DEC  07DC               	addwf	___ftadd@f2+2,f
  4373  0DED  1FDC               	btfss	___ftadd@f2+2,7
  4374  0DEE  2DFA               	goto	l6599
  4375  0DEF  30FF               	movlw	255
  4376  0DF0  06DA               	xorwf	___ftadd@f2,f
  4377  0DF1  06DB               	xorwf	___ftadd@f2+1,f
  4378  0DF2  06DC               	xorwf	___ftadd@f2+2,f
  4379  0DF3  0ADA               	incf	___ftadd@f2,f
  4380  0DF4  1903               	skipnz
  4381  0DF5  0ADB               	incf	___ftadd@f2+1,f
  4382  0DF6  1903               	skipnz
  4383  0DF7  0ADC               	incf	___ftadd@f2+2,f
  4384  0DF8  01E0               	clrf	___ftadd@sign
  4385  0DF9  0AE0               	incf	___ftadd@sign,f
  4386  0DFA                     l6599:	
  4387  0DFA  085A               	movf	___ftadd@f2,w
  4388  0DFB  00A0               	movwf	?___ftpack
  4389  0DFC  085B               	movf	___ftadd@f2+1,w
  4390  0DFD  00A1               	movwf	?___ftpack+1
  4391  0DFE  085C               	movf	___ftadd@f2+2,w
  4392  0DFF  00A2               	movwf	?___ftpack+2
  4393  0E00  0862               	movf	___ftadd@exp1,w
  4394  0E01  00A3               	movwf	?___ftpack+3
  4395  0E02  0860               	movf	___ftadd@sign,w
  4396  0E03  00A4               	movwf	?___ftpack+4
  4397  0E04  120A  118A  236B   	fcall	___ftpack
  4398  0E07  0820               	movf	?___ftpack,w
  4399  0E08  00D7               	movwf	?___ftadd
  4400  0E09  0821               	movf	?___ftpack+1,w
  4401  0E0A  00D8               	movwf	?___ftadd+1
  4402  0E0B  0822               	movf	?___ftpack+2,w
  4403  0E0C  00D9               	movwf	?___ftadd+2
  4404  0E0D  0008               	return
  4405  0E0E                     __end_of___ftadd:	
  4406                           
  4407                           	psect	text633
  4408  0C6F                     __ptext633:	
  4409 ;; =============== function ___lwdiv ends ============
  4410                           
  4411                           
  4412 ;; *************** function ___bmul *****************
  4413 ;; Defined at:
  4414 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  multiplier      1    wreg     unsigned char 
  4417 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4420 ;;  product         1    1[BANK0 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      unsigned char 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 160/0
  4427 ;;		On exit  : 160/0
  4428 ;;		Unchanged: FFE9F/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       1       0       0       0
  4431 ;;      Locals:         0       2       0       0       0
  4432 ;;      Temps:          0       0       0       0       0
  4433 ;;      Totals:         0       3       0       0       0
  4434 ;;Total ram usage:        3 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    3
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_main
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443  0C6F                     ___bmul:	
  4444                           
  4445                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4446                           ;___bmul@multiplier stored from wreg
  4447  0C6F  00A2               	movwf	___bmul@multiplier
  4448  0C70  01A1               	clrf	___bmul@product
  4449  0C71                     l6369:	
  4450  0C71  0820               	movf	___bmul@multiplicand,w
  4451  0C72  1822               	btfsc	___bmul@multiplier,0
  4452  0C73  07A1               	addwf	___bmul@product,f
  4453  0C74  1003               	clrc
  4454  0C75  0DA0               	rlf	___bmul@multiplicand,f
  4455  0C76  1003               	clrc
  4456  0C77  0CA2               	rrf	___bmul@multiplier,f
  4457  0C78  08A2               	movf	___bmul@multiplier,f
  4458  0C79  1D03               	skipz
  4459  0C7A  2C71               	goto	l6369
  4460  0C7B  0821               	movf	___bmul@product,w
  4461  0C7C  0008               	return
  4462  0C7D                     __end_of___bmul:	
  4463                           
  4464                           	psect	text635
  4465  0C54                     __ptext635:	
  4466 ;; =============== function _read_ADC ends ============
  4467                           
  4468                           
  4469 ;; *************** function _vResetPrintBuffer *****************
  4470 ;; Defined at:
  4471 ;;		line 669 in file "../src/main.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  i               1    0[BANK0 ] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 60/120
  4482 ;;		On exit  : 160/0
  4483 ;;		Unchanged: FFE9F/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         0       0       0       0       0
  4486 ;;      Locals:         0       1       0       0       0
  4487 ;;      Temps:          0       0       0       0       0
  4488 ;;      Totals:         0       1       0       0       0
  4489 ;;Total ram usage:        1 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    3
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498  0C54                     _vResetPrintBuffer:	
  4499                           
  4500                           ;main.c: 670: unsigned char i;
  4501                           ;main.c: 672: for (i = 0; i<sizeof (printBuffer); i++) {
  4502                           
  4503                           ; Regs used in _vResetPrintBuffer: [wreg-fsr0h+status,2+status,0]
  4504  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  4505  0C55  01A0               	clrf	vResetPrintBuffer@i
  4506  0C56                     l6239:	
  4507                           
  4508                           ;main.c: 673: printBuffer[i] = 0;
  4509  0C56  0820               	movf	vResetPrintBuffer@i,w
  4510  0C57  3EA0               	addlw	_printBuffer& (0+255)
  4511  0C58  0084               	movwf	4
  4512  0C59  3006               	movlw	6
  4513  0C5A  1383               	bcf	3,7	;select IRP bank1
  4514  0C5B  0180               	clrf	0
  4515  0C5C  0AA0               	incf	vResetPrintBuffer@i,f
  4516  0C5D  0220               	subwf	vResetPrintBuffer@i,w
  4517  0C5E  1803               	btfsc	3,0
  4518  0C5F  0008               	return
  4519  0C60  2C56               	goto	l6239
  4520  0C61                     __end_of_vResetPrintBuffer:	
  4521                           
  4522                           	psect	text636
  4523  0CE6                     __ptext636:	
  4524 ;; =============== function _vResetPrintBuffer ends ============
  4525                           
  4526                           
  4527 ;; *************** function _vPulseRelay *****************
  4528 ;; Defined at:
  4529 ;;		line 384 in file "../src/main.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  relay           1    wreg     unsigned char 
  4532 ;;  timerValue      1    3[BANK0 ] unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  relay           1    4[BANK0 ] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;		None               void
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 160/0
  4541 ;;		On exit  : 140/0
  4542 ;;		Unchanged: FFE9F/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         0       1       0       0       0
  4545 ;;      Locals:         0       1       0       0       0
  4546 ;;      Temps:          0       0       0       0       0
  4547 ;;      Totals:         0       2       0       0       0
  4548 ;;Total ram usage:        2 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557  0CE6                     _vPulseRelay:	
  4558                           
  4559                           ; Regs used in _vPulseRelay: [wreg-fsr0h+status,2+status,0]
  4560                           ;vPulseRelay@relay stored from wreg
  4561  0CE6  00A4               	movwf	vPulseRelay@relay
  4562                           
  4563                           ;main.c: 385: switch (relay) {
  4564  0CE7  2D06               	goto	l6231
  4565  0CE8                     l1225:	
  4566                           ;main.c: 386: case 1:
  4567                           
  4568                           
  4569                           ;main.c: 387: (PORTDbits.RD1) = 1;
  4570  0CE8  1488               	bsf	8,1	;volatile
  4571                           
  4572                           ;main.c: 388: RELAY_1_Timer = timerValue;
  4573  0CE9  0823               	movf	vPulseRelay@timerValue,w
  4574  0CEA  1683               	bsf	3,5	;RP0=1, select bank1
  4575  0CEB  00AC               	movwf	_RELAY_1_Timer^(0+128)	;volatile
  4576                           
  4577                           ;main.c: 389: RELAY_1_Timer_En = 1;
  4578  0CEC  1478               	bsf	_RELAY_1_Timer_En/(0+8),_RELAY_1_Timer_En& (0+7)
  4579                           
  4580                           ;main.c: 390: break;
  4581  0CED  0008               	return
  4582  0CEE                     l1227:	
  4583                           ;main.c: 391: case 2:
  4584                           
  4585                           
  4586                           ;main.c: 392: (PORTDbits.RD2) = 1;
  4587  0CEE  1508               	bsf	8,2	;volatile
  4588                           
  4589                           ;main.c: 393: RELAY_2_Timer = timerValue;
  4590  0CEF  0823               	movf	vPulseRelay@timerValue,w
  4591  0CF0  1683               	bsf	3,5	;RP0=1, select bank1
  4592  0CF1  00AD               	movwf	_RELAY_2_Timer^(0+128)	;volatile
  4593                           
  4594                           ;main.c: 394: RELAY_2_Timer_En = 1;
  4595  0CF2  14F8               	bsf	_RELAY_2_Timer_En/(0+8),_RELAY_2_Timer_En& (0+7)
  4596                           
  4597                           ;main.c: 395: break;
  4598  0CF3  0008               	return
  4599  0CF4                     l1228:	
  4600                           ;main.c: 396: case 3:
  4601                           
  4602                           
  4603                           ;main.c: 397: (PORTDbits.RD3) = 1;
  4604  0CF4  1588               	bsf	8,3	;volatile
  4605                           
  4606                           ;main.c: 398: RELAY_3_Timer = timerValue;
  4607  0CF5  0823               	movf	vPulseRelay@timerValue,w
  4608  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
  4609  0CF7  00AE               	movwf	_RELAY_3_Timer^(0+128)	;volatile
  4610                           
  4611                           ;main.c: 399: RELAY_3_Timer_En = 1;
  4612  0CF8  1578               	bsf	_RELAY_3_Timer_En/(0+8),_RELAY_3_Timer_En& (0+7)
  4613                           
  4614                           ;main.c: 400: break;
  4615  0CF9  0008               	return
  4616  0CFA                     l1229:	
  4617                           ;main.c: 401: case 4:
  4618                           
  4619                           
  4620                           ;main.c: 402: (PORTCbits.RC4) = 1;
  4621  0CFA  1607               	bsf	7,4	;volatile
  4622                           
  4623                           ;main.c: 403: RELAY_4_Timer = timerValue;
  4624  0CFB  0823               	movf	vPulseRelay@timerValue,w
  4625  0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  4626  0CFD  00AF               	movwf	_RELAY_4_Timer^(0+128)	;volatile
  4627                           
  4628                           ;main.c: 404: RELAY_4_Timer_En = 1;
  4629  0CFE  15F8               	bsf	_RELAY_4_Timer_En/(0+8),_RELAY_4_Timer_En& (0+7)
  4630                           
  4631                           ;main.c: 405: break;
  4632  0CFF  0008               	return
  4633  0D00                     l1230:	
  4634                           ;main.c: 406: case 5:
  4635                           
  4636                           
  4637                           ;main.c: 407: (PORTCbits.RC5) = 1;
  4638  0D00  1687               	bsf	7,5	;volatile
  4639                           
  4640                           ;main.c: 408: RELAY_5_Timer = timerValue;
  4641  0D01  0823               	movf	vPulseRelay@timerValue,w
  4642  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  4643  0D03  00B0               	movwf	_RELAY_5_Timer^(0+128)	;volatile
  4644                           
  4645                           ;main.c: 409: RELAY_5_Timer_En = 1;
  4646  0D04  1678               	bsf	_RELAY_5_Timer_En/(0+8),_RELAY_5_Timer_En& (0+7)
  4647                           
  4648                           ;main.c: 410: break;
  4649  0D05  0008               	return
  4650  0D06                     l6231:	
  4651  0D06  0824               	movf	vPulseRelay@relay,w
  4652                           
  4653                           ; Switch size 1, requested type "space"
  4654                           ; Number of cases is 5, Range of values is 1 to 5
  4655                           ; switch strategies available:
  4656                           ; Name         Instructions Cycles
  4657                           ; simple_byte           16     9 (average)
  4658                           ; direct_byte           26    11 (fixed)
  4659                           ; jumptable            263     9 (fixed)
  4660                           ;	Chosen strategy is simple_byte
  4661  0D07  3A01               	xorlw	1	; case 1
  4662  0D08  1903               	skipnz
  4663  0D09  2CE8               	goto	l1225
  4664  0D0A  3A03               	xorlw	3	; case 2
  4665  0D0B  1903               	skipnz
  4666  0D0C  2CEE               	goto	l1227
  4667  0D0D  3A01               	xorlw	1	; case 3
  4668  0D0E  1903               	skipnz
  4669  0D0F  2CF4               	goto	l1228
  4670  0D10  3A07               	xorlw	7	; case 4
  4671  0D11  1903               	skipnz
  4672  0D12  2CFA               	goto	l1229
  4673  0D13  3A01               	xorlw	1	; case 5
  4674  0D14  1903               	skipnz
  4675  0D15  2D00               	goto	l1230
  4676  0D16  2D17               	goto	l1232
  4677  0D17                     l1232:	
  4678  0D17  0008               	return
  4679  0D18                     __end_of_vPulseRelay:	
  4680                           
  4681                           	psect	text637
  4682  0CB4                     __ptext637:	
  4683 ;; =============== function _vPulseRelay ends ============
  4684                           
  4685                           
  4686 ;; *************** function _vSetRelay *****************
  4687 ;; Defined at:
  4688 ;;		line 428 in file "../src/main.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  relay           1    wreg     unsigned char 
  4691 ;;  value           1    0[BANK0 ] unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  relay           1    1[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;		None               void
  4696 ;; Registers used:
  4697 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 160/0
  4700 ;;		On exit  : 160/0
  4701 ;;		Unchanged: FFE9F/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4703 ;;      Params:         0       1       0       0       0
  4704 ;;      Locals:         0       1       0       0       0
  4705 ;;      Temps:          0       0       0       0       0
  4706 ;;      Totals:         0       2       0       0       0
  4707 ;;Total ram usage:        2 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    3
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_main
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716  0CB4                     _vSetRelay:	
  4717                           
  4718                           ; Regs used in _vSetRelay: [wreg-fsr0h+status,2+status,0]
  4719                           ;vSetRelay@relay stored from wreg
  4720  0CB4  00A1               	movwf	vSetRelay@relay
  4721                           
  4722                           ;main.c: 429: switch (relay) {
  4723  0CB5  2CD4               	goto	l6205
  4724  0CB6                     l6193:	
  4725                           
  4726                           ;main.c: 431: (PORTDbits.RD1) = value;
  4727  0CB6  0820               	movf	vSetRelay@value,w
  4728  0CB7  1D03               	skipz
  4729  0CB8  1488               	bsf	8,1	;volatile
  4730  0CB9  1903               	skipnz
  4731  0CBA  1088               	bcf	8,1	;volatile
  4732                           
  4733                           ;main.c: 432: break;
  4734  0CBB  0008               	return
  4735  0CBC                     l6195:	
  4736                           
  4737                           ;main.c: 434: (PORTDbits.RD2) = value;
  4738  0CBC  0820               	movf	vSetRelay@value,w
  4739  0CBD  1D03               	skipz
  4740  0CBE  1508               	bsf	8,2	;volatile
  4741  0CBF  1903               	skipnz
  4742  0CC0  1108               	bcf	8,2	;volatile
  4743                           
  4744                           ;main.c: 435: break;
  4745  0CC1  0008               	return
  4746  0CC2                     l6197:	
  4747                           
  4748                           ;main.c: 437: (PORTDbits.RD3) = value;
  4749  0CC2  0820               	movf	vSetRelay@value,w
  4750  0CC3  1D03               	skipz
  4751  0CC4  1588               	bsf	8,3	;volatile
  4752  0CC5  1903               	skipnz
  4753  0CC6  1188               	bcf	8,3	;volatile
  4754                           
  4755                           ;main.c: 438: break;
  4756  0CC7  0008               	return
  4757  0CC8                     l6199:	
  4758                           
  4759                           ;main.c: 440: (PORTCbits.RC4) = value;
  4760  0CC8  0820               	movf	vSetRelay@value,w
  4761  0CC9  1D03               	skipz
  4762  0CCA  1607               	bsf	7,4	;volatile
  4763  0CCB  1903               	skipnz
  4764  0CCC  1207               	bcf	7,4	;volatile
  4765                           
  4766                           ;main.c: 441: break;
  4767  0CCD  0008               	return
  4768  0CCE                     l6201:	
  4769                           
  4770                           ;main.c: 443: (PORTCbits.RC5) = value;
  4771  0CCE  0820               	movf	vSetRelay@value,w
  4772  0CCF  1D03               	skipz
  4773  0CD0  1687               	bsf	7,5	;volatile
  4774  0CD1  1903               	skipnz
  4775  0CD2  1287               	bcf	7,5	;volatile
  4776                           
  4777                           ;main.c: 444: break;
  4778  0CD3  0008               	return
  4779  0CD4                     l6205:	
  4780  0CD4  0821               	movf	vSetRelay@relay,w
  4781                           
  4782                           ; Switch size 1, requested type "space"
  4783                           ; Number of cases is 5, Range of values is 1 to 5
  4784                           ; switch strategies available:
  4785                           ; Name         Instructions Cycles
  4786                           ; simple_byte           16     9 (average)
  4787                           ; direct_byte           26    11 (fixed)
  4788                           ; jumptable            263     9 (fixed)
  4789                           ;	Chosen strategy is simple_byte
  4790  0CD5  3A01               	xorlw	1	; case 1
  4791  0CD6  1903               	skipnz
  4792  0CD7  2CB6               	goto	l6193
  4793  0CD8  3A03               	xorlw	3	; case 2
  4794  0CD9  1903               	skipnz
  4795  0CDA  2CBC               	goto	l6195
  4796  0CDB  3A01               	xorlw	1	; case 3
  4797  0CDC  1903               	skipnz
  4798  0CDD  2CC2               	goto	l6197
  4799  0CDE  3A07               	xorlw	7	; case 4
  4800  0CDF  1903               	skipnz
  4801  0CE0  2CC8               	goto	l6199
  4802  0CE1  3A01               	xorlw	1	; case 5
  4803  0CE2  1903               	skipnz
  4804  0CE3  2CCE               	goto	l6201
  4805  0CE4  2CE5               	goto	l1243
  4806  0CE5                     l1243:	
  4807  0CE5  0008               	return
  4808  0CE6                     __end_of_vSetRelay:	
  4809                           
  4810                           	psect	text638
  4811  0C7D                     __ptext638:	
  4812 ;; =============== function _vSetRelay ends ============
  4813                           
  4814                           
  4815 ;; *************** function _cGetFromReceiveBuffer *****************
  4816 ;; Defined at:
  4817 ;;		line 537 in file "../src/main.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  value           1    0[BANK0 ] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      unsigned char 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/20
  4828 ;;		On exit  : 160/100
  4829 ;;		Unchanged: FFE9F/0
  4830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4831 ;;      Params:         0       0       0       0       0
  4832 ;;      Locals:         0       1       0       0       0
  4833 ;;      Temps:          0       0       0       0       0
  4834 ;;      Totals:         0       1       0       0       0
  4835 ;;Total ram usage:        1 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    3
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_main
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844  0C7D                     _cGetFromReceiveBuffer:	
  4845                           
  4846                           ;main.c: 538: unsigned char value;
  4847                           ;main.c: 540: value = uartReceiveBuffer[uartReceiveBufferR];
  4848                           
  4849                           ; Regs used in _cGetFromReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  4850  0C7D  087A               	movf	_uartReceiveBufferR,w
  4851  0C7E  3E10               	addlw	_uartReceiveBuffer& (0+255)
  4852  0C7F  0084               	movwf	4
  4853  0C80  1783               	bsf	3,7	;select IRP bank2
  4854  0C81  0800               	movf	0,w
  4855  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0C84  00A0               	movwf	cGetFromReceiveBuffer@value
  4858                           
  4859                           ;main.c: 541: uartReceiveBufferR++;
  4860  0C85  0AFA               	incf	_uartReceiveBufferR,f	;volatile
  4861                           
  4862                           ;main.c: 542: if (uartReceiveBufferR == ( 90 )) {
  4863  0C86  087A               	movf	_uartReceiveBufferR,w	;volatile
  4864  0C87  3A5A               	xorlw	90
  4865  0C88  1903               	btfsc	3,2
  4866                           
  4867                           ;main.c: 543: uartReceiveBufferR = 0;
  4868  0C89  01FA               	clrf	_uartReceiveBufferR	;volatile
  4869                           
  4870                           ;main.c: 544: }
  4871                           ;main.c: 545: return value;
  4872  0C8A  0820               	movf	cGetFromReceiveBuffer@value,w
  4873  0C8B  0008               	return
  4874  0C8C                     __end_of_cGetFromReceiveBuffer:	
  4875                           
  4876                           	psect	text639
  4877  0C3E                     __ptext639:	
  4878 ;; =============== function _cGetFromReceiveBuffer ends ============
  4879                           
  4880                           
  4881 ;; *************** function _vSendDataToUart *****************
  4882 ;; Defined at:
  4883 ;;		line 600 in file "../src/main.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;		None               void
  4890 ;; Registers used:
  4891 ;;		None
  4892 ;; Tracked objects:
  4893 ;;		On entry : 40/120
  4894 ;;		On exit  : 160/120
  4895 ;;		Unchanged: FFE9F/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4897 ;;      Params:         0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    3
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_main
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910  0C3E                     _vSendDataToUart:	
  4911                           
  4912                           ;main.c: 601: TXIF = 0;
  4913                           
  4914                           ; Regs used in _vSendDataToUart: []
  4915  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0C3F  120C               	bcf	12,4
  4917                           
  4918                           ;main.c: 602: TXIE = 1;
  4919  0C40  1683               	bsf	3,5	;RP0=1, select bank1
  4920  0C41  160C               	bsf	12,4
  4921  0C42  0008               	return
  4922  0C43                     __end_of_vSendDataToUart:	
  4923                           
  4924                           	psect	text640
  4925  0C8C                     __ptext640:	
  4926 ;; =============== function _vSendDataToUart ends ============
  4927                           
  4928                           
  4929 ;; *************** function _vAddToUartTransmitBuffer *****************
  4930 ;; Defined at:
  4931 ;;		line 559 in file "../src/main.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  data            1    wreg     unsigned char 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  data            1    0[BANK0 ] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;		None               void
  4938 ;; Registers used:
  4939 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/20
  4942 ;;		On exit  : 160/120
  4943 ;;		Unchanged: FFE9F/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4945 ;;      Params:         0       0       0       0       0
  4946 ;;      Locals:         0       1       0       0       0
  4947 ;;      Temps:          0       0       0       0       0
  4948 ;;      Totals:         0       1       0       0       0
  4949 ;;Total ram usage:        1 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    3
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958  0C8C                     _vAddToUartTransmitBuffer:	
  4959                           
  4960                           ; Regs used in _vAddToUartTransmitBuffer: [wreg-fsr0h+status,2+status,0]
  4961                           ;vAddToUartTransmitBuffer@data stored from wreg
  4962  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  4963  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  4964  0C8E  00A0               	movwf	vAddToUartTransmitBuffer@data
  4965                           
  4966                           ;main.c: 560: uartTransmitBuffer[uartTransmitBufferW] = data;
  4967  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  4968  0C90  0835               	movf	_uartTransmitBufferW^(0+128),w
  4969  0C91  3E90               	addlw	_uartTransmitBuffer& (0+255)
  4970  0C92  0084               	movwf	4
  4971  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0C94  0820               	movf	vAddToUartTransmitBuffer@data,w
  4973  0C95  1783               	bsf	3,7	;select IRP bank3
  4974  0C96  0080               	movwf	0
  4975                           
  4976                           ;main.c: 561: uartTransmitBufferW++;
  4977  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  4978  0C98  0AB5               	incf	_uartTransmitBufferW^(0+128),f	;volatile
  4979                           
  4980                           ;main.c: 562: if (uartTransmitBufferW == ( 60 )) {
  4981  0C99  0835               	movf	_uartTransmitBufferW^(0+128),w	;volatile
  4982  0C9A  3A3C               	xorlw	60
  4983  0C9B  1903               	btfsc	3,2
  4984                           
  4985                           ;main.c: 563: uartTransmitBufferW = 0;
  4986  0C9C  01B5               	clrf	_uartTransmitBufferW^(0+128)	;volatile
  4987  0C9D  0008               	return
  4988  0C9E                     __end_of_vAddToUartTransmitBuffer:	
  4989                           
  4990                           	psect	text641
  4991  0C4B                     __ptext641:	
  4992 ;; =============== function _vAddToUartTransmitBuffer ends ============
  4993                           
  4994                           
  4995 ;; *************** function _setCommunicationTimeOut *****************
  4996 ;; Defined at:
  4997 ;;		line 605 in file "../src/main.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  value           2    0[BANK0 ] unsigned int 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;		None               void
  5004 ;; Registers used:
  5005 ;;		wreg
  5006 ;; Tracked objects:
  5007 ;;		On entry : 60/0
  5008 ;;		On exit  : 60/20
  5009 ;;		Unchanged: FFF9F/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       2       0       0       0
  5012 ;;      Locals:         0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0
  5014 ;;      Totals:         0       2       0       0       0
  5015 ;;Total ram usage:        2 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    3
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_main
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024  0C4B                     _setCommunicationTimeOut:	
  5025                           
  5026                           ;main.c: 606: communicationControlTimer = value;
  5027                           
  5028                           ; Regs used in _setCommunicationTimeOut: [wreg]
  5029  0C4B  0821               	movf	setCommunicationTimeOut@value+1,w
  5030  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  5031  0C4D  00A7               	movwf	(_communicationControlTimer+1)^(0+128)	;volatile
  5032  0C4E  1283               	bcf	3,5	;RP0=0, select bank0
  5033  0C4F  0820               	movf	setCommunicationTimeOut@value,w
  5034  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  5035  0C51  00A6               	movwf	_communicationControlTimer^(0+128)	;volatile
  5036                           
  5037                           ;main.c: 607: communicationControlTimer_En = 1;
  5038  0C52  16F8               	bsf	_communicationControlTimer_En/(0+8),_communicationControlTimer_En& (0+7)
  5039  0C53  0008               	return
  5040  0C54                     __end_of_setCommunicationTimeOut:	
  5041                           
  5042                           	psect	text642
  5043  0C61                     __ptext642:	
  5044 ;; =============== function _setCommunicationTimeOut ends ============
  5045                           
  5046                           
  5047 ;; *************** function _vInitializeADC *****************
  5048 ;; Defined at:
  5049 ;;		line 41 in file "../src/adc.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;		None               void
  5056 ;; Registers used:
  5057 ;;		None
  5058 ;; Tracked objects:
  5059 ;;		On entry : 17F/20
  5060 ;;		On exit  : 17F/0
  5061 ;;		Unchanged: FFE80/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5063 ;;      Params:         0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0
  5066 ;;      Totals:         0       0       0       0       0
  5067 ;;Total ram usage:        0 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    3
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076  0C61                     _vInitializeADC:	
  5077                           
  5078                           ;adc.c: 42: (TRISBbits.TRISB5) = 1;
  5079                           
  5080                           ; Regs used in _vInitializeADC: []
  5081  0C61  1686               	bsf	6,5	;volatile
  5082                           
  5083                           ;adc.c: 44: ANSELHbits.ANS13 = 1;
  5084  0C62  1703               	bsf	3,6	;RP1=1, select bank3
  5085  0C63  1689               	bsf	9,5	;volatile
  5086                           
  5087                           ;adc.c: 46: ADCON0bits.ADCS1 = 1;
  5088  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0C66  179F               	bsf	31,7	;volatile
  5091                           
  5092                           ;adc.c: 47: ADCON0bits.ADCS0 = 0;
  5093  0C67  131F               	bcf	31,6	;volatile
  5094                           
  5095                           ;adc.c: 49: ADCON1bits.ADFM = 1;
  5096  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  5097  0C69  179F               	bsf	31,7	;volatile
  5098                           
  5099                           ;adc.c: 50: ADCON1bits.VCFG1 = 0;
  5100  0C6A  129F               	bcf	31,5	;volatile
  5101                           
  5102                           ;adc.c: 51: ADCON1bits.VCFG0 = 0;
  5103  0C6B  121F               	bcf	31,4	;volatile
  5104                           
  5105                           ;adc.c: 52: ADCON0bits.ADON = 1;
  5106  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5107  0C6D  141F               	bsf	31,0	;volatile
  5108  0C6E  0008               	return
  5109  0C6F                     __end_of_vInitializeADC:	
  5110                           
  5111                           	psect	text643
  5112  0C9E                     __ptext643:	
  5113 ;; =============== function _vInitializeADC ends ============
  5114                           
  5115                           
  5116 ;; *************** function _vInitializeUart *****************
  5117 ;; Defined at:
  5118 ;;		line 41 in file "../src/uart.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  cBaudTemp       1    0        unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;		None               void
  5125 ;; Registers used:
  5126 ;;		wreg
  5127 ;; Tracked objects:
  5128 ;;		On entry : 17F/20
  5129 ;;		On exit  : 17F/20
  5130 ;;		Unchanged: FFE80/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         0       0       0       0       0
  5133 ;;      Locals:         0       1       0       0       0
  5134 ;;      Temps:          0       0       0       0       0
  5135 ;;      Totals:         0       1       0       0       0
  5136 ;;Total ram usage:        1 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    3
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145  0C9E                     _vInitializeUart:	
  5146                           
  5147                           ;uart.c: 46: (TRISCbits.TRISC6) = 1;
  5148                           
  5149                           ; Regs used in _vInitializeUart: [wreg]
  5150  0C9E  1707               	bsf	7,6	;volatile
  5151                           
  5152                           ;uart.c: 47: (TRISCbits.TRISC7) = 1;
  5153  0C9F  1787               	bsf	7,7	;volatile
  5154                           
  5155                           ;uart.c: 56: {
  5156                           ;uart.c: 57: BRGH = 0;
  5157                           
  5158                           ;uart.c: 55: else if( cBaudTemp == ( 2 ) )
  5159  0CA0  1118               	bcf	24,2
  5160                           
  5161                           ;uart.c: 58: BRG16 = 1;
  5162  0CA1  1703               	bsf	3,6	;RP1=1, select bank3
  5163  0CA2  3033               	movlw	51
  5164  0CA3  1587               	bsf	7,3
  5165                           
  5166                           ;uart.c: 59: SPBRG = 51;
  5167  0CA4  1303               	bcf	3,6	;RP1=0, select bank1
  5168  0CA5  0099               	movwf	25	;volatile
  5169                           
  5170                           ;uart.c: 72: }
  5171                           ;uart.c: 74: SYNC = 0;
  5172                           
  5173                           ;uart.c: 60: }
  5174  0CA6  1218               	bcf	24,4
  5175                           
  5176                           ;uart.c: 75: SPEN = 1;
  5177  0CA7  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0CA8  1798               	bsf	24,7
  5179                           
  5180                           ;uart.c: 76: CREN = 1;
  5181  0CA9  1618               	bsf	24,4
  5182                           
  5183                           ;uart.c: 77: TXEN = 1;
  5184  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  5185  0CAB  1698               	bsf	24,5
  5186                           
  5187                           ;uart.c: 78: TX9 = 0;
  5188  0CAC  1318               	bcf	24,6
  5189                           
  5190                           ;uart.c: 79: RX9 = 0;
  5191  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0CAE  1318               	bcf	24,6
  5193                           
  5194                           ;uart.c: 80: ADDEN = 0;
  5195  0CAF  1198               	bcf	24,3
  5196                           
  5197                           ;uart.c: 81: RCIE = 1;
  5198  0CB0  1683               	bsf	3,5	;RP0=1, select bank1
  5199  0CB1  168C               	bsf	12,5
  5200                           
  5201                           ;uart.c: 82: TXIE = 0;
  5202  0CB2  120C               	bcf	12,4
  5203  0CB3  0008               	return
  5204  0CB4                     __end_of_vInitializeUart:	
  5205                           
  5206                           	psect	text644
  5207  0D18                     __ptext644:	
  5208 ;; =============== function _vInitializeUart ends ============
  5209                           
  5210                           
  5211 ;; *************** function _vInitializeBoard *****************
  5212 ;; Defined at:
  5213 ;;		line 461 in file "../src/main.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;		None               void
  5220 ;; Registers used:
  5221 ;;		wreg, status,2
  5222 ;; Tracked objects:
  5223 ;;		On entry : 17F/0
  5224 ;;		On exit  : 17F/20
  5225 ;;		Unchanged: FFE80/0
  5226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5227 ;;      Params:         0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    3
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_main
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240  0D18                     _vInitializeBoard:	
  5241                           
  5242                           ;main.c: 462: PORTA = 0;
  5243                           
  5244                           ; Regs used in _vInitializeBoard: [wreg+status,2]
  5245  0D18  0185               	clrf	5	;volatile
  5246                           
  5247                           ;main.c: 463: PORTB = 0;
  5248  0D19  0186               	clrf	6	;volatile
  5249                           
  5250                           ;main.c: 464: PORTC = 0;
  5251  0D1A  0187               	clrf	7	;volatile
  5252                           
  5253                           ;main.c: 465: PORTD = 0;
  5254  0D1B  0188               	clrf	8	;volatile
  5255                           
  5256                           ;main.c: 466: PORTE = 0;
  5257  0D1C  0189               	clrf	9	;volatile
  5258                           
  5259                           ;main.c: 468: OSCCON = 0b01110101;
  5260  0D1D  3075               	movlw	117
  5261  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  5262  0D1F  008F               	movwf	15	;volatile
  5263                           
  5264                           ;main.c: 470: CM1CON0 = 0;
  5265  0D20  1283               	bcf	3,5	;RP0=0, select bank2
  5266  0D21  1703               	bsf	3,6	;RP1=1, select bank2
  5267  0D22  0187               	clrf	7	;volatile
  5268                           
  5269                           ;main.c: 471: CM2CON0 = 0;
  5270  0D23  0188               	clrf	8	;volatile
  5271  0D24  3016               	movlw	22
  5272                           
  5273                           ;main.c: 472: C1ON = 0;
  5274  0D25  1387               	bcf	7,7
  5275                           
  5276                           ;main.c: 473: C2ON = 0;
  5277  0D26  1388               	bcf	8,7
  5278                           
  5279                           ;main.c: 475: WDTCON = 0b00010110;
  5280  0D27  0085               	movwf	5	;volatile
  5281                           
  5282                           ;main.c: 476: OPTION_REG = 0b10000111;
  5283  0D28  3087               	movlw	135
  5284  0D29  1683               	bsf	3,5	;RP0=1, select bank1
  5285  0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  5286  0D2B  0081               	movwf	1	;volatile
  5287                           
  5288                           ;main.c: 477: INTCON = 0;
  5289  0D2C  018B               	clrf	11	;volatile
  5290                           
  5291                           ;main.c: 478: PIE1 = 0;
  5292  0D2D  018C               	clrf	12	;volatile
  5293                           
  5294                           ;main.c: 479: PIE2 = 0;
  5295  0D2E  018D               	clrf	13	;volatile
  5296                           
  5297                           ;main.c: 481: ANSELH = 0;
  5298  0D2F  1703               	bsf	3,6	;RP1=1, select bank3
  5299  0D30  0189               	clrf	9	;volatile
  5300                           
  5301                           ;main.c: 482: ANSEL = 0;
  5302  0D31  0188               	clrf	8	;volatile
  5303                           
  5304                           ;main.c: 483: WPUB = 0;
  5305  0D32  1303               	bcf	3,6	;RP1=0, select bank1
  5306  0D33  0195               	clrf	21	;volatile
  5307                           
  5308                           ;main.c: 485: T0IF = 0;
  5309  0D34  110B               	bcf	11,2
  5310                           
  5311                           ;main.c: 486: T0IE = 1;
  5312  0D35  168B               	bsf	11,5
  5313                           
  5314                           ;main.c: 488: TRISA = 0b00000000;
  5315  0D36  0185               	clrf	5	;volatile
  5316                           
  5317                           ;main.c: 489: TRISB = 0b00110111;
  5318  0D37  3037               	movlw	55
  5319  0D38  0086               	movwf	6	;volatile
  5320                           
  5321                           ;main.c: 490: TRISC = 0b11000000;
  5322  0D39  30C0               	movlw	192
  5323  0D3A  0087               	movwf	7	;volatile
  5324                           
  5325                           ;main.c: 491: TRISD = 0b00000000;
  5326  0D3B  0188               	clrf	8	;volatile
  5327                           
  5328                           ;main.c: 492: TRISE = 0b00000000;
  5329  0D3C  0189               	clrf	9	;volatile
  5330                           
  5331                           ;main.c: 493: (TRISCbits.TRISC3) = 0;
  5332  0D3D  1187               	bcf	7,3	;volatile
  5333                           
  5334                           ;main.c: 494: (PORTCbits.RC3) = 0;
  5335  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0D3F  1187               	bcf	7,3	;volatile
  5337                           
  5338                           ;main.c: 496: PORTA = 0;
  5339  0D40  0185               	clrf	5	;volatile
  5340                           
  5341                           ;main.c: 497: PORTB = 0;
  5342  0D41  0186               	clrf	6	;volatile
  5343                           
  5344                           ;main.c: 498: PORTC = 0;
  5345  0D42  0187               	clrf	7	;volatile
  5346                           
  5347                           ;main.c: 499: PORTD = 0;
  5348  0D43  0188               	clrf	8	;volatile
  5349                           
  5350                           ;main.c: 500: PORTE = 0;
  5351  0D44  0189               	clrf	9	;volatile
  5352                           
  5353                           ;main.c: 502: tim10Hz = 5;
  5354  0D45  3005               	movlw	5
  5355  0D46  1683               	bsf	3,5	;RP0=1, select bank1
  5356  0D47  00C6               	movwf	_tim10Hz^(0+128)	;volatile
  5357                           
  5358                           ;main.c: 503: tim2Hz = 5;
  5359  0D48  00C8               	movwf	_tim2Hz^(0+128)	;volatile
  5360                           
  5361                           ;main.c: 504: tim1sec = 2;
  5362  0D49  3002               	movlw	2
  5363  0D4A  00C7               	movwf	_tim1sec^(0+128)	;volatile
  5364  0D4B  0008               	return
  5365  0D4C                     __end_of_vInitializeBoard:	
  5366                           
  5367                           	psect	text645
  5368  0F02                     __ptext645:	
  5369 ;; =============== function _vInitializeBoard ends ============
  5370                           
  5371                           
  5372 ;; *************** function _erdem *****************
  5373 ;; Defined at:
  5374 ;;		line 291 in file "../src/main.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  temp            1    7[COMMON] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;		None               void
  5381 ;; Registers used:
  5382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 40/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5388 ;;      Params:         0       0       0       0       0
  5389 ;;      Locals:         1       0       0       0       0
  5390 ;;      Temps:          3       0       0       0       0
  5391 ;;      Totals:         4       0       0       0       0
  5392 ;;Total ram usage:        4 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    2
  5395 ;; This function calls:
  5396 ;;		_restartUSR_K2
  5397 ;;		_vCheckError
  5398 ;;		_vAddToUartReceiveBuffer
  5399 ;;		_cGetFromTxBuffer
  5400 ;; This function is called by:
  5401 ;;		Interrupt level 1
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404  0F02                     _erdem:	
  5405                           
  5406                           ;main.c: 292: unsigned char temp;
  5407                           ;main.c: 295: if (T0IE && T0IF) {
  5408  0F02  1A8B               	btfsc	11,5
  5409  0F03  1D0B               	btfss	11,2
  5410  0F04  2F55               	goto	i1l1202
  5411                           
  5412                           ;main.c: 296: TMR0 = 190;
  5413  0F05  30BE               	movlw	190
  5414  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  5416  0F08  0081               	movwf	1	;volatile
  5417                           
  5418                           ;main.c: 298: if (--tim10Hz == 0)
  5419  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  5420  0F0A  0BC6               	decfsz	_tim10Hz^(0+128),f	;volatile
  5421  0F0B  2F53               	goto	i1l6293
  5422                           
  5423                           ;main.c: 299: {
  5424                           ;main.c: 300: tim10Hz = 12;
  5425  0F0C  300C               	movlw	12
  5426  0F0D  00C6               	movwf	_tim10Hz^(0+128)	;volatile
  5427                           
  5428                           ;main.c: 302: if ((--RELAY_1_Timer == 0) && RELAY_1_Timer_En) {
  5429  0F0E  0BAC               	decfsz	_RELAY_1_Timer^(0+128),f	;volatile
  5430  0F0F  2F15               	goto	i1l1204
  5431  0F10  1C78               	btfss	_RELAY_1_Timer_En/(0+8),_RELAY_1_Timer_En& (0+7)
  5432  0F11  2F15               	goto	i1l1204
  5433                           
  5434                           ;main.c: 303: (PORTDbits.RD1) = 0;
  5435  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0F13  1088               	bcf	8,1	;volatile
  5437                           
  5438                           ;main.c: 304: RELAY_1_Timer_En = 0;
  5439  0F14  1078               	bcf	_RELAY_1_Timer_En/(0+8),_RELAY_1_Timer_En& (0+7)
  5440  0F15                     i1l1204:	
  5441                           
  5442                           ;main.c: 305: }
  5443                           ;main.c: 306: if ((--RELAY_2_Timer == 0) && RELAY_2_Timer_En) {
  5444  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  5445  0F16  0BAD               	decfsz	_RELAY_2_Timer^(0+128),f	;volatile
  5446  0F17  2F1D               	goto	i1l1205
  5447  0F18  1CF8               	btfss	_RELAY_2_Timer_En/(0+8),_RELAY_2_Timer_En& (0+7)
  5448  0F19  2F1D               	goto	i1l1205
  5449                           
  5450                           ;main.c: 307: (PORTDbits.RD2) = 0;
  5451  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0F1B  1108               	bcf	8,2	;volatile
  5453                           
  5454                           ;main.c: 308: RELAY_2_Timer_En = 0;
  5455  0F1C  10F8               	bcf	_RELAY_2_Timer_En/(0+8),_RELAY_2_Timer_En& (0+7)
  5456  0F1D                     i1l1205:	
  5457                           
  5458                           ;main.c: 309: }
  5459                           ;main.c: 310: if ((--RELAY_3_Timer == 0) && RELAY_3_Timer_En) {
  5460  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  5461  0F1E  0BAE               	decfsz	_RELAY_3_Timer^(0+128),f	;volatile
  5462  0F1F  2F25               	goto	i1l1206
  5463  0F20  1D78               	btfss	_RELAY_3_Timer_En/(0+8),_RELAY_3_Timer_En& (0+7)
  5464  0F21  2F25               	goto	i1l1206
  5465                           
  5466                           ;main.c: 311: (PORTDbits.RD3) = 0;
  5467  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0F23  1188               	bcf	8,3	;volatile
  5469                           
  5470                           ;main.c: 312: RELAY_3_Timer_En = 0;
  5471  0F24  1178               	bcf	_RELAY_3_Timer_En/(0+8),_RELAY_3_Timer_En& (0+7)
  5472  0F25                     i1l1206:	
  5473                           
  5474                           ;main.c: 313: }
  5475                           ;main.c: 314: if ((--RELAY_4_Timer == 0) && RELAY_4_Timer_En) {
  5476  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  5477  0F26  0BAF               	decfsz	_RELAY_4_Timer^(0+128),f	;volatile
  5478  0F27  2F2D               	goto	i1l1207
  5479  0F28  1DF8               	btfss	_RELAY_4_Timer_En/(0+8),_RELAY_4_Timer_En& (0+7)
  5480  0F29  2F2D               	goto	i1l1207
  5481                           
  5482                           ;main.c: 315: (PORTCbits.RC4) = 0;
  5483  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0F2B  1207               	bcf	7,4	;volatile
  5485                           
  5486                           ;main.c: 316: RELAY_4_Timer_En = 0;
  5487  0F2C  11F8               	bcf	_RELAY_4_Timer_En/(0+8),_RELAY_4_Timer_En& (0+7)
  5488  0F2D                     i1l1207:	
  5489                           
  5490                           ;main.c: 317: }
  5491                           ;main.c: 318: if ((--RELAY_5_Timer == 0) && RELAY_5_Timer_En) {
  5492  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  5493  0F2E  0BB0               	decfsz	_RELAY_5_Timer^(0+128),f	;volatile
  5494  0F2F  2F35               	goto	i1l6277
  5495  0F30  1E78               	btfss	_RELAY_5_Timer_En/(0+8),_RELAY_5_Timer_En& (0+7)
  5496  0F31  2F35               	goto	i1l6277
  5497                           
  5498                           ;main.c: 319: (PORTCbits.RC5) = 0;
  5499  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  5500  0F33  1287               	bcf	7,5	;volatile
  5501                           
  5502                           ;main.c: 320: RELAY_5_Timer_En = 0;
  5503  0F34  1278               	bcf	_RELAY_5_Timer_En/(0+8),_RELAY_5_Timer_En& (0+7)
  5504  0F35                     i1l6277:	
  5505                           
  5506                           ;main.c: 321: }
  5507                           ;main.c: 322: if ((--communicationControlTimer == 0) && communicationControlTimer_En) {
  5508  0F35  3001               	movlw	1
  5509  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  5510  0F37  02A6               	subwf	_communicationControlTimer^(0+128),f	;volatile
  5511  0F38  3000               	movlw	0
  5512  0F39  1C03               	skipc
  5513  0F3A  03A7               	decf	(_communicationControlTimer+1)^(0+128),f	;volatile
  5514  0F3B  02A7               	subwf	(_communicationControlTimer+1)^(0+128),f	;volatile
  5515  0F3C  0827               	movf	(_communicationControlTimer+1)^(0+128),w	;volatile
  5516  0F3D  0426               	iorwf	_communicationControlTimer^(0+128),w	;volatile
  5517  0F3E  1903               	btfsc	3,2
  5518  0F3F  1EF8               	btfss	_communicationControlTimer_En/(0+8),_communicationControlTimer_En& (0+7)
  5519  0F40  2F48               	goto	i1l6285
  5520                           
  5521                           ;main.c: 323: restartUSR_K2();
  5522  0F41  27AF  120A  158A   	fcall	_restartUSR_K2
  5523                           
  5524                           ;main.c: 324: communicationControlTimer = 3000;
  5525  0F44  30B8               	movlw	184
  5526  0F45  00A6               	movwf	_communicationControlTimer^(0+128)	;volatile
  5527  0F46  300B               	movlw	11
  5528  0F47  00A7               	movwf	(_communicationControlTimer^(0+128)+1)	;volatile
  5529  0F48                     i1l6285:	
  5530                           
  5531                           ;main.c: 325: }
  5532                           ;main.c: 327: if (--tim2Hz == 0)
  5533  0F48  0BC8               	decfsz	_tim2Hz^(0+128),f	;volatile
  5534  0F49  2F53               	goto	i1l6293
  5535                           
  5536                           ;main.c: 328: {
  5537                           ;main.c: 329: tim2Hz = 5;
  5538  0F4A  3005               	movlw	5
  5539  0F4B  00C8               	movwf	_tim2Hz^(0+128)	;volatile
  5540                           
  5541                           ;main.c: 330: if (--tim1sec == 0)
  5542  0F4C  0BC7               	decfsz	_tim1sec^(0+128),f	;volatile
  5543  0F4D  2F53               	goto	i1l6293
  5544                           
  5545                           ;main.c: 331: {
  5546                           ;main.c: 332: tim1sec = 2;
  5547  0F4E  3002               	movlw	2
  5548  0F4F  00C7               	movwf	_tim1sec^(0+128)	;volatile
  5549                           
  5550                           ;main.c: 333: (PORTDbits.RD0) ^= 1;
  5551  0F50  3001               	movlw	1
  5552  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  5553  0F52  0688               	xorwf	8,f	;volatile
  5554  0F53                     i1l6293:	
  5555                           
  5556                           ;main.c: 334: }
  5557                           ;main.c: 335: }
  5558                           ;main.c: 336: }
  5559                           ;main.c: 338: T0IF = 0;
  5560  0F53  110B               	bcf	11,2
  5561  0F54  2F83               	goto	i1l1212
  5562  0F55                     i1l1202:	
  5563                           
  5564                           ;main.c: 340: }
  5565                           ;main.c: 342: if (RCIE && RCIF) {
  5566  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  5567  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  5568  0F57  1E8C               	btfss	12,5
  5569  0F58  2F6E               	goto	i1l1213
  5570  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0F5A  1E8C               	btfss	12,5
  5572  0F5B  2F6E               	goto	i1l1213
  5573                           
  5574                           ;main.c: 343: if (OERR) {
  5575  0F5C  1C98               	btfss	24,1
  5576  0F5D  2F60               	goto	i1l1214
  5577                           
  5578                           ;main.c: 344: CREN = 0;
  5579  0F5E  1218               	bcf	24,4
  5580                           
  5581                           ;main.c: 345: CREN = 1;
  5582  0F5F  1618               	bsf	24,4
  5583  0F60                     i1l1214:	
  5584                           
  5585                           ;main.c: 346: }
  5586                           ;main.c: 347: if (FERR) {
  5587  0F60  1918               	btfsc	24,2
  5588  0F61  081A               	movf	26,w	;volatile
  5589  0F62                     i1l6307:	
  5590  0F62  1A8C               	btfsc	12,5
  5591  0F63  2F68               	goto	i1l6309
  5592                           
  5593                           ;main.c: 351: vCheckError();
  5594  0F64  278C  120A  158A   	fcall	_vCheckError
  5595  0F67  2F62               	goto	i1l6307
  5596  0F68                     i1l6309:	
  5597                           
  5598                           ;main.c: 352: }
  5599                           ;main.c: 354: temp = RCREG;
  5600  0F68  081A               	movf	26,w	;volatile
  5601  0F69  00F7               	movwf	erdem@temp
  5602                           
  5603                           ;main.c: 355: vAddToUartReceiveBuffer(temp);
  5604  0F6A  2795  120A  158A   	fcall	_vAddToUartReceiveBuffer
  5605  0F6D  2F83               	goto	i1l1212
  5606  0F6E                     i1l1213:	
  5607                           
  5608                           ;main.c: 357: }
  5609                           ;main.c: 359: if (TXIE && TXIF) {
  5610  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  5611  0F6F  1E0C               	btfss	12,4
  5612  0F70  2F83               	goto	i1l1212
  5613  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  5614  0F72  1E0C               	btfss	12,4
  5615  0F73  2F83               	goto	i1l1212
  5616                           
  5617                           ;main.c: 360: if (uartTransmitBufferR != uartTransmitBufferW) {
  5618  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  5619  0F75  0834               	movf	_uartTransmitBufferR^(0+128),w	;volatile
  5620  0F76  0635               	xorwf	_uartTransmitBufferW^(0+128),w	;volatile
  5621  0F77  1903               	skipnz
  5622  0F78  2F80               	goto	i1l1220
  5623                           
  5624                           ;main.c: 361: temp = cGetFromTxBuffer();
  5625  0F79  27A2  120A  158A   	fcall	_cGetFromTxBuffer
  5626  0F7C  00F7               	movwf	erdem@temp
  5627                           
  5628                           ;main.c: 362: TXREG = temp;
  5629  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5630  0F7E  0099               	movwf	25	;volatile
  5631                           
  5632                           ;main.c: 363: } else {
  5633  0F7F  2F83               	goto	i1l1212
  5634  0F80                     i1l1220:	
  5635                           
  5636                           ;main.c: 364: TXIE = 0;
  5637  0F80  120C               	bcf	12,4
  5638                           
  5639                           ;main.c: 365: TXIF = 0;
  5640  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  5641  0F82  120C               	bcf	12,4
  5642  0F83                     i1l1212:	
  5643  0F83  0876               	movf	??_erdem+2,w
  5644  0F84  008A               	movwf	10
  5645  0F85  0875               	movf	??_erdem+1,w
  5646  0F86  0084               	movwf	4
  5647  0F87  0E74               	swapf	??_erdem^(0+-128),w
  5648  0F88  0083               	movwf	3
  5649  0F89  0EFE               	swapf	126,f
  5650  0F8A  0E7E               	swapf	126,w
  5651  0F8B  0009               	retfie
  5652  0F8C                     __end_of_erdem:	
  5653  0F8C                     __ptext650:	
  5654 ;; =============== function _vAddToUartReceiveBuffer ends ============
  5655                           
  5656                           
  5657 ;; *************** function _vCheckError *****************
  5658 ;; Defined at:
  5659 ;;		line 97 in file "../src/uart.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;		None
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  a               1    0        unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;		None               void
  5666 ;; Registers used:
  5667 ;;		wreg
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 60/0
  5671 ;;		Unchanged: FFF9F/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         0       0       0       0       0
  5674 ;;      Locals:         0       0       0       0       0
  5675 ;;      Temps:          0       0       0       0       0
  5676 ;;      Totals:         0       0       0       0       0
  5677 ;;Total ram usage:        0 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_erdem
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685  0F8C                     _vCheckError:	
  5686                           
  5687                           ;uart.c: 99: if ( OERR )
  5688                           
  5689                           ; Regs used in _vCheckError: [wreg]
  5690  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  5691  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  5692  0F8E  1C98               	btfss	24,1
  5693  0F8F  2F92               	goto	i1l2351
  5694                           
  5695                           ;uart.c: 100: {
  5696                           ;uart.c: 101: CREN =0;
  5697  0F90  1218               	bcf	24,4
  5698                           
  5699                           ;uart.c: 102: CREN = 1;
  5700  0F91  1618               	bsf	24,4
  5701  0F92                     i1l2351:	
  5702                           
  5703                           ;uart.c: 103: }
  5704                           ;uart.c: 104: if( FERR )
  5705  0F92  1918               	btfsc	24,2
  5706                           
  5707                           ;uart.c: 105: {
  5708                           ;uart.c: 106: a = RCREG;
  5709  0F93  081A               	movf	26,w	;volatile
  5710  0F94  0008               	return
  5711  0F95                     __end_of_vCheckError:	
  5712  0F95                     __ptext649:	
  5713 ;; =============== function _cGetFromTxBuffer ends ============
  5714                           
  5715                           
  5716 ;; *************** function _vAddToUartReceiveBuffer *****************
  5717 ;; Defined at:
  5718 ;;		line 518 in file "../src/main.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  data            1    wreg     unsigned char 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  data            1    0[COMMON] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;		None               void
  5725 ;; Registers used:
  5726 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 60/0
  5729 ;;		On exit  : 160/100
  5730 ;;		Unchanged: FFE9F/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5732 ;;      Params:         0       0       0       0       0
  5733 ;;      Locals:         1       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0
  5735 ;;      Totals:         1       0       0       0       0
  5736 ;;Total ram usage:        1 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_erdem
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744  0F95                     _vAddToUartReceiveBuffer:	
  5745                           
  5746                           ; Regs used in _vAddToUartReceiveBuffer: [wreg-fsr0h+status,2+status,0]
  5747                           ;vAddToUartReceiveBuffer@data stored from wreg
  5748  0F95  00F0               	movwf	vAddToUartReceiveBuffer@data
  5749                           
  5750                           ;main.c: 519: uartReceiveBuffer[ uartReceiveBufferW ] = data;
  5751  0F96  087B               	movf	_uartReceiveBufferW,w
  5752  0F97  3E10               	addlw	_uartReceiveBuffer& (0+255)
  5753  0F98  0084               	movwf	4
  5754  0F99  0870               	movf	vAddToUartReceiveBuffer@data,w
  5755  0F9A  1783               	bsf	3,7	;select IRP bank2
  5756  0F9B  0080               	movwf	0
  5757                           
  5758                           ;main.c: 520: uartReceiveBufferW++;
  5759  0F9C  0AFB               	incf	_uartReceiveBufferW,f	;volatile
  5760                           
  5761                           ;main.c: 521: if (uartReceiveBufferW == ( 90 )) {
  5762  0F9D  087B               	movf	_uartReceiveBufferW,w	;volatile
  5763  0F9E  3A5A               	xorlw	90
  5764  0F9F  1903               	btfsc	3,2
  5765                           
  5766                           ;main.c: 522: uartReceiveBufferW = 0;
  5767  0FA0  01FB               	clrf	_uartReceiveBufferW	;volatile
  5768  0FA1  0008               	return
  5769  0FA2                     __end_of_vAddToUartReceiveBuffer:	
  5770  0FA2                     __ptext648:	
  5771 ;; =============== function i1_setCommunicationTimeOut ends ============
  5772                           
  5773                           
  5774 ;; *************** function _cGetFromTxBuffer *****************
  5775 ;; Defined at:
  5776 ;;		line 578 in file "../src/main.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  value           1    0[COMMON] unsigned char 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      unsigned char 
  5783 ;; Registers used:
  5784 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5785 ;; Tracked objects:
  5786 ;;		On entry : 60/20
  5787 ;;		On exit  : 160/120
  5788 ;;		Unchanged: FFE9F/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       0       0       0       0
  5791 ;;      Locals:         1       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0
  5793 ;;      Totals:         1       0       0       0       0
  5794 ;;Total ram usage:        1 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_erdem
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802  0FA2                     _cGetFromTxBuffer:	
  5803                           
  5804                           ;main.c: 579: unsigned char value;
  5805                           ;main.c: 581: value = uartTransmitBuffer[uartTransmitBufferR];
  5806                           
  5807                           ; Regs used in _cGetFromTxBuffer: [wreg-fsr0h+status,2+status,0]
  5808  0FA2  0834               	movf	_uartTransmitBufferR^(0+128),w
  5809  0FA3  3E90               	addlw	_uartTransmitBuffer& (0+255)
  5810  0FA4  0084               	movwf	4
  5811  0FA5  1783               	bsf	3,7	;select IRP bank3
  5812  0FA6  0800               	movf	0,w
  5813  0FA7  00F0               	movwf	cGetFromTxBuffer@value
  5814                           
  5815                           ;main.c: 582: uartTransmitBufferR++;
  5816  0FA8  0AB4               	incf	_uartTransmitBufferR^(0+128),f	;volatile
  5817                           
  5818                           ;main.c: 583: if (uartTransmitBufferR == ( 60 )) {
  5819  0FA9  0834               	movf	_uartTransmitBufferR^(0+128),w	;volatile
  5820  0FAA  3A3C               	xorlw	60
  5821  0FAB  1903               	btfsc	3,2
  5822                           
  5823                           ;main.c: 584: uartTransmitBufferR = 0;
  5824  0FAC  01B4               	clrf	_uartTransmitBufferR^(0+128)	;volatile
  5825                           
  5826                           ;main.c: 585: }
  5827                           ;main.c: 586: return value;
  5828  0FAD  0870               	movf	cGetFromTxBuffer@value,w
  5829  0FAE  0008               	return
  5830  0FAF                     __end_of_cGetFromTxBuffer:	
  5831  0FAF                     __ptext646:	
  5832 ;; =============== function _erdem ends ============
  5833                           
  5834                           
  5835 ;; *************** function _restartUSR_K2 *****************
  5836 ;; Defined at:
  5837 ;;		line 610 in file "../src/main.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;		None               void
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0, pclath, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 60/20
  5848 ;;		On exit  : 60/20
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5851 ;;      Params:         0       0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0
  5853 ;;      Temps:          2       0       0       0       0
  5854 ;;      Totals:         2       0       0       0       0
  5855 ;;Total ram usage:        2 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    1
  5858 ;; This function calls:
  5859 ;;		i1_setCommunicationTimeOut
  5860 ;; This function is called by:
  5861 ;;		_erdem
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864  0FAF                     _restartUSR_K2:	
  5865                           
  5866                           ;main.c: 611: (PORTCbits.RC3) = 1;
  5867                           
  5868                           ; Regs used in _restartUSR_K2: [wreg+status,2+status,0+pclath+cstack]
  5869  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  5870  0FB0  1587               	bsf	7,3	;volatile
  5871                           
  5872                           ;main.c: 615: _delay((unsigned long)((40)*(8000000/4000.0)));
  5873  0FB1  3068               	movlw	104
  5874  0FB2  00F3               	movwf	??_restartUSR_K2+1
  5875  0FB3  30E4               	movlw	228
  5876  0FB4  00F2               	movwf	??_restartUSR_K2
  5877  0FB5                     u303_27:	
  5878  0FB5  0BF2               	decfsz	??_restartUSR_K2,f
  5879  0FB6  2FB5               	goto	u303_27
  5880  0FB7  0BF3               	decfsz	??_restartUSR_K2+1,f
  5881  0FB8  2FB5               	goto	u303_27
  5882  0FB9  0064               	clrwdt
  5883                           
  5884                           ;main.c: 616: _delay((unsigned long)((40)*(8000000/4000.0)));
  5885  0FBA  3068               	movlw	104
  5886  0FBB  00F3               	movwf	??_restartUSR_K2+1
  5887  0FBC  30E4               	movlw	228
  5888  0FBD  00F2               	movwf	??_restartUSR_K2
  5889  0FBE                     u304_27:	
  5890  0FBE  0BF2               	decfsz	??_restartUSR_K2,f
  5891  0FBF  2FBE               	goto	u304_27
  5892  0FC0  0BF3               	decfsz	??_restartUSR_K2+1,f
  5893  0FC1  2FBE               	goto	u304_27
  5894  0FC2  0064               	clrwdt
  5895                           
  5896                           ;main.c: 617: _delay((unsigned long)((40)*(8000000/4000.0)));
  5897  0FC3  3068               	movlw	104
  5898  0FC4  00F3               	movwf	??_restartUSR_K2+1
  5899  0FC5  30E4               	movlw	228
  5900  0FC6  00F2               	movwf	??_restartUSR_K2
  5901  0FC7                     u305_27:	
  5902  0FC7  0BF2               	decfsz	??_restartUSR_K2,f
  5903  0FC8  2FC7               	goto	u305_27
  5904  0FC9  0BF3               	decfsz	??_restartUSR_K2+1,f
  5905  0FCA  2FC7               	goto	u305_27
  5906  0FCB  0064               	clrwdt
  5907                           
  5908                           ;main.c: 618: _delay((unsigned long)((40)*(8000000/4000.0)));
  5909  0FCC  3068               	movlw	104
  5910  0FCD  00F3               	movwf	??_restartUSR_K2+1
  5911  0FCE  30E4               	movlw	228
  5912  0FCF  00F2               	movwf	??_restartUSR_K2
  5913  0FD0                     u306_27:	
  5914  0FD0  0BF2               	decfsz	??_restartUSR_K2,f
  5915  0FD1  2FD0               	goto	u306_27
  5916  0FD2  0BF3               	decfsz	??_restartUSR_K2+1,f
  5917  0FD3  2FD0               	goto	u306_27
  5918  0FD4  0064               	clrwdt
  5919                           
  5920                           ;main.c: 619: _delay((unsigned long)((40)*(8000000/4000.0)));
  5921  0FD5  3068               	movlw	104
  5922  0FD6  00F3               	movwf	??_restartUSR_K2+1
  5923  0FD7  30E4               	movlw	228
  5924  0FD8  00F2               	movwf	??_restartUSR_K2
  5925  0FD9                     u307_27:	
  5926  0FD9  0BF2               	decfsz	??_restartUSR_K2,f
  5927  0FDA  2FD9               	goto	u307_27
  5928  0FDB  0BF3               	decfsz	??_restartUSR_K2+1,f
  5929  0FDC  2FD9               	goto	u307_27
  5930  0FDD  0064               	clrwdt
  5931                           
  5932                           ;main.c: 620: _delay((unsigned long)((40)*(8000000/4000.0)));
  5933  0FDE  3068               	movlw	104
  5934  0FDF  00F3               	movwf	??_restartUSR_K2+1
  5935  0FE0  30E4               	movlw	228
  5936  0FE1  00F2               	movwf	??_restartUSR_K2
  5937  0FE2                     u308_27:	
  5938  0FE2  0BF2               	decfsz	??_restartUSR_K2,f
  5939  0FE3  2FE2               	goto	u308_27
  5940  0FE4  0BF3               	decfsz	??_restartUSR_K2+1,f
  5941  0FE5  2FE2               	goto	u308_27
  5942  0FE6  0064               	clrwdt
  5943                           
  5944                           ;main.c: 621: _delay((unsigned long)((40)*(8000000/4000.0)));
  5945  0FE7  3068               	movlw	104
  5946  0FE8  00F3               	movwf	??_restartUSR_K2+1
  5947  0FE9  30E4               	movlw	228
  5948  0FEA  00F2               	movwf	??_restartUSR_K2
  5949  0FEB                     u309_27:	
  5950  0FEB  0BF2               	decfsz	??_restartUSR_K2,f
  5951  0FEC  2FEB               	goto	u309_27
  5952  0FED  0BF3               	decfsz	??_restartUSR_K2+1,f
  5953  0FEE  2FEB               	goto	u309_27
  5954  0FEF  0064               	clrwdt
  5955                           
  5956                           ;main.c: 622: (PORTCbits.RC3) = 0;
  5957  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0FF2  1187               	bcf	7,3	;volatile
  5960                           
  5961                           ;main.c: 627: setCommunicationTimeOut(3000);
  5962  0FF3  30B8               	movlw	184
  5963  0FF4  00F0               	movwf	?i1_setCommunicationTimeOut
  5964  0FF5  300B               	movlw	11
  5965  0FF6  00F1               	movwf	?i1_setCommunicationTimeOut+1
  5966  0FF7  27F9               	fcall	i1_setCommunicationTimeOut
  5967  0FF8  0008               	return
  5968  0FF9                     __end_of_restartUSR_K2:	
  5969  0FF9                     __ptext647:	
  5970 ;; =============== function _restartUSR_K2 ends ============
  5971                           
  5972                           
  5973 ;; *************** function i1_setCommunicationTimeOut *****************
  5974 ;; Defined at:
  5975 ;;		line 605 in file "../src/main.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  setCommunica    2    0[COMMON] unsigned int 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;		None
  5980 ;; Return value:  Size  Location     Type
  5981 ;;		None               void
  5982 ;; Registers used:
  5983 ;;		wreg
  5984 ;; Tracked objects:
  5985 ;;		On entry : 60/0
  5986 ;;		On exit  : 60/20
  5987 ;;		Unchanged: FFF9F/0
  5988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5989 ;;      Params:         2       0       0       0       0
  5990 ;;      Locals:         0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0
  5992 ;;      Totals:         2       0       0       0       0
  5993 ;;Total ram usage:        2 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_restartUSR_K2
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001  0FF9                     i1_setCommunicationTimeOut:	
  6002                           
  6003                           ;main.c: 606: communicationControlTimer = value;
  6004                           
  6005                           ; Regs used in i1_setCommunicationTimeOut: [wreg]
  6006  0FF9  0871               	movf	i1setCommunicationTimeOut@value+1,w
  6007  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  6008  0FFB  00A7               	movwf	(_communicationControlTimer+1)^(0+128)	;volatile
  6009  0FFC  0870               	movf	i1setCommunicationTimeOut@value,w
  6010  0FFD  00A6               	movwf	_communicationControlTimer^(0+128)	;volatile
  6011                           
  6012                           ;main.c: 607: communicationControlTimer_En = 1;
  6013  0FFE  16F8               	bsf	_communicationControlTimer_En/(0+8),_communicationControlTimer_En& (0+7)
  6014  0FFF  0008               	return
  6015  1000                     __end_ofi1_setCommunicationTimeOut:	
  6016                           
  6017                           	psect	intentry
  6018  0004                     __pintentry:	
  6019                           ; Regs used in _erdem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6020                           
  6021  0004                     interrupt_function:	
  6022  007E                     saved_w	set	btemp
  6023  0004  00FE               	movwf	btemp
  6024  0005  0E03               	swapf	3,w
  6025  0006  00F4               	movwf	??_erdem
  6026  0007  0804               	movf	4,w
  6027  0008  00F5               	movwf	??_erdem+1
  6028  0009  080A               	movf	10,w
  6029  000A  00F6               	movwf	??_erdem+2
  6030  000B  120A  158A  2F02   	ljmp	_erdem
  6031                           
  6032                           	psect	text651
  6033  0000                     __ptext651:	
  6034 ;; =============== function _vCheckError ends ============
  6035                           
  6036  007E                     btemp	set	126	;btemp
  6037  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Mar 26 17:11:23 2018

                ?_vSendTempToBuffer 0035                                   pc 0002  
                ?_vResetPrintBuffer 0070                      ___bmul@product 0021  
                    _vInitializeADC 0C61                                  _T1 0806  
                                _T2 081C                                  _V1 0832  
                                _V2 0848                                  fsr 0004  
                  calgulateTemp@T1_ 006D                    calgulateTemp@T2_ 0069  
                  calgulateTemp@V1_ 006B                    calgulateTemp@V2_ 0067  
         ??_vAddToUartReceiveBuffer 0070                        ___ftadd@exp1 0062  
                      ___ftadd@exp2 0061                    ??_getTemperature 0059  
               ??_vSendTempToBuffer 0037               __end_of_calgulateTemp 02F5  
                      ___ftadd@sign 0060                                 _GIE 005F  
                               _RX9 00C6                                 _TX9 04C6  
               ??_vResetPrintBuffer 0020                     _vInitializeUart 0C9E  
                               fsr0 0004                                 indf 0000  
                      ___ftdiv@cntr 0042                        ___ftdiv@sign 0047  
           ??_cGetFromReceiveBuffer 0020                                l1230 0D00  
                              l1232 0D17                                l1225 0CE8  
                              l1313 02EF                                l1243 0CE5  
                              l1227 0CEE                                l1147 04B4  
                              l1228 0CF4                                l1316 0000  
                              l1229 0CFA                                l1246 0000  
                              l1254 0000                                l1265 0000  
                              l1281 0000                                l1268 0000  
                              l1276 0000                                _C1ON 083F  
                              l2348 0000                                _C2ON 0847  
                              l6101 0000                                l3390 0000  
                              l4406 0000                                l4510 034A  
                              l6111 0000                                l6103 0000  
                              l3384 0000                                l4416 0000  
                              l6113 0000                                l6105 0000  
                              l6201 0CCE                                l4530 0000  
                              l6107 0000                                l6115 0000  
                              l6211 0000                                l3387 0E65  
                              l7011 0543                                l7003 0523  
                              l6109 0000                                l6061 0000  
                              l6125 0000                                l6117 0000  
                              l6205 0CD4                                l6221 0000  
                              l6213 0000                                l7021 0591  
                              l4390 0000                                l4382 06F9  
                              l4454 0DC8                                l6071 0000  
                              l6063 0000                                l6151 0000  
                              l6127 0000                                l6119 0000  
                              l6223 0000                                l6215 0000  
                              l6231 0D06                                l6207 0000  
                              l7023 0000                                l7015 054C  
                              l7007 0534                                l4384 0000  
                              l4616 0000                                l4376 0000  
                              l6081 0000                                l6073 0000  
                              l6065 0000                                l6057 0000  
                              l6161 0000                                l6153 0000  
                              l6145 0000                                l6129 0000  
                              l6225 0000                                l6217 0000  
                              l6209 0000                                l6241 0000  
                              l6233 0000                                l7041 05C4  
                              l7033 05B8                                l6091 0000  
                              l6083 0000                                l6075 0000  
                              l6067 0000                                l6059 0000  
                              l6155 0000                                l6147 0000  
                              l6163 0000                                l6171 0000  
                              l6227 0000                                l6219 0000  
                              l6243 0000                                l6403 0000  
                              l4483 0794                                l7035 05BA  
                              l6093 0000                                l6085 0000  
                              l6077 0000                                l6069 0000  
                              l6157 0000                                l6149 0000  
                              l6165 0000                                l6173 0000  
                              l6181 0000                                l6405 072A  
                              l6501 06C0                                l7061 0000  
                              l7053 0000                                l7029 0000  
                              l6095 0000                                l6087 0000  
                              l6079 0000                                l6159 0000  
                              l6167 0000                                l6183 0000  
                              l6191 0000                                l6239 0C56  
                              l6423 0000                                l6431 0000  
                              l6511 06D7                                l6503 0000  
                              l7071 0000                                l7063 0000  
                              l7055 0000                                l7047 05CF  
                              l6097 0000                                l6089 0000  
                              l6169 0000                                l6177 0000  
                              l6193 0CB6                                l6361 0000  
                              l6417 073B                                l6425 074E  
                              l6409 0000                                l6441 0381  
                              l6433 0373                                l6521 0000  
                              l6513 0000                                l6505 0000  
                              l7065 0000                                l7057 0000  
                              l6099 0000                                l6179 0000  
                              l6195 0CBC                                l6451 0000  
                              l6443 038B                                l6523 0000  
                              l6515 0000                                l6603 0000  
                              l7067 0000                                l7059 0000  
                              l6197 0CC2                                l6357 0000  
                              l6453 0000                                l6445 0390  
                              l6437 0377                                l6429 0000  
                              l6461 031F                                l6509 0000  
                              l6533 0D6F                                l6525 0000  
                              l6621 0000                                l7069 0000  
                              l6199 0CC8                                l6359 0000  
                              l6375 0000                                l6367 0000  
                              l6383 0000                                l6455 0000  
                              l6447 0395                                l6439 037C  
                              l6471 0000                                l6463 0000  
                              l6519 0000                                l6551 0000  
                              l6543 0D85                                l6527 0000  
                              l6631 0000                                l6623 0000  
                              l6615 0000                                l6711 02FF  
                              l6703 0000                                l6377 0000  
                              l6369 0C71                                l6393 0713  
                              l6385 0000                                l6481 0346  
                              l6465 0000                                l6457 0000  
                              l6561 0DA2                                l6553 0000  
                              l6545 0000                                l6537 0D76  
                              l6529 0000                                l6641 0000  
                              l6633 07A7                                l6625 0000  
                              l6617 0000                                l6609 0783  
                              l6705 0000                                l6801 0000  
                              l6395 0000                                l6491 0362  
                              l6467 0000                                l6459 031A  
                              l6563 0DA7                                l6555 0D93  
                              l6539 0000                                l6643 0000  
                              l6627 0000                                l6619 0000  
                              l6715 0000                                l6803 06B1  
                              l6811 0000                                l6477 033E  
                              l6469 0000                                l6581 0DD3  
                              l6573 0DBF                                l6557 0000  
                              l6565 0DAC                                l6637 0000  
                              l6629 0000                                l6661 0000  
                              l6653 0E86                                l6709 0000  
                              l6733 0000                                l6725 0E12  
                              l6821 0000                                l6813 0000  
                              l6901 0000                                l6399 0000  
                              l6487 0354                                l6479 0000  
                              l6591 0000                                l6575 0DC4  
                              l6567 0DB0                                l6671 0000  
                              l6663 0000                                l6647 0000  
                              l6735 0000                                l6727 0000  
                              l6719 0000                                l6751 00B5  
                              l6743 0049                                l6831 0000  
                              l6815 0000                                l6807 0000  
                              l6911 0000                                l6903 0000  
                              l6489 0000                                l6585 0000  
                              l6569 0000                                l6681 0EB2  
                              l6673 0000                                l6665 0000  
                              l6729 0000                                l6833 0665  
                              l6825 0000                                l6817 0000  
                              l6809 0000                                l6913 0000  
                              l6905 0000                                l6499 0000  
                              l6595 0000                                l6587 0DDE  
                              l6579 0000                                l6683 0000  
                              l6675 0000                                l6667 0000  
                              l6659 0E97                                l6771 01C3  
                              l6763 0157                                l6755 00EB  
                              l6747 007F                                l6739 0000  
                              l6827 0650                                l6819 0000  
                              l6923 0000                                l6915 0000  
                              l6907 0000                                l6597 0000  
                              l6589 0000                                l6693 0EC8  
                              l6685 0000                                l6677 0EA8  
                              l6669 0000                                l6853 0000  
                              l6845 0000                                l6837 0000  
                              l6925 0000                                l6917 0000  
                              l6909 0000                                l6861 0000  
                              l6599 0DFA                                l6695 0000  
                              l6687 0000                                l6775 01F9  
                              l6767 018D                                l6759 0121  
                              l6783 0271                                l6847 0689  
                              l6839 0671                                l6951 04CB  
                              l6935 04AE                                l6919 0492  
                              l6871 0000                                l6863 0000  
                              l6855 0000                                l6697 0000  
                              l6689 0EBE                                l6785 0000  
                              l6793 0000                                l6945 04C1  
                              l6929 04A4                                l6873 0000  
                              l6865 0000                                l6857 0000  
                              l6699 0000                                l6779 022F  
                              l6795 0000                                l6963 04DF  
                              l6939 04B7                                l6891 0000  
                              l6883 0000                                l6875 0400  
                              l6867 0000                                l6859 0000  
                              l6789 02EB                                l6973 04E8  
                              l6957 04D5                                l6893 0000  
                              l6877 040A                                l6869 0000  
                              l6799 0000                                l6991 0000  
                              l6983 050B                                l6975 0000  
                              l6967 0000                                l6895 0000  
                              l6887 0000                                l6879 0000  
                              l6977 0000                                l6993 051A  
                              l6897 0000                                l6889 0000  
                              l6899 0000                                l6989 0000  
                              _BRGH 04C2                                _T0IE 005D  
                              _T0IF 005A                                _CREN 00C4  
                              _FERR 00C2                                u2020 0000  
                              u2025 0323                                u3017 0417  
                              u3027 04ED                                u2345 07B5  
                              u2505 00F2                                u2515 0128  
                              u2525 015E                                u2605 0644  
                              u2535 0194                                u2615 065B  
                              _PIE1 008C                                _PIE2 008D  
                              u2545 01CA                                u2465 001A  
          ?_setCommunicationTimeOut 0020                                u2555 0200  
                              u2475 0050                                u2635 067B  
                              u1925 0741                                u2565 0236  
                              u2485 0086                                u2575 02DD  
                              u2495 00BC                                u2655 0691  
                              u2585 02E9                                u2665 069B  
                              _PEIE 005E                                u1885 071C  
                              u2925 0560                                u2935 0579  
                              _RCIE 0465                                _RCIF 0065  
                              _OERR 00C1                                _TMR0 0001  
                              _SPEN 00C7                                _TXIE 0464  
                              _TXEN 04C5                                _TXIF 0064  
                              _SYNC 04C4                                _WPUB 0095  
                  _vInitializeBoard 0D18                                _main 03E3  
                      ___ftpack@arg 0020                                _itoa 06A4  
                      ___ftpack@exp 0023           __end_of_vSendTempToBuffer 06A4  
                              btemp 007E                                _utoa 06BB  
         __end_of_vResetPrintBuffer 0C61                                start 000E  
                 ___bmul@multiplier 0022                        ___ftmul@cntr 0055  
            __end_of_vInitializeADC 0C6F                        ___ftmul@sign 0056  
                      ___fttol@exp1 0034                        ___fttol@lval 0030  
                             _ADDEN 00C3                               ?_main 0070  
                             ?_itoa 002F                     __end_of___ftadd 0E0E  
                             _BRG16 0C3B                     __end_of___ftdiv 07DC  
                             _ANSEL 0188                               ?_utoa 0027  
                   __end_of___ftmul 0EE6                     __end_of___fttol 036B  
                    vSetRelay@relay 0021                     __end_of___lwdiv 072F  
                   __end_of___lwmod 0753                      vSetRelay@value 0020  
                             _RCREG 001A                               _SPBRG 0099  
                             _PORTA 0005                               _PORTB 0006  
                             _PORTC 0007                               _PORTD 0008  
                             _PORTE 0009                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _TRISD 0088                               _TRISE 0089  
                             _TXREG 0019                   ??_vSendDataToUart 0020  
             cGetFromTxBuffer@value 0070                       ___awtoft@sign 0038  
                      ?_vPulseRelay 0023                               _erdem 0F02  
                     ___ftpack@sign 0024                               _timer 00B3  
          _vAddToUartTransmitBuffer 0C8C                 _uartTransmitBufferR 00B4  
               _uartTransmitBufferW 00B5                               main@i 006F  
                    __pbitbssCOMMON 03C0                               pclath 000A  
   __end_of_vAddToUartReceiveBuffer 0FA2                   _uartReceiveBuffer 0110  
                             utoa@c 002D                __size_of_vCheckError 0009  
                             utoa@v 002B                               status 0003  
                             wtemp0 007E                   read_ADC@adcResult 0024  
                   ?_vInitializeADC 0070                        __end_of_main 0628  
                      __end_of_itoa 06BB                        __end_of_utoa 0705  
           __end_of_vInitializeUart 0CB4               vPulseRelay@timerValue 0023  
       vAddToUartReceiveBuffer@data 0070                              ??_main 00C9  
          calgulateTemp@temperature 0065                       ___fttol@sign1 002F  
                            ??_itoa 0033                              ??_utoa 002B  
                            ?_erdem 0070                              _ADRESH 001E  
                            _ADRESL 009E                    __end_of___awtoft 0310  
                  __end_of___ftpack 03A9                              _ANSELH 0189  
                            i1l1202 0F55                              i1l1220 0F80  
                            i1l1212 0F83                              i1l1204 0F15  
                            i1l1213 0F6E                              i1l1205 0F1D  
                            i1l1214 0F60                              i1l1206 0F25  
                            i1l1207 0F2D                              i1l1262 0000  
                            i1l1271 0000                              i1l1268 0000  
                            i1l2351 0F92                              i1l6311 0000  
                            i1l6321 0000                              i1l6331 0000  
                            i1l6323 0000                              i1l6307 0F62  
                            i1l6251 0000                              i1l6341 0000  
                            i1l6325 0000                              i1l6309 0F68  
                            i1l6261 0000                              i1l6253 0000  
                            i1l6245 0000                              i1l6327 0000  
                            i1l6255 0000                              i1l6337 0000  
                            i1l6345 0000                              i1l6329 0000  
                            i1l6273 0000                              i1l6265 0000  
                            i1l6257 0000                              i1l6339 0000  
                            i1l6347 0000                              i1l6291 0000  
                            i1l6283 0000                              i1l6349 0000  
                            i1l6285 0F48                              i1l6277 0F35  
                            i1l6269 0000                              i1l6293 0F53  
                            i1l6287 0000                              i1l6289 0000  
                            i1l6495 0000                              i1l6497 0000  
                            u303_27 0FB5                              u304_27 0FBE  
                            _INTCON 000B                              u305_27 0FC7  
                            u306_27 0FD0                              u307_27 0FD9  
                            u308_27 0FE2                              u309_27 0FEB  
                  __end_of___lwtoft 0EF8                              _OSCCON 008F  
                            _WDTCON 0105          __size_of_vSendTempToBuffer 007C  
        __size_of_vResetPrintBuffer 000D          ?i1_setCommunicationTimeOut 0070  
                            ___bmul 0C6F           __size_of_cGetFromTxBuffer 000D  
                         ??___ftadd 005D                           ??___ftdiv 003F  
                         ??___ftmul 004E                           ??___fttol 002C  
                         ??___lwdiv 0024                    __end_of_read_ADC 0E75  
                         ??___lwmod 0024                              _tim2Hz 00C8  
                            clrloop 0C44               ___ftmul@f3_as_product 0052  
                      __pdataCOMMON 007C                              saved_w 007E  
                _uartReceiveBufferR 007A                  _uartReceiveBufferW 007B  
                        ___ftadd@f1 0057                          ___ftadd@f2 005A  
                        ___ftdiv@f1 003C                          ___ftdiv@f2 0039  
                        ___ftdiv@f3 0043              calgulateTemp@milliVolt 0063  
                        ___awtoft@c 0035   __end_ofi1_setCommunicationTimeOut 1000  
               ___bmul@multiplicand 0020                          ___ftmul@f1 0048  
                        ___ftmul@f2 004B                          ___fttol@f1 0028  
                    __pcstackCOMMON 0070        _communicationControlTimer_En 03C5  
                     __end_of_erdem 0F8C                    ?_vInitializeUart 0070  
          __end_of_vInitializeBoard 0D4C                          ___lwtoft@c 0028  
          _currentTemperatureBuffer 00C0                             ??_erdem 0074  
                        _dataBuffer 00B6                          __pbssBANK1 00A0  
                        __pbssBANK2 0110                          __pbssBANK3 0190  
              __size_of_vPulseRelay 0032                  __size_of_vSetRelay 0032  
    __size_of_cGetFromReceiveBuffer 000F       __end_of_cGetFromReceiveBuffer 0C8C  
                     _RELAY_1_Timer 00AC                       _RELAY_2_Timer 00AD  
                     _RELAY_3_Timer 00AE                       _RELAY_4_Timer 00AF  
                     _RELAY_5_Timer 00B0               __end_of_restartUSR_K2 0FF9  
                        __pmaintext 03E3                             ?___bmul 0020  
  __size_of_setCommunicationTimeOut 0009                          __pintentry 0004  
                           _CM1CON0 0107                             _CM2CON0 0108  
                   _vSendDataToUart 0C3E                           ?___awtoft 0035  
                         ?___ftpack 0020                           ?___lwtoft 0028  
        ??_vAddToUartTransmitBuffer 0020                           ?_read_ADC 0020  
                  ??_vInitializeADC 0020              __size_of_calgulateTemp 02E4  
          ?_vAddToUartReceiveBuffer 0070                     __size_of___bmul 000E  
                  _cGetFromTxBuffer 0FA2                             ___ftadd 0D4C  
                           ___ftdiv 0772                             ___ftmul 0E75  
                           ___fttol 0310                             ___lwdiv 0705  
                           ___lwmod 072F                          ??___awtoft 0038  
                        ??___ftpack 0025                   __end_of_vSetRelay 0CE6  
                        ??___lwtoft 002B                             _tim10Hz 00C6  
                           _tim1min 00B2                             _tim1sec 00C7  
                     ??_vCheckError 0070                end_of_initialization 07FA  
           __size_of_getTemperature 004D                          ??_read_ADC 0022  
                           itoa@buf 0034                             itoa@val 002F  
       ??i1_setCommunicationTimeOut 0072             __end_of_vSendDataToUart 0C43  
                           utoa@buf 002E                             utoa@val 0027  
                         _PORTBbits 0006                           _PORTCbits 0007  
                         _PORTDbits 0008                       _calgulateTemp 0011  
             read_ADC@analogChannel 0023                           _TRISBbits 0086  
                         _TRISCbits 0087                         ___ftdiv@exp 0046  
               __end_of_vCheckError 0F95                         ___ftmul@exp 0051  
           _setCommunicationTimeOut 0C4B                      __end_of___bmul 0C7D  
                     __pidataCOMMON 0000    __end_of_vAddToUartTransmitBuffer 0C9E  
                 ?_vInitializeBoard 0070                      ?_calgulateTemp 0063  
                _uartTransmitBuffer 0190                    _RELAY_1_Timer_En 03C0  
         i1_setCommunicationTimeOut 0FF9                  ??_vInitializeBoard 0020  
               start_initialization 07DC                    _RELAY_2_Timer_En 03C1  
      vAddToUartTransmitBuffer@data 0020                    _RELAY_3_Timer_En 03C2  
                  _RELAY_4_Timer_En 03C3                    _RELAY_5_Timer_En 03C4  
                  ?_vSendDataToUart 0070                            ??___bmul 0021  
                 __size_of___awtoft 001B                   __size_of___ftpack 003E  
                       __pbssCOMMON 0079                   __size_of___lwtoft 0012  
          __size_of_vInitializeUart 0016                       __pcstackBANK0 0020  
                     __pcstackBANK1 00C9                _dataConversionBuffer 00AA  
                     ??_vPulseRelay 0024            __end_of_cGetFromTxBuffer 0FAF  
                    _getTemperature 0E0E      i1setCommunicationTimeOut@value 0070  
                vResetPrintBuffer@i 0020                         _vCheckError 0F8C  
                   getTemperature@m 005E           ??_setCommunicationTimeOut 0022  
                         __pnvBANK1 00C6               _cGetFromReceiveBuffer 0C7D  
                 __size_of_read_ADC 001A                    ___lwdiv@dividend 0022  
                          ?___ftadd 0057                           __ptext620 06A4  
                         __ptext621 0011                           __ptext630 036B  
                         __ptext622 0E0E                           __ptext631 072F  
                         __ptext623 0EE6                           __ptext640 0C8C  
                         __ptext632 0705                           __ptext624 02F5  
                         __ptext641 0C4B                           __ptext633 0C6F  
                         __ptext625 0E75                           __ptext650 0F8C  
                         __ptext642 0C61                           __ptext634 0E5B  
                         __ptext626 0772                           __ptext651 0000  
                         __ptext643 0C9E                           __ptext635 0C54  
                         __ptext627 0D4C                           __ptext619 0628  
                         __ptext644 0D18                           __ptext636 0CE6  
                         __ptext628 06BB                           __ptext645 0F02  
                         __ptext637 0CB4                           __ptext629 0310  
                         __ptext646 0FAF                           __ptext638 0C7D  
                         __ptext647 0FF9                           __ptext639 0C3E  
                         __ptext648 0FA2                           __ptext649 0F95  
                          ?___ftdiv 0039                            ?___ftmul 0048  
                          ?___fttol 0028                            ?___lwdiv 0020  
                          ?___lwmod 0020                     ??_calgulateTemp 0065  
                         _buffer_SM 007C                           __pstrings 0800  
                         _vSetRelay 0CB4              __size_of_restartUSR_K2 004A  
  __size_of_vAddToUartReceiveBuffer 000D              __end_of_getTemperature 0E5B  
                  ___lwdiv@quotient 0024                      __size_of_erdem 008A  
                         _inputPort 00B1                   interrupt_function 0004  
 __size_of_vAddToUartTransmitBuffer 0012                 __end_of_vPulseRelay 0D18  
         ?_vAddToUartTransmitBuffer 0070                         _bufferValue 0079  
              getTemperature@iTempP 005C                          _ADCON0bits 001F  
                       __stringbase 0805                          _ADCON1bits 009F  
   __end_of_setCommunicationTimeOut 0C54                           erdem@temp 0077  
                        ?_vSetRelay 0020                     ?_getTemperature 0057  
__size_ofi1_setCommunicationTimeOut 0007                   ??_vInitializeUart 0020  
            ?_cGetFromReceiveBuffer 0070                       _restartUSR_K2 0FAF  
                  __size_of___ftadd 00C2                    __size_of___ftdiv 006A  
           __size_of_vInitializeADC 000E                    __size_of___ftmul 0071  
                  __size_of___fttol 005B                    __size_of___lwdiv 002A  
                  __size_of___lwmod 0024                            ___awtoft 02F5  
                          ___ftpack 036B                    vPulseRelay@relay 0024  
                _currentTemperature 00A8                            ___lwtoft 0EE6  
                        _ANSELHbits 0189                     ___lwdiv@divisor 0020  
                   ___lwdiv@counter 0026                         _vPulseRelay 0CE6  
        cGetFromReceiveBuffer@value 0020           __size_of_vInitializeBoard 0034  
                          _read_ADC 0E5B                       __size_of_main 0245  
                     __size_of_itoa 0017                       __size_of_utoa 004A  
                    ?_restartUSR_K2 0070                            clear_ram 0C43  
      setCommunicationTimeOut@value 0020           _communicationControlTimer 00A6  
           _vAddToUartReceiveBuffer 0F95                         ??_vSetRelay 0021  
                          itoa@base 0031                        ?_vCheckError 0070  
                 ?_cGetFromTxBuffer 0070                            intlevel1 0000  
                ??_cGetFromTxBuffer 0070                    ___lwmod@dividend 0022  
           getTemperature@milliVolt 0059           vSendTempToBuffer@convData 0035  
                         stringcode 0800            __size_of_vSendDataToUart 0005  
                          utoa@base 0029                          _OPTION_REG 0081  
                   ___lwmod@divisor 0020                     ___lwmod@counter 0024  
                          stringdir 0800                            stringtab 0800  
                       _printBuffer 00A0                     ??_restartUSR_K2 0072  
                 _vSendTempToBuffer 0628                   _vResetPrintBuffer 0C54  
